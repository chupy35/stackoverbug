33224640
Elastic search tokenizing my query string, an email address. How to stop it?
<p>My type is user: email and username.</p>&#xA;&#xA;<p>The email field is set to type string, with a custom analyzer 'exact_lower': </p>&#xA;&#xA;<pre><code>index.analysis.analyzer.exact_lower:&#xA;  type: custom&#xA;  tokenizer: keyword&#xA;  filter : lowercase&#xA;</code></pre>&#xA;&#xA;<p>The problem is when I search for a full email address it is returning matches as if the '@' was a space. I assume due to it tokenizing the search.</p>&#xA;&#xA;<p>Query I'm sending in:</p>&#xA;&#xA;<pre><code>{&#xA;  "query" : {&#xA;    "query_string" : {&#xA;      "query" : "admin@example.com"&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It is returning anything matching 'admin' or 'example.com'. E.g. admin@example.com, admin@abc.com, and john@example.com. I want it to only return admin@example.com...</p>&#xA;&#xA;<p>I think I need to tell the search not to tokenize the <code>query_string</code>, but haven't been able to figure out how to do that.</p>&#xA;&#xA;<p>Any help is much appreciated! Thanks,&#xA;Seth</p>&#xA;
<p>That's like that because <code>query_string</code> is using the <code>_all</code> field as the default field to search on. And that field has its own analyzer.</p>&#xA;&#xA;<p>Defining an analyzer for your <code>email</code> field is not applying the same analyzer to the <code>_all</code> field. More details about <code>_all</code> you can find <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-all-field.html" rel="nofollow">here</a>.</p>&#xA;&#xA;<p>To match exactly the email address I suggest a different query:</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "term": {&#xA;      "email": {&#xA;        "value": "admin@example.com"&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>or using <code>query_string</code>, but referring to a specific field:</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "query_string": {&#xA;      "query": "email:admin@example.com"&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;