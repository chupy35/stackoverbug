32832933
facing problems with terms filter
<p>My mapping looks like the below.&#xA;"BID": {&#xA;    "type": "string"&#xA;},&#xA;"REGION": {&#xA;    "type": "string"&#xA;},</p>&#xA;&#xA;<p>Now I am trying to search for the records whose BID values are B100, B302. I've written below query. Though I've records with those ID values, I am not getting any results. Any clue where I am doing wrong?</p>&#xA;&#xA;<p>{"query": {"filtered": {"filter": {"terms": {"BID": ["B100","B302"]}}}}}</p>&#xA;
<p>Try using lower-case values, like:</p>&#xA;&#xA;<pre><code>{"query": {"filtered": {"filter": {"terms": {"BID": ["b100","b302"]}}}}}&#xA;</code></pre>&#xA;&#xA;<p>You need to do this because, since you did not specify an analyzer in the definition of <code>"BID"</code> in your mapping, the default <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-standard-analyzer.html" rel="nofollow">standard analyzer</a> is used, which will convert letters to lower-case.</p>&#xA;&#xA;<p>Alternatively, if you want to maintain the case in your index terms, you can add <code>"index": "not_analyzed"</code> to your mapping definition for <code>"BID"</code>.</p>&#xA;&#xA;<p>To test I set up an index like this:</p>&#xA;&#xA;<pre><code>PUT /test_index&#xA;{&#xA;   "mappings": {&#xA;      "doc": {&#xA;         "properties": {&#xA;            "BID": {&#xA;               "type": "string",&#xA;               "index": "not_analyzed"&#xA;            },&#xA;            "REGION": {&#xA;               "type": "string"&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>added a few docs:</p>&#xA;&#xA;<pre><code>POST /test_index/doc/_bulk&#xA;{"index":{"_id":1}}&#xA;{"REGION":"NA","BID":"B100"}&#xA;{"index":{"_id":2}}&#xA;{"REGION":"NA","BID":"B200"}&#xA;{"index":{"_id":3}}&#xA;{"REGION":"NA","BID":"B302"}&#xA;</code></pre>&#xA;&#xA;<p>and now your query works as written:</p>&#xA;&#xA;<pre><code>POST /test_index/_search&#xA;{&#xA;   "query": {&#xA;      "filtered": {&#xA;         "filter": {&#xA;            "terms": {&#xA;               "BID": [&#xA;                  "B100",&#xA;                  "B302"&#xA;               ]&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;...&#xA;{&#xA;   "took": 1,&#xA;   "timed_out": false,&#xA;   "_shards": {&#xA;      "total": 1,&#xA;      "successful": 1,&#xA;      "failed": 0&#xA;   },&#xA;   "hits": {&#xA;      "total": 2,&#xA;      "max_score": 1,&#xA;      "hits": [&#xA;         {&#xA;            "_index": "test_index",&#xA;            "_type": "doc",&#xA;            "_id": "1",&#xA;            "_score": 1,&#xA;            "_source": {&#xA;               "REGION": "NA",&#xA;               "BID": "B100"&#xA;            }&#xA;         },&#xA;         {&#xA;            "_index": "test_index",&#xA;            "_type": "doc",&#xA;            "_id": "3",&#xA;            "_score": 1,&#xA;            "_source": {&#xA;               "REGION": "NA",&#xA;               "BID": "B302"&#xA;            }&#xA;         }&#xA;      ]&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is some code I used for testing:</p>&#xA;&#xA;<p><a href="http://sense.qbox.io/gist/b4b4767501df7ad8b6459c4d96809d737a8811ec" rel="nofollow">http://sense.qbox.io/gist/b4b4767501df7ad8b6459c4d96809d737a8811ec</a></p>&#xA;