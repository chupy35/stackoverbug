29962491
Reduce number of shards in ElasticSearch
<p>Is it possible to reduce the number of shards in ElasticSearch search engine once the index is created ?</p>&#xA;&#xA;<p>I tried : </p>&#xA;&#xA;<pre><code>$ curl -XPUT 'localhost:9200/myindex/_settings' -d '{"index" : {"number_of_shards" : 3}}'&#xA;</code></pre>&#xA;&#xA;<p>But it gives an error :</p>&#xA;&#xA;<pre><code>{"error":"ElasticsearchIllegalArgumentException[can't change the number of shards for an index]","status":400}&#xA;</code></pre>&#xA;
<p>No, it's not possible. You could change a lot of stuff - e.g. number of replicas for each shard, or many other index settings, but not the number of shards.</p>&#xA;&#xA;<p>For more information - take a look here - <a href="http://www.elastic.co/guide/en/elasticsearch/reference/1.5/indices-update-settings.html" rel="nofollow">http://www.elastic.co/guide/en/elasticsearch/reference/1.5/indices-update-settings.html</a></p>&#xA;
<p>Ok. Like @Mysterion said, it's not possible to change the number of shards with zero-downtime directly with an index update. But there is another way around.</p>&#xA;&#xA;<p>You'll be needing to re-index your old index into an new index after creating it with the desired number of shards. (Like I said no zero-downtime)</p>&#xA;&#xA;<p>For that you can use the <strong>Scroll Search API</strong> :</p>&#xA;&#xA;<blockquote>&#xA;  <p>While a search request returns a single “page” of results, the scroll API can be used to retrieve large numbers of results (or even all results) from a single search request, in much the same way as you would use a cursor on a traditional database.</p>&#xA;  &#xA;  <p>Scrolling is not intended for real time user requests, but rather for processing large amounts of data, e.g. in order to reindex the contents of one index into a new index with a different configuration.</p>&#xA;  &#xA;  <p><strong>Client support for scrolling and reindexing :</strong> &#xA;  Some of the officially supported clients provide helpers to assist with scrolled searches and reindexing of documents from one index to another:</p>&#xA;  &#xA;  <p>Perl&#xA;  See <a href="https://metacpan.org/pod/Search::Elasticsearch::Bulk" rel="nofollow noreferrer">Search::Elasticsearch::Bulk</a> and <a href="https://metacpan.org/pod/Search::Elasticsearch::Scroll" rel="nofollow noreferrer">Search::Elasticsearch::Scroll</a></p>&#xA;  &#xA;  <p>Python&#xA;  See <a href="http://elasticsearch-py.readthedocs.org/en/master/helpers.html" rel="nofollow noreferrer">elasticsearch.helpers.*</a></p>&#xA;</blockquote>&#xA;&#xA;<p>For more information about the Scroll Search API, I suggest the <a href="http://www.elastic.co/guide/en/elasticsearch/reference/1.4/search-request-scroll.html" rel="nofollow noreferrer">official documentation</a></p>&#xA;&#xA;<p>And you might also want to take a look at this answer <a href="https://stackoverflow.com/a/26371327/3415409">here</a>, maybe it can also give you some ideas in case you are using Java.</p>&#xA;
<p>This is no longer true, with 5.x you can shring the number of indexes to a whole fraction. For example from 12 you could go down to 1, 2, 3 or 6 (see the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-shrink-index.html" rel="nofollow noreferrer">docs</a>). But you must put it to read-only mode and naturally the shrinking process requires lots of IO.</p>&#xA;