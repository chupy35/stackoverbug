32714362
How can I sort Elastic Search query results based on relevancy?
<p>I am trying to do a search in <code>elastic search</code> server. </p>&#xA;&#xA;<p>Below is my case:</p>&#xA;&#xA;<p>Given a term <code>"Hello World"</code> to the search API, return me all the documents &#xA;with:</p>&#xA;&#xA;<ol>&#xA;<li>exact pattern "Hello World"</li>&#xA;<li>"Hello" AND "world"</li>&#xA;<li>"Hello" OR "world"</li>&#xA;</ol>&#xA;&#xA;<p>I want to do the above in a single query. I am aware that individually all of them can be done using match_phrase, and default_operator for OR/AND.&#xA;But I want all the three to be done in a single query.</p>&#xA;&#xA;<p>I want the results to be sorted based on relevancy. So if a document contains the exact phrase, it is most relevant.If the document contains both the words (AND) some where in it, it is moderately relevant. And if the document contains at least one of the word(OR), it is least relevant.</p>&#xA;&#xA;<p>Is it possible in elastic search as of now ?</p>&#xA;
<p>This is something you might require: </p>&#xA;&#xA;<blockquote>&#xA;  <p>Query String</p>&#xA;</blockquote>&#xA;&#xA;<p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html" rel="nofollow">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html</a></p>&#xA;&#xA;<pre><code>{&#xA;  "query": &#xA;   {&#xA;    "query_string" : &#xA;       {&#xA;        "query" : "Hello World"&#xA;       }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This will fetch you all combinations :</p>&#xA;&#xA;<ul>&#xA;<li>Hello,  World,  Hello World,  World Hello.</li>&#xA;</ul>&#xA;
<p>You want to check <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-bool-query.html" rel="nofollow">Bool Query</a> and possibly <a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/_boosting_query_clauses.html" rel="nofollow">Boosting Query Clauses</a>.</p>&#xA;&#xA;<p>For your example, you can do</p>&#xA;&#xA;<pre><code>{&#xA;    "query": {&#xA;        "bool": {&#xA;            "should": [&#xA;                {&#xA;                    "match": {&#xA;                        "FIELDNAME": {&#xA;                            "query": "Hello",&#xA;                            "boost": 1&#xA;                        }&#xA;                    }&#xA;                },&#xA;                {&#xA;                    "match": {&#xA;                        "FIELDNAME": {&#xA;                            "query": "World",&#xA;                            "boost": 1&#xA;                        }&#xA;                    }&#xA;                },&#xA;                {&#xA;                    "match_phrase": {&#xA;                        "FIELDNAME": {&#xA;                            "query": "Hello World",&#xA;                            "boost": 2&#xA;                        }&#xA;                    }&#xA;                }&#xA;            ],&#xA;            "minimum_should_match" : 1&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is asking that at least 1 between your three conditions is true (<code>minimum_should_match</code>). The more conditions are satisfied, the higher score the document will have (so it will be returned first), like you wished. You can <code>boost</code> the importance of a condition, here I went for doubling the importance of whole phrase match, but it's just an example.</p>&#xA;