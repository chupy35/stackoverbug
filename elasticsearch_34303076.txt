34303076
Google type query using Elasticsearch
<p>Suppose I have the following document:</p>&#xA;&#xA;<pre><code>{title:"Sennheiser HD 800"}&#xA;</code></pre>&#xA;&#xA;<p>I want to all this queries return this document.</p>&#xA;&#xA;<ul>&#xA;<li>senn </li>&#xA;<li>heise </li>&#xA;<li>sennheise </li>&#xA;<li>sennheiser </li>&#xA;<li>sennheiser 800</li>&#xA;<li>sennheiser hd</li>&#xA;<li>hd </li>&#xA;<li>800 hd </li>&#xA;<li>hd ennheise </li>&#xA;</ul>&#xA;&#xA;<p>In short I want to find partial words either one or more.&#xA;In my map i am using this analyzer</p>&#xA;&#xA;<pre><code>{&#xA;  "settings": {&#xA;    "analysis": {&#xA;      "analyzer": {&#xA;        "case_insensitive_sort": {&#xA;          "tokenizer": "keyword",&#xA;          "filter": [&#xA;            "lowercase"&#xA;          ]&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and the map</p>&#xA;&#xA;<pre><code>{&#xA;  "title": {&#xA;    "type": "string",&#xA;    "fields": {&#xA;      "raw": {&#xA;        "type": "string",&#xA;        "index": "not_analyzed"&#xA;      },&#xA;      "lower_case_sort": {&#xA;        "type": "string",&#xA;        "analyzer": "case_insensitive_sort"&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and the query is a simple string query</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "query_string": {&#xA;      "fields": [&#xA;        "title.lower_case_sort"&#xA;      ],&#xA;      "query": "*800 hd*"&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>For example this query fails.</p>&#xA;
<p>You need <a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/_ngrams_for_partial_matching.html" rel="nofollow">ngrams</a>.</p>&#xA;&#xA;<p>Here is a blog post I wrote up about it for <a href="http://qbox.io" rel="nofollow">Qbox</a>:</p>&#xA;&#xA;<p><a href="https://qbox.io/blog/an-introduction-to-ngrams-in-elasticsearch" rel="nofollow">https://qbox.io/blog/an-introduction-to-ngrams-in-elasticsearch</a></p>&#xA;&#xA;<p>(Note that <code>"index_analyzer"</code> no longer works in ES 2.x; use <code>"analyzer"</code> instead; <code>"search_analyzer"</code> still works, though.)</p>&#xA;&#xA;<p>Using this mapping (slightly modified from one in the blog post; I'll refer you there for an in-depth explanation):</p>&#xA;&#xA;<pre><code>PUT /test_index&#xA;{&#xA;   "settings": {&#xA;      "analysis": {&#xA;         "filter": {&#xA;            "ngram_filter": {&#xA;               "type": "ngram",&#xA;               "min_gram": 2,&#xA;               "max_gram": 20&#xA;            }&#xA;         },&#xA;         "analyzer": {&#xA;            "ngram_analyzer": {&#xA;               "type": "custom",&#xA;               "tokenizer": "standard",&#xA;               "filter": [&#xA;                  "lowercase",&#xA;                  "ngram_filter"&#xA;               ]&#xA;            }&#xA;         }&#xA;      }&#xA;   },&#xA;   "mappings": {&#xA;      "doc": {&#xA;         "properties": {&#xA;            "title": {&#xA;               "type": "string",&#xA;               "analyzer": "ngram_analyzer",&#xA;               "search_analyzer": "standard"&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>index your document:</p>&#xA;&#xA;<pre><code>POST /test_index/doc/1&#xA;{&#xA;   "title": "Sennheiser HD 800"&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and then any of your listed queries work, in the following form:</p>&#xA;&#xA;<pre><code>POST /test_index/_search&#xA;{&#xA;   "query": {&#xA;      "match": {&#xA;         "title": {&#xA;            "query": "heise hd 800",&#xA;            "operator": "and"&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If you only have a single term, then you don't need the <code>"operator"</code> part:</p>&#xA;&#xA;<pre><code>POST /test_index/_search&#xA;{&#xA;   "query": {&#xA;      "match": {&#xA;         "title": "hd"&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is some code I used to play around with it:</p>&#xA;&#xA;<p><a href="http://sense.qbox.io/gist/a9accf67f1713ca99819f45ce0ac28adaea691a9" rel="nofollow">http://sense.qbox.io/gist/a9accf67f1713ca99819f45ce0ac28adaea691a9</a></p>&#xA;