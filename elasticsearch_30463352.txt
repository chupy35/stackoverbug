30463352
Sort based on string value in elastic search
<p>I have field called "rating" in data. The value of this field,would be one of the following "good","average" or "bad". What Im trying to get is to sort the documents according to the "rating" field values they posses. Since the field value is a string how can i do a sort based on that value?</p>&#xA;
<p>As far as I understand,you want the values in the "rating" field to be given weights and then sort them in the descending order.&#xA;You can use the following script for that:</p>&#xA;&#xA;<pre><code> "sort": {&#xA;    "_script": {&#xA;      "script": "factor.get(doc[\"rating\"].value)",&#xA;      "type": "number",&#xA;      "params": {&#xA;        "factor": {&#xA;          "good": 2,&#xA;          "average": 1,&#xA;          "bad": 0&#xA;        }&#xA;      },&#xA;      "order": "desc"&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>This will give the elements in the "rating" array numerical values and then sort the documents in the descending order.&#xA;More on this can be found in <a href="http://blog.qbox.io/elasticsearch-scripting-sorting" rel="nofollow">here</a></p>&#xA;
<p>You can <a href="https://www.elastic.co/guide/en/elasticsearch/guide/master/multi-fields.html" rel="nofollow">sort on a text field</a> (I recommend to do that on non-analyzed fields), the documents will be sorted in <em>alphabetical order</em> if sorted in ascending order and in reverse alphabetical order if sorted in descending order.</p>&#xA;&#xA;<p>Example:</p>&#xA;&#xA;<pre><code>POST index/type/_search&#xA;{&#xA;    "query":{&#xA;        "match_all": {}&#xA;    },&#xA;    "sort":{"my_not_analyzed_field":{"order":"asc"} }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This code will match every document in index <em>index</em> of type <em>type</em> and will sort them in alphabetical order.</p>&#xA;&#xA;<p>NB: It theoretically works on analyzed fields but the results will be surprising if the contents have been tokenized since the results will not be sorted on the basis of the start of the string but using any word (token) of the string, taking the more "advantageous" one.</p>&#xA;