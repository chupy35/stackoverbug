32341279
Elasticsearch aggregation doesn't work with nested-type fields
<p>I can't make elasticsearch aggregation+filter to work with nested fields. The data schema (relevant part) is like this:</p>&#xA;&#xA;<pre><code>"mappings": {&#xA;  "rb": {&#xA;    "properties": {&#xA;      "project": {&#xA;        "type": "nested",&#xA;        "properties": {&#xA;          "age": {&#xA;            "type": "long"&#xA;          },&#xA;          "name": {&#xA;            "type": "string",&#xA;            "index": "not_analyzed"&#xA;          }&#xA;        }&#xA;      }    &#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Essentially "rb" object contains a nested field called "project" which contains two more fields - "name" and "age". Query I'm running:</p>&#xA;&#xA;<pre><code>"aggs": {&#xA;  "root": {&#xA;    "aggs": {&#xA;      "group": {&#xA;        "aggs": {&#xA;          "filtered": {&#xA;            "aggs": {&#xA;              "order": {&#xA;                "percentiles": {&#xA;                  "field": "project.age",&#xA;                  "percents": ["50"]&#xA;                }&#xA;              }&#xA;            },&#xA;            "filter": {&#xA;              "range": {&#xA;                "last_updated": {&#xA;                  "gte": "2015-01-01",&#xA;                  "lt": "2015-07-01"&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        },&#xA;        "terms": {&#xA;          "field": "project.name",&#xA;          "min_doc_count": 5,&#xA;          "order": {&#xA;            "filtered&gt;order.50": "asc"&#xA;          },&#xA;          "shard_size": 10,&#xA;          "size": 10&#xA;        }&#xA;      }&#xA;    },&#xA;    "nested": {&#xA;      "path": "project"&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This query is supposed to produce top 10 projects (project.name field) which match the date filter, sorted by their median age, ignoring projects with less than 5 mentions in the database. Median should be calculated only for projects matching the filter (date range).</p>&#xA;&#xA;<p>Despite having more than a hundred thousands objects in the database, this query produces empty list. No errors, just empty response. I've tried it both on ES 1.6 and ES 2.0-beta.</p>&#xA;
<p>I've re-organized your aggregation query a bit and I could get some results showing up. The main point is type since you are aggregating around a <code>nested</code> type, I took out the <code>filter</code> aggregation on the <code>last_updated</code> field and moved it up the hierarchy as the first aggregation. Then comes the <code>nested</code> aggregation on the <code>project</code> field and finally the <code>terms</code> and the <code>percentile</code>.</p>&#xA;&#xA;<p>That seems to work out pretty well. Please try.</p>&#xA;&#xA;<pre><code>{&#xA;  "size": 0,&#xA;  "aggs": {&#xA;    "filtered": {&#xA;      "filter": {&#xA;        "range": {&#xA;          "last_updated": {&#xA;            "gte": "2015-01-01",&#xA;            "lt": "2015-07-01"&#xA;          }&#xA;        }&#xA;      },&#xA;      "aggs": {&#xA;        "root": {&#xA;          "nested": {&#xA;            "path": "project"&#xA;          },&#xA;          "aggs": {&#xA;            "group": {&#xA;              "terms": {&#xA;                "field": "project.name",&#xA;                "min_doc_count": 5,&#xA;                "shard_size": 10,&#xA;                "order": {&#xA;                  "order.50": "asc"&#xA;                },&#xA;                "size": 10&#xA;              },&#xA;              "aggs": {&#xA;                "order": {&#xA;                  "percentiles": {&#xA;                    "field": "project.age",&#xA;                    "percents": [&#xA;                      "50"&#xA;                    ]&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;