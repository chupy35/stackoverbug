32267353
Elasticsearch bool filter for multiple conditions on same element of array
<p>I'm trying to create a query/filter that matches a document only if a number of conditions are met <strong>on the same item</strong> of an array.</p>&#xA;&#xA;<p>Let's say this is the document:</p>&#xA;&#xA;<pre><code>{&#xA;  arr: [&#xA;    { "f1" : "a" , f2 : true },&#xA;    { "f1" : "b" , f2 : false}&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I want to be able to retrieve documents that have N conditions matching on the same element. For example: <code>arr.f1 == "a" AND arr.f2 == true</code> should match the document but <code>arr.f1 == "b" AND arr.f2 == true</code> should not.</p>&#xA;&#xA;<p>I'm trying nested bool filters (I have other filters apart from this one) but it doesn't work, something in the lines of</p>&#xA;&#xA;<pre><code>"bool" : {&#xA;    "must": [&#xA;        { some other filter },&#xA;        {"bool": {"must" : [&#xA;            {"term" : {"arr.f1" : "a"}},&#xA;            {"term" : {"arr.f2" : true}},&#xA;        ] }}&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Any idea how to do that?&#xA;thanks</p>&#xA;&#xA;<p><strong>edit</strong>: &#xA;I changed the mapping and now a nested query works as per Val's response. I'm now not able to do an "exists" filter on the nested field:</p>&#xA;&#xA;<p>A simple <code>{ "filter" : {"exists" : { "field" : "arr" } } }</code> search returns no hits. How do I do that?</p>&#xA;&#xA;<p>edit: It looks like I need to do a nested exists filter to check that a field inside the nested object exists.&#xA;something like:</p>&#xA;&#xA;<pre><code>"filter" : {&#xA;       "nested" : {"path" : "arr", "filter" : {"exists" : { "field" : "f1" } }}&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>edit:&#xA;argh - now highlight doesn't work anymore: </p>&#xA;&#xA;<pre><code>   "highlight" : {&#xA;        "fields" : [&#xA;            {"arr.f1" : {}},&#xA;        ]&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>Worked around that by adding <code>include_in_parent : true</code> and querying both the nested field and the root object. It's just awful. If anyone has a better idea, they're more than welcome!</p>&#xA;&#xA;<pre><code>{   &#xA;    "query" : {&#xA;        "bool" : {&#xA;            "must": [&#xA;                {"term" : { "arr.f1" : "a" }},&#xA;                { "nested" : { "path" : "arr", &#xA;                   "query" :  { "bool" : { "must" : [ &#xA;                        {"term" : { "arr.f1" : "a" }},&#xA;                        {"term" : { "arr.f2" : true }}&#xA;                   ] } } &#xA;                }}&#xA;            ]&#xA;        }&#xA;    },&#xA;    "highlight" : {&#xA;        "fields" : [&#xA;            {"arr.f1" : {}},&#xA;        ]&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In case you're wondering: it's legacy stuff. I can't reindex right now (that would be the obvious solution) and I need a quick &amp; dirty workaround</p>&#xA;
<p>You need to set the type of your <code>arr</code> field as <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-nested-type.html" rel="nofollow"><code>nested</code></a> like this:</p>&#xA;&#xA;<pre><code>{&#xA;    "your_type": {&#xA;        "properties": {&#xA;            "arr": {&#xA;                "type": "nested",&#xA;                "properties": {&#xA;                    "f1": {"type":"string"},&#xA;                    "f2": {"type":"boolean"}&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then you need to use a <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-nested-query.html" rel="nofollow"><code>nested</code> query</a>:</p>&#xA;&#xA;<pre><code>{&#xA;    "nested" : {&#xA;        "path" : "arr",&#xA;        "query" : {&#xA;            "bool" : {&#xA;                "must" : [&#xA;                    {&#xA;                        "term" : {"arr.f1" : "a"}&#xA;                    },&#xA;                    {&#xA;                        "term" : {"arr.f2" : true}&#xA;                    }&#xA;                ]&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Your <code>exists</code> filter needs to specify the full field path</p>&#xA;&#xA;<pre><code>"filter" : {&#xA;       "nested" : {"path" : "arr", "filter" : {"exists" : { "field" : "arr.f1" } }}&#xA;}&#xA;</code></pre>&#xA;