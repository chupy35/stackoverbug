32894861
Aggregate only matched nested object values in ElasticSearch
<p>I need to sum only the values on the nested objects that match the query. It looks like ElasticSearch determines the documents matching the query and then sums across all of the nested objects. From the below outline I want to search on nestedobjects.objtype="A" and get back the sum of objvalue only for matching nestedobjects, I want to get the value 4. is this possible? If so, how?</p>&#xA;&#xA;<p>Here is the mapping</p>&#xA;&#xA;<pre><code>{&#xA;  "myindex": {&#xA;    "mappings": {&#xA;      "mytype": {&#xA;        "properties": {&#xA;           "nestedobjects": {&#xA;             "type": "nested",&#xA;             "include_in_parent": true,&#xA;             "properties": {&#xA;               "objtype": {&#xA;                 "type": "string"&#xA;               },&#xA;               "objvalue": {&#xA;                 "type": "integer"&#xA;               }&#xA;             }&#xA;           }&#xA;         }&#xA;       }&#xA;     }&#xA;   }&#xA; }&#xA;</code></pre>&#xA;&#xA;<p>Here are my documents</p>&#xA;&#xA;<pre><code>PUT /myindex/mytype/1&#xA;{&#xA;  "nestedobjects": [&#xA;    { "objtype": "A", "objvalue": 1 },&#xA;    { "objtype": "B", "objvalue": 2 }&#xA;  ]&#xA;}&#xA;PUT /myindex/mytype/2&#xA;{&#xA;  "nestedobjects": [&#xA;    { "objtype": "A", "objvalue": 3 },&#xA;    { "objtype": "B", "objvalue": 3 }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is my query code.</p>&#xA;&#xA;<pre><code>POST allscriptshl7/_search?search_type=count&#xA;{&#xA;  "query": {&#xA;    "filtered": {&#xA;      "query": {&#xA;        "query_string": {&#xA;          "query": "nestedobjects.objtype:A"&#xA;        }&#xA;      }&#xA;    }&#xA;  },&#xA;  "aggregations": {&#xA;    "my_agg": {&#xA;      "sum": {&#xA;        "field": "nestedobjects.objvalue"&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;
<p>Since both (outer) documents match the condition that one of their inner documents match the query, both outer documents are returned, and the aggregation is calculated against all of the inner documents belonging to those outer documents. Whew.</p>&#xA;&#xA;<p>Anyway, this seems to do what you're wanting, I think, using <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-filter-aggregation.html">filter aggregation</a>:</p>&#xA;&#xA;<pre><code>POST /myindex/_search?search_type=count&#xA;{&#xA;   "aggs": {&#xA;      "nested_nestedobjects": {&#xA;         "nested": {&#xA;            "path": "nestedobjects"&#xA;         },&#xA;         "aggs": {&#xA;            "filtered_nestedobjects": {&#xA;               "filter": {&#xA;                  "term": {&#xA;                     "nestedobjects.objtype": "a"&#xA;                  }&#xA;               },&#xA;               "aggs": {&#xA;                  "my_agg": {&#xA;                     "sum": {&#xA;                        "field": "nestedobjects.objvalue"&#xA;                     }&#xA;                  }&#xA;               }&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;...&#xA;{&#xA;   "took": 4,&#xA;   "timed_out": false,&#xA;   "_shards": {&#xA;      "total": 5,&#xA;      "successful": 5,&#xA;      "failed": 0&#xA;   },&#xA;   "hits": {&#xA;      "total": 2,&#xA;      "max_score": 0,&#xA;      "hits": []&#xA;   },&#xA;   "aggregations": {&#xA;      "nested_nestedobjects": {&#xA;         "doc_count": 4,&#xA;         "filtered_nestedobjects": {&#xA;            "doc_count": 2,&#xA;            "my_agg": {&#xA;               "value": 4,&#xA;               "value_as_string": "4.0"&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is some code I used to test it:</p>&#xA;&#xA;<p><a href="http://sense.qbox.io/gist/c1494619ff1bd0394d61f3d5a16cb9dfc229113a">http://sense.qbox.io/gist/c1494619ff1bd0394d61f3d5a16cb9dfc229113a</a></p>&#xA;&#xA;<p>Very well-structured question, by the way.</p>&#xA;