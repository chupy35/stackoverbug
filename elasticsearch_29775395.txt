29775395
Script to return array for scripted metric aggregation from combine
<p>For <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-scripted-metric-aggregation.html" rel="nofollow">scripted metric aggregation</a>  , in the example shown in the documentation , the combine script returns a single number. </p>&#xA;&#xA;<p>Instead here , can i pass an array or hash ?&#xA;I tried doing it , though it did not return any error , i am not able to access those values from reduce script.&#xA;In reduce script per shard i am getting an instance when converted to string read as 'Script2$_run_closure1@52ef3bd9'</p>&#xA;&#xA;<p>Kindly let me know , if this can be accomplished in any way.</p>&#xA;
<p>At least for <code>Elasticsearch</code> version 1.5.1 you can do so.</p>&#xA;&#xA;<p>For example, we can modify <code>Elasticsearch</code> example (<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-scripted-metric-aggregation.html" rel="nofollow">scripted metric aggregation</a>) to receive an average profit (profit divided by number of transactions):</p>&#xA;&#xA;<pre class="lang-python prettyprint-override"><code>{&#xA;    "query": {&#xA;        "match_all": {}&#xA;    },&#xA;    "aggs": {&#xA;        "avg_profit": {&#xA;            "scripted_metric": {&#xA;                "init_script": "_agg['transactions'] = []",&#xA;                "map_script": "if (doc['type'].value == \"sale\") { _agg.transactions.add(doc['amount'].value) } else { _agg.transactions.add(-1 * doc['amount'].value) }",&#xA;                "combine_script": "profit = 0; num_of_transactions = 0; for (t in _agg.transactions) { profit += t; num_of_transactions += 1 }; return [profit, num_of_transactions]",&#xA;                "reduce_script": "profit = 0; num_of_transactions = 0; for (a in _aggs) { profit += a[0] as int; num_of_transactions += a[1] as int }; return profit / num_of_transactions as float"&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>NOTE: this is just a demo for an array in the combine script, you can calculate average easily without using any arrays.</p>&#xA;&#xA;<p>The response will look like:</p>&#xA;&#xA;<pre class="lang-python prettyprint-override"><code>"aggregations" : {&#xA;    "avg_profit" : {&#xA;        "value" : 42.5&#xA;    }&#xA;}&#xA;</code></pre>&#xA;