32452829
Term Filter with "now" in elasticsearch 1.7.1
<p>When using a Term Filter, I'm not able to use <code>now</code> elasticsearch 1.7.1 anymore. It worked fine in previous versions, but now it returns:</p>&#xA;&#xA;<pre><code>nested: IllegalArgumentException[Invalid format: \"now/y\"]&#xA;</code></pre>&#xA;&#xA;<p>A query example is:</p>&#xA;&#xA;<pre><code>GET _search&#xA;{&#xA;  "size": 0,&#xA;  "aggs": {&#xA;    "price": {&#xA;      "nested": {&#xA;        "path": "prices"&#xA;      },&#xA;      "aggs": {&#xA;        "valid": {&#xA;          "filter": {&#xA;            "term": {&#xA;              "prices.referred_year": "now/y"&#xA;            }&#xA;          },&#xA;          "aggs": {&#xA;            "ranged": {&#xA;              "range": {&#xA;                "field": "prices.price",&#xA;                "ranges": [&#xA;                  {&#xA;                    "to": 10&#xA;                  },&#xA;                  {&#xA;                    "from": 10&#xA;                  }&#xA;                ]&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Schema:</p>&#xA;&#xA;<pre><code>curl -XPUT 'http://localhost:9200/test/' -d '{&#xA;  "mappings": {&#xA;    "product": {&#xA;      "properties": {&#xA;        "prices": {&#xA;          "type": "nested",&#xA;          "include_in_parent": true,&#xA;          "properties": {&#xA;            "price": {&#xA;              "type": "float"&#xA;            },&#xA;            "referred_year": {&#xA;              "type": "date",&#xA;              "format": "year"&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>Document example:</p>&#xA;&#xA;<pre><code>curl -XPUT 'http://localhost:9200/test/product/1' -d '{&#xA;  "prices": [&#xA;    {&#xA;      "referred_year": "2015",&#xA;      "price": "10.00"&#xA;    },&#xA;    {&#xA;      "referred_year": "2016",&#xA;      "price": "11.00"&#xA;    }&#xA;  ]&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>Expected result for the aggregation (gotten by substituting <code>now/y</code> with <code>2015</code>):</p>&#xA;&#xA;<pre><code>"aggregations": {&#xA;  "price": {&#xA;    "doc_count": 2,&#xA;    "valid": {&#xA;      "doc_count": 1,&#xA;      "ranged": {&#xA;        "buckets": [&#xA;          {&#xA;            "key": "*-10.0",&#xA;            "to": 10,&#xA;            "to_as_string": "10.0",&#xA;            "doc_count": 0&#xA;          },&#xA;          {&#xA;            "key": "10.0-*",&#xA;            "from": 10,&#xA;            "from_as_string": "10.0",&#xA;            "doc_count": 1&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><code>now/y</code> etc still works fine in the Range Filter and in queries.</p>&#xA;&#xA;<p>I appreciate any help on this. Thanks!</p>&#xA;&#xA;<p>------- UPDATE -------</p>&#xA;&#xA;<p>So, it seems <code>now</code> doesn't work in Term Filters at all, no matter the rounding.</p>&#xA;
<p>So, although I haven't found any documentation saying so, it seems using the <code>now</code> operator is not allowed in Term Filters. Which actually makes sense.</p>&#xA;&#xA;<p>The correct query would be:</p>&#xA;&#xA;<pre><code>GET test/_search&#xA;{&#xA;  "size": 0,&#xA;  "aggs": {&#xA;    "price": {&#xA;      "nested": {&#xA;        "path": "prices"&#xA;      },&#xA;      "aggs": {&#xA;        "valid": {&#xA;          "filter": {&#xA;            "range": {&#xA;              "prices.referred_year": {&#xA;                "gte": "now/y",&#xA;                "lte": "now/y"&#xA;              }&#xA;            }&#xA;          },&#xA;          "aggs": {&#xA;            "ranged": {&#xA;              "range": {&#xA;                "field": "prices.price",&#xA;                "ranges": [&#xA;                  {&#xA;                    "to": 10&#xA;                  },&#xA;                  {&#xA;                    "from": 10&#xA;                  }&#xA;                ]&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;