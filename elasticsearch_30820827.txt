30820827
Elasticsearch - location of fragments in a document
<p>I am executing a phrase query like the one below. It returns me the highlighted  fragments ordered by relevance. Naturally, I want the user to click on a fragment and I'd scroll the document to the corresponding location. However, I don't see any way in Elasticsearch to find out where the fragments are in the original document. Any ideas?</p>&#xA;&#xA;<pre><code>GET documents/doc/_search&#xA;{&#xA;   "query": {&#xA;        "match_phrase": {&#xA;            "text": {&#xA;                "query": "hello world",&#xA;                "slop":  10&#xA;            }&#xA;        }&#xA;    }, &#xA;    "highlight" : {&#xA;        "order" : "score",&#xA;        "fields" : {&#xA;            "text" : {"fragment_size" : 100, "number_of_fragments" : 10}&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;
<p>In the meantime we couldn't find a proper solution and ended up with the following hack (works very well for us):&#xA;Before indexing we annotate each word in the text with "[index]", so that "<em>some text to index</em>" becomes "<em>some[00] text[01] to[02] index[03]</em>". Then we use the char filter as shown below. When the highlights are returned we parse out the word positions from the highlight text.</p>&#xA;&#xA;<pre><code>"settings": {&#xA;    "analysis": {&#xA;      "char_filter": {&#xA;        "remove_annotation": {&#xA;          "type": "pattern_replace",&#xA;          "pattern": "\\[[0-9]+\\]",&#xA;          "replacement": ""&#xA;        }&#xA;      },&#xA;      "analyzer": {&#xA;        "annotated_english_language_analyzer": {&#xA;          "type": "custom",&#xA;          "char_filter": [&#xA;            "remove_annotation"&#xA;          ],&#xA;          ...&#xA;</code></pre>&#xA;&#xA;<p>Note, the annotation indexes should be padded to <code>log10(text_length)+1</code> digits, so that the width of the found highlights (after annotations removal) would not depend on where (beginning vs. end of the text) it was found.</p>&#xA;