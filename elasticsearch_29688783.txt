29688783
Elasticsearch Search by Index Type and Field
<p>I want to search in a single index type and filter it further by matching a single field. Let say I have books, movies and toys types. Now, I want to search a movie in Thriller genre, what I have to do? I have this code that doesn't work and produces some error:</p>&#xA;&#xA;<pre><code>{&#xA;            "from" : 0, &#xA;            "size" : 10,&#xA;            "query": {&#xA;                "filtered" : {&#xA;                    "filter" : {&#xA;                        "type" : { &#xA;                            "value" : "movies"&#xA;                        },&#xA;                        "term" : { &#xA;                            "genre" : "Thriller"&#xA;                        }&#xA;                    }&#xA;                }&#xA;            },&#xA;            "sort": [&#xA;                {&#xA;                    "date_entered" : {&#xA;                        "order": "desc"&#xA;                    }&#xA;                }&#xA;            ]&#xA;        }&#xA;</code></pre>&#xA;&#xA;<p>The error is this: </p>&#xA;&#xA;<pre><code>{"error":"SearchPhaseExecutionException[Failed to execute phase [query], all shards failed;&#xA;</code></pre>&#xA;
<p>Your syntax is wrong; you can't specify two filters that way. Try using a <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-bool-query.html" rel="nofollow"><code>bool must</code> filter</a>.</p>&#xA;&#xA;<p>I set up a simple index, and then added three docs of different types but with the same "genre":</p>&#xA;&#xA;<pre><code>PUT /test_index&#xA;&#xA;POST /test_index/_bulk&#xA;{"index":{"_type":"books"}}&#xA;{"genre":"Thriller"}&#xA;{"index":{"_type":"movies"}}&#xA;{"genre":"Thriller"}&#xA;{"index":{"_type":"toys"}}&#xA;{"genre":"Thriller"}&#xA;</code></pre>&#xA;&#xA;<p>Then ran this query:</p>&#xA;&#xA;<pre><code>POST /test_index/_search&#xA;{&#xA;   "from": 0,&#xA;   "size": 10,&#xA;   "query": {&#xA;      "filtered": {&#xA;         "query": {&#xA;            "match_all": {}&#xA;         },&#xA;         "filter": {&#xA;            "bool": {&#xA;               "must": [&#xA;                  {&#xA;                     "type": {&#xA;                        "value": "movies"&#xA;                     }&#xA;                  },&#xA;                  {&#xA;                     "term": {&#xA;                        "genre": "thriller"&#xA;                     }&#xA;                  }&#xA;               ]&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and got back the right doc:</p>&#xA;&#xA;<pre><code>{&#xA;   "took": 10,&#xA;   "timed_out": false,&#xA;   "_shards": {&#xA;      "total": 1,&#xA;      "successful": 1,&#xA;      "failed": 0&#xA;   },&#xA;   "hits": {&#xA;      "total": 1,&#xA;      "max_score": 1,&#xA;      "hits": [&#xA;         {&#xA;            "_index": "test_index",&#xA;            "_type": "movies",&#xA;            "_id": "uReb0g9KSLKS18sTATdr3A",&#xA;            "_score": 1,&#xA;            "_source": {&#xA;               "genre": "Thriller"&#xA;            }&#xA;         }&#xA;      ]&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Notice that I had to use lower-case "thriller" in the term filter. Since I didn't specify an analyzer, the <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-standard-analyzer.html" rel="nofollow">standard analyzer</a> will be used, which will transform the text "Thriller" into the term "thriller", so if I'm going to use a <code>term</code> filter I'll need to use the lower-case version. If I use a <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query.html" rel="nofollow">match query</a> instead, I can use "Thriller" as the query text.</p>&#xA;&#xA;<p>Here is the code I used to test:</p>&#xA;&#xA;<p><a href="http://sense.qbox.io/gist/2f5dc5f15f0ecb50fb9772bbf4d52849031be41d" rel="nofollow">http://sense.qbox.io/gist/2f5dc5f15f0ecb50fb9772bbf4d52849031be41d</a></p>&#xA;