30476493
Retrieving specific fields using the Elasticsearch Java API
<p>I am using the Java API for Elasticsearch.&#xA;Having saved entities into indexes, it is possible to retrieve them together with the complete source. However, I only want to retrieve selected fields, and that is not working.</p>&#xA;&#xA;<p>The folowing sample code:</p>&#xA;&#xA;<pre><code>SearchResponse response = client.prepareSearch("my-index")&#xA;   .setTypes("my-type")&#xA;   .setSearchType(SearchType.QUERY_AND_FETCH)&#xA;   .setFetchSource(true)&#xA;   .setQuery(QueryBuilders.termsQuery("field1", "1234"))&#xA;   .addFields("field1")&#xA;   .execute()&#xA;   .actionGet();&#xA;&#xA;for (SearchHit hit : response.getHits()){&#xA;   Map&lt;String, SearchHitField&gt; fields = hit.getFields();&#xA;   System.out.println(fields.size());&#xA;   Map map = hit.getSource();&#xA;   map.toString();&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>will retrieve the correct entities from the index, including the complete source.</p>&#xA;&#xA;<p>For example, this is a snippet of the response :</p>&#xA;&#xA;<pre><code>"hits" : {&#xA;  "total" : 1301,&#xA;  "max_score" : 0.99614644,&#xA;  "hits" : [ {&#xA;  "_index" : "my-index",&#xA;  "_type" : "my-type",&#xA;  "_id" : "AU2P68COpzIypBTd80np",&#xA;  "_score" : 0.99614644,&#xA;  "_source":{"field1":"1234", ...}]}&#xA;}, {&#xA;</code></pre>&#xA;&#xA;<p>However, while <code>response.getHits()</code> returns the expected number of hits, the <code>fields</code> and <code>source</code> within each hit is empty.</p>&#xA;&#xA;<p>I am expecting each hit to contain the field specified in the line:</p>&#xA;&#xA;<pre><code>.addFields("field1")&#xA;</code></pre>&#xA;&#xA;<p>Commenting out the line</p>&#xA;&#xA;<pre><code>.setFetchSource(true)&#xA;</code></pre>&#xA;&#xA;<p>will cause the response not to include the source at all.</p>&#xA;&#xA;<p>The version of Elasticsearch is 1.5.0</p>&#xA;&#xA;<p>The following is the maven dependency the Java API:</p>&#xA;&#xA;<pre><code>&lt;dependency&gt;&#xA;   &lt;groupId&gt;com.sksamuel.elastic4s&lt;/groupId&gt;&#xA;   &lt;artifactId&gt;elastic4s_2.11&lt;/artifactId&gt;&#xA;   &lt;version&gt;1.5.5&lt;/version&gt;&#xA;&lt;/dependency&gt;&#xA;</code></pre>&#xA;&#xA;<p>Obiously, for performance reasons, I don't want to have to retrieve the complete entity.&#xA;Does anyone know how to limit the retrieval to selected fields?&#xA;Thanks</p>&#xA;
<p>You can specify the fields you need using the <a href="https://github.com/elastic/elasticsearch/blob/master/src/main/java/org/elasticsearch/action/get/GetRequestBuilder.java#L148" rel="noreferrer"><code>setFetchSource(String[] includes, String[] excludes)</code> method</a>. Try this instead</p>&#xA;&#xA;<pre><code>SearchResponse response = client.prepareSearch("my-index")&#xA;   .setTypes("my-type")&#xA;   .setSearchType(SearchType.QUERY_AND_FETCH)&#xA;   .setFetchSource(new String[]{"field1"}, null)&#xA;   .setQuery(QueryBuilders.termsQuery("field1", "1234"))&#xA;   .execute()&#xA;   .actionGet();&#xA;&#xA;for (SearchHit hit : response.getHits()){&#xA;   Map map = hit.getSource();&#xA;   map.toString();&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><code>map</code> will only contain the fields you've specified.</p>&#xA;&#xA;<p>Note that <code>.setFetchSource("field1", null)</code> (if you need a single field) or <code>.setFetchSource("field*", null)</code> (if you need several wildcarded fields) would work, too.</p>&#xA;