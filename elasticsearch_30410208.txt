30410208
how to index for specific fields of documents using elasticsearch
<p>My requirement is to store specific fields of document to index in elasticsearch.&#xA;Example:&#xA;My document is </p>&#xA;&#xA;<pre><code>{&#xA;  "name":"stev",&#xA;  "age":26,&#xA;  "salary":25000&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is my document but i don't want indexing total document.I want store only name field.&#xA;I created one index emp and write mapping like below</p>&#xA;&#xA;<pre><code>"person" : {&#xA;    "_all" : {"enabled" : false},&#xA;    "properties" : {&#xA;        "name" : {&#xA;            "type" : "string", "store" : "yes"&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When see the index document</p>&#xA;&#xA;<pre><code>{&#xA;&#xA;    "took": 1,&#xA;    "timed_out": false,&#xA;    "_shards": {&#xA;        "total": 2,&#xA;        "successful": 2,&#xA;        "failed": 0&#xA;    },&#xA;    "hits": {&#xA;        "total": 2,&#xA;        "max_score": 1,&#xA;        "hits": [&#xA;            {&#xA;                "_index": "test",&#xA;                "_type": "test",&#xA;                "_id": "AU1_p0xAq8r9iH00jFB_",&#xA;                "_score": 1,&#xA;                "_source": { }&#xA;            }&#xA;            ,&#xA;            {&#xA;                "_index": "test",&#xA;                "_type": "test",&#xA;                "_id": "AU1_lMDCq8r9iH00jFB-",&#xA;                "_score": 1,&#xA;                "_source": { }&#xA;            }&#xA;        ]&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>name fields is not generated,Why?&#xA;any one help to me </p>&#xA;
<p>It's hard to tell what you're doing wrong from what you posted, but I can give you an example that works.</p>&#xA;&#xA;<p>Elasticsearch will, by default, index whatever source documents you give it. Every time it sees a new document field, it will create a mapping field with sensible defaults, and it will index them by default as well. If you want to exclude fields, you can set <code>"index": "no"</code> and <code>"store": "no"</code> in the mapping for each field you want to exclude. If you want that behavior to be the default for every field, you can use the <code>"_default_"</code> property for specifying that fields not be stored (though I couldn't get it to work for not indexing). </p>&#xA;&#xA;<p>You probably also will want to disable <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-source-field.html" rel="nofollow"><code>"_source"</code></a>, and use the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-fields.html" rel="nofollow"><code>"fields"</code></a> parameter in your search queries.</p>&#xA;&#xA;<p>Here is an example. The index definition looks like this:</p>&#xA;&#xA;<pre><code>PUT /test_index&#xA;{&#xA;   "mappings": {&#xA;      "person": {&#xA;         "_all": {&#xA;            "enabled": false&#xA;         },&#xA;         "_source": {&#xA;            "enabled": false&#xA;         },&#xA;         "properties": {&#xA;            "name": {&#xA;               "type": "string",&#xA;               "index": "analyzed", &#xA;               "store": "yes"&#xA;            },&#xA;            "age": {&#xA;                "type": "integer",&#xA;                "index": "no",&#xA;                "store": "no"&#xA;            },&#xA;            "salary": {&#xA;                "type": "integer",&#xA;                "index": "no",&#xA;                "store": "no"&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then I can add a few documents with the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-bulk.html" rel="nofollow">bulk api</a>:</p>&#xA;&#xA;<pre><code>POST /test_index/person/_bulk&#xA;{"index":{"_id":1}}&#xA;{"name":"stev","age":26,"salary":25000}&#xA;{"index":{"_id":2}}&#xA;{"name":"bob","age":30,"salary":28000}&#xA;{"index":{"_id":3}}&#xA;{"name":"joe","age":27,"salary":35000}&#xA;</code></pre>&#xA;&#xA;<p>Since I disabled <code>"_source"</code>, a simple query will return only ids:</p>&#xA;&#xA;<pre><code>POST /test_index/_search&#xA;...&#xA;{&#xA;   "took": 1,&#xA;   "timed_out": false,&#xA;   "_shards": {&#xA;      "total": 1,&#xA;      "successful": 1,&#xA;      "failed": 0&#xA;   },&#xA;   "hits": {&#xA;      "total": 3,&#xA;      "max_score": 1,&#xA;      "hits": [&#xA;         {&#xA;            "_index": "test_index",&#xA;            "_type": "person",&#xA;            "_id": "1",&#xA;            "_score": 1&#xA;         },&#xA;         {&#xA;            "_index": "test_index",&#xA;            "_type": "person",&#xA;            "_id": "2",&#xA;            "_score": 1&#xA;         },&#xA;         {&#xA;            "_index": "test_index",&#xA;            "_type": "person",&#xA;            "_id": "3",&#xA;            "_score": 1&#xA;         }&#xA;      ]&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But if I specify that I want the <code>"name"</code> field, I'll get it:</p>&#xA;&#xA;<pre><code>POST /test_index/_search&#xA;{&#xA;   "fields": [&#xA;      "name"&#xA;   ]&#xA;}&#xA;...&#xA;{&#xA;   "took": 1,&#xA;   "timed_out": false,&#xA;   "_shards": {&#xA;      "total": 1,&#xA;      "successful": 1,&#xA;      "failed": 0&#xA;   },&#xA;   "hits": {&#xA;      "total": 3,&#xA;      "max_score": 1,&#xA;      "hits": [&#xA;         {&#xA;            "_index": "test_index",&#xA;            "_type": "person",&#xA;            "_id": "1",&#xA;            "_score": 1,&#xA;            "fields": {&#xA;               "name": [&#xA;                  "stev"&#xA;               ]&#xA;            }&#xA;         },&#xA;         {&#xA;            "_index": "test_index",&#xA;            "_type": "person",&#xA;            "_id": "2",&#xA;            "_score": 1,&#xA;            "fields": {&#xA;               "name": [&#xA;                  "bob"&#xA;               ]&#xA;            }&#xA;         },&#xA;         {&#xA;            "_index": "test_index",&#xA;            "_type": "person",&#xA;            "_id": "3",&#xA;            "_score": 1,&#xA;            "fields": {&#xA;               "name": [&#xA;                  "joe"&#xA;               ]&#xA;            }&#xA;         }&#xA;      ]&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You can prove to yourself that the other fields were not stored by running:</p>&#xA;&#xA;<pre><code>POST /test_index/_search&#xA;{&#xA;   "fields": [&#xA;      "name", "age", "salary"&#xA;   ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>which will return the same result. I can also prove that the <code>"age"</code> field wasn't indexed by running this query, which would return a document if <code>"age"</code> had been indexed:</p>&#xA;&#xA;<pre><code>POST /test_index/_search&#xA;{&#xA;   "fields": [&#xA;      "name", "age"&#xA;   ],&#xA;   "query": {&#xA;      "term": {&#xA;         "age": {&#xA;            "value": 27&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;...&#xA;{&#xA;   "took": 1,&#xA;   "timed_out": false,&#xA;   "_shards": {&#xA;      "total": 1,&#xA;      "successful": 1,&#xA;      "failed": 0&#xA;   },&#xA;   "hits": {&#xA;      "total": 0,&#xA;      "max_score": null,&#xA;      "hits": []&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is a bunch of code I used for playing around with this. I wanted to use a <a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/default-mapping.html" rel="nofollow"><code>_default</code></a> mapping and/or field to handle this without having to specify the settings for each field. I was able to make it work in terms of not storing data, but each field was still indexed. </p>&#xA;&#xA;<p><a href="http://sense.qbox.io/gist/d84967923d6c0757dba5f44240f47257ba2fbe50" rel="nofollow">http://sense.qbox.io/gist/d84967923d6c0757dba5f44240f47257ba2fbe50</a></p>&#xA;