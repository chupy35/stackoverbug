28391529
style Property on JSX Element Not Updating Properly
<p>I have this component, </p>&#xA;&#xA;<pre><code>var ColorList = React.createClass({&#xA;  render: function(){&#xA;    var styles = {&#xA;      colorBG: {&#xA;        width: 100,&#xA;        height: 100,&#xA;        display: "inline-block",&#xA;        border: "1px solid black"&#xA;      }&#xA;    };&#xA;    var colors = [&#xA;      {color: "red", hex: "#E74C3C"},&#xA;      {color: "white", hex: "#ECF0F1"},&#xA;      {color: "blue", hex: "#3498DB"},&#xA;      {color: "yellow", hex: "#E7D171"},&#xA;      {color: "green", hex: "#7AE77C"}&#xA;    ];&#xA;    var colorList = colors.map(function(item){&#xA;      styles.colorBG.background = item.hex;&#xA;      return (&#xA;        &lt;span style={styles.colorBG} key={item.color}&gt;{styles.colorBG.background}&lt;/span&gt;&#xA;      )&#xA;    });&#xA;&#xA;    return (&#xA;      &lt;div&gt;&#xA;        {colorList}&#xA;      &lt;/div&gt;&#xA;    )&#xA;  }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>but what's interesting is that although the text in the element (styles.colorBG.background) is working properly, the background color of the element is just the last item in the array of colors. </p>&#xA;&#xA;<p>Any ideas?</p>&#xA;&#xA;<p><a href="http://jsfiddle.net/uo6264ex/" rel="nofollow">Fiddle Here</a></p>&#xA;
<p>The problem arises because you are setting <code>background</code> property every time on the actual <code>styles</code> object. If you <strong>deep copy</strong> your <code>styles</code> object, it should work fine.</p>&#xA;&#xA;<p>Here is my example with deep copy using <a href="http://facebook.github.io/react/docs/update.html#available-commands" rel="nofollow"><code>React.addons.update</code></a>. But you can use other deep copy methods too.  </p>&#xA;&#xA;<p>jsFiddle: <a href="http://jsfiddle.net/wmg0eq18/" rel="nofollow">http://jsfiddle.net/wmg0eq18/</a></p>&#xA;&#xA;<pre><code> var colorList = colors.map(function(item){&#xA;      // styles.colorBG.background = item.hex;&#xA;      var newStyle = React.addons.update(styles, {&#xA;          colorBG: {background:  {$set: item.hex}}&#xA;      });&#xA;      return &lt;span style={newStyle.colorBG} key={item.color}&gt;{styles.colorBG.background}&lt;/span&gt;;&#xA; });&#xA;</code></pre>&#xA;