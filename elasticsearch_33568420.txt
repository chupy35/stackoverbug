33568420
groupby query elasticsearch with given parameters
<p>I run a query that find documents math with given ip's and groupy them by ip each group should contain category,clientip,and respsize&#xA;"url": "<a href="http://pancake.apple.com/cmremoteconfig/2/default" rel="nofollow">http://pancake.apple.com/cmremoteconfig/2/default</a>",</p>&#xA;&#xA;<pre><code>           "clientmac": "ac:7f:3e:27:24:fc",&#xA;           "hierarchycode": "HIER_DIRECT/23.221.173.39",&#xA;           "user": "-",&#xA;           "duration": "129",&#xA;           "respsize": "2821",&#xA;           "clientip": "192.168.5.70",&#xA;           "loggingdate": "04/11/2015 07:26:20",&#xA;           "resultcode": "TCP_MISS/200",&#xA;           "reqmethod": "GET",&#xA;           "category": "11",&#xA;           "clientname": "192.168.5.70"&#xA;</code></pre>&#xA;&#xA;<p>what I try:</p>&#xA;&#xA;<pre><code>POST webproxylog/_search&#xA;{  &#xA;   "query":{  &#xA;      "filtered":{  &#xA;         "filter":{  &#xA;            "bool":{  &#xA;               "must":[  &#xA;                  {  &#xA;                     "terms":{  &#xA;                        "clientip":[  &#xA;                           "192.168.5.84",&#xA;                           "192.157.5.101"&#xA;                        ]&#xA;                     }&#xA;                  }&#xA;               ]&#xA;            }&#xA;         }&#xA;      }&#xA;   },&#xA;   "size":0,&#xA;   "aggs":{  &#xA;      "categories":{  &#xA;         "terms":{  &#xA;            "field":"category",&#xA;            "size":9999,&#xA;            "order":{  &#xA;               "sum_respsize":"desc"&#xA;            }&#xA;         },&#xA;         "aggs":{  &#xA;            "sum_respsize":{  &#xA;               "sum":{  &#xA;                  "field":"respsize"&#xA;               }&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>it returns: </p>&#xA;&#xA;<pre><code>"buckets": [&#xA;            {&#xA;               "key": "11",&#xA;               "doc_count": 2080,&#xA;               "sum_respsize": {&#xA;                  "value": 959711609&#xA;               }&#xA;            },&#xA;            {&#xA;               "key": "27",&#xA;               "doc_count": 1458,&#xA;               "sum_respsize": {&#xA;                  "value": 25747310&#xA;               }&#xA;            },...&#xA;</code></pre>&#xA;&#xA;<p>Actually its close I need; I want these buckets contains each given clientname as parameter. like this</p>&#xA;&#xA;<pre><code>"buckets": [&#xA;                {&#xA;                   "key": "11",&#xA;                   "clientip":"192.168.5.101"&#xA;                   "doc_count": 2080,&#xA;                   "sum_respsize": {&#xA;                      "value": 959711609&#xA;                   }&#xA;                },&#xA;                {&#xA;                   "key": "27",&#xA;                   "clientip":"192.168.5.84"&#xA;                   "doc_count": 1458,&#xA;                   "sum_respsize": {&#xA;                      "value": 25747310&#xA;                   }&#xA;                },&#xA;</code></pre>&#xA;
<p>Try this:</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "filtered": {&#xA;      "filter": {&#xA;        "bool": {&#xA;          "must": [&#xA;            {&#xA;              "terms": {&#xA;                "clientip": [&#xA;                  "192.168.5.84",&#xA;                  "192.157.5.101"&#xA;                ]&#xA;              }&#xA;            }&#xA;          ]&#xA;        }&#xA;      }&#xA;    }&#xA;  },&#xA;  "size": 0,&#xA;  "aggs": {&#xA;    "categories": {&#xA;      "terms": {&#xA;        "field": "category",&#xA;        "size": 9999,&#xA;        "order": {&#xA;          "sum_respsize": "desc"&#xA;        }&#xA;      },&#xA;      "aggs": {&#xA;        "sum_respsize": {&#xA;          "sum": {&#xA;            "field": "respsize"&#xA;          }&#xA;        },&#xA;        "ip_top_tags": {&#xA;          "top_hits": {&#xA;            "size": 1,&#xA;            "_source": {&#xA;              "include": "clientip"&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;