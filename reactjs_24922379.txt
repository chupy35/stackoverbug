24922379
Feasible to adapt JSX 'import' to use http?
<p>I'm currently brainstorming a http react component service (<a href="http://components.myCompany.com" rel="nofollow">http://components.myCompany.com</a>). It seems feasible, if the import directive could make an http request to grab a component. Then a consumer, likely compiling their JSX as a build step on the server side, could reference components coming from this service. E.g.</p>&#xA;&#xA;<pre><code>/**&#xA; * @jsx React.DOM&#xA; */&#xA;&#xA;module React from 'react';&#xA;import Timer from 'http://components.myCompany.com/Timer';&#xA;</code></pre>&#xA;&#xA;<p>I've spent some time rooting into the react-tools nodejs module. Enough to realize that I can't quickly deduce exactly how the import statement transforms into actual component JavaScript inlined to the eventual JS file. So, asking for others who know the transformation process well enough to address the feasibility of this.</p>&#xA;&#xA;<p>Thanks!</p>&#xA;
<p>You can transform all your components in modules and publish them in GitHub (or in a HTTP server), and set them as dependency using URLs</p>&#xA;&#xA;<p>On your package.json, you can set:</p>&#xA;&#xA;<pre><code>"dependencies": {&#xA;   "Timer": "http://components.myCompany.com/Timer.tar.gz"&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><a href="https://docs.npmjs.com/files/package.json#dependencies" rel="nofollow noreferrer">https://docs.npmjs.com/files/package.json#dependencies</a></p>&#xA;&#xA;<p>Later, you can import it in React:</p>&#xA;&#xA;<p><code>import Timer from 'Timer';</code></p>&#xA;