33972602
elasticsearch ngram analyzer return unexpected result
<p>I'm using ngram analyzer for indexing and standard analyzer for query.</p>&#xA;&#xA;<p>currently i have indexed multiphone and iphone.</p>&#xA;&#xA;<p>when i search for iphone the score and therefore relevancy of multiphone is higher than iphone.</p>&#xA;&#xA;<p>how should i build query in order to get higher score for iphone?</p>&#xA;&#xA;<p>the query that i execute is </p>&#xA;&#xA;<pre><code>"query": {&#xA;   "filtered": {&#xA;     "query": {&#xA;       "multi_match": {&#xA;         "query": "iphone",&#xA;           "fields": [&#xA;               "englishName",&#xA;               "aliasName"&#xA;            ]&#xA;        }&#xA;     },&#xA;</code></pre>&#xA;&#xA;<p>what i need is that iphone score be higher than multiphone.</p>&#xA;&#xA;<p>what about performance?</p>&#xA;
<p>I have answered similar question <a href="https://stackoverflow.com/questions/33833781/elasticsearch-partial-exact-scoring-with-edge-ngram-fuzziness/33834855#33834855">here</a></p>&#xA;&#xA;<p>Basically you need to add raw version of the field to your mapping. You could use <a href="https://www.elastic.co/guide/en/elasticsearch/reference/2.1/analysis-keyword-analyzer.html" rel="nofollow noreferrer">keyword analzyer</a> with <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-lowercase-tokenfilter.html?q=lowercase" rel="nofollow noreferrer">lowercase filter</a> or you can make it <code>"index" : "not_analyzed"</code> or even use default standard analyzer.</p>&#xA;&#xA;<p>Then you do a <code>bool</code> query and add a clause for the <code>exact match</code> and It will be scored higher.</p>&#xA;&#xA;<p><strong>EDIT</strong> : <strong>Example</strong></p>&#xA;&#xA;<p>You could map your englishName field as follow</p>&#xA;&#xA;<pre><code>englishName: {&#xA;    type: 'string',&#xA;    index_analyzer: 'ngram_analyzer',&#xA;    search_analyzer: 'standard',&#xA;    "fields": {&#xA;        "raw": {&#xA;            "type": "string",&#xA;            "index" : "not_analyzed" &lt;--- here&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You could do the same with aliasName&#xA;Then your query would look something like this</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "bool": {&#xA;      "should": [&#xA;        {&#xA;          "multi_match": {&#xA;            "query": "iphone",&#xA;            "fields": [&#xA;              "englishName",&#xA;              "aliasName"&#xA;            ]&#xA;          }&#xA;        },&#xA;        {&#xA;          "multi_match": {&#xA;            "query": "iphone",&#xA;            "fields": [&#xA;              "englishName.raw",&#xA;              "aliasName.raw"&#xA;            ],&#xA;            "boost": 5&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><em>iphone</em> will be scored higher with this query</p>&#xA;&#xA;<p>Hope this helps. </p>&#xA;