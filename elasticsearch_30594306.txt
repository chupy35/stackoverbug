30594306
ElasticSearch aggregating log entries with nested-aggs
<p>I've got some simple logfile-data in ES cluster, mappings are:</p>&#xA;&#xA;<pre><code>{&#xA;           "category": {&#xA;              "type": "string"&#xA;           },&#xA;           "element": {&#xA;              "type": "long"&#xA;           },&#xA;           "group": {&#xA;              "type": "string"&#xA;           },&#xA;           "seen_at": {&#xA;              "type": "date",&#xA;              "format": "dateOptionalTime"&#xA;           }&#xA;</code></pre>&#xA;&#xA;<p>}</p>&#xA;&#xA;<p>...which i want to aggregate in variuos time-based intervals and store in another index. I need intervals for each element (it's basically an ID of some resource) in each category/group. I came up with some nested-aggs:</p>&#xA;&#xA;<pre><code>{&#xA;    "size": 0,&#xA;    "aggs": {&#xA;        "categories": { &#xA;            "terms": {&#xA;                "field": "category"&#xA;            },&#xA;            "aggs": {&#xA;                "groups": {&#xA;                    "terms": {&#xA;                        "field": "group"&#xA;                    },&#xA;                    "aggs": {&#xA;                        "elements": {&#xA;                            "terms": {&#xA;                                "field": "element"&#xA;                            },&#xA;                            "aggs": {&#xA;                                "annual": {&#xA;                                    "date_histogram": {&#xA;                                        "field": "seen_at",&#xA;                                        "interval": "1d",&#xA;                                        "format": "yyyy-MM-dd"&#xA;                                    }&#xA;                                }&#xA;                            }        &#xA;                        }&#xA;                    }                    &#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>..but it seems to return only part of data (not all "element" IDs are in aggregated results). No timeouts, no errors. So i guess it's in something in my nested-aggs query. </p>&#xA;&#xA;<p>Any ideas?</p>&#xA;
<p>By default, only the 10 top-most buckets are returned in <code>terms</code> aggregations. But you can definitely change this behavior by adding a <code>size</code> parameter to increase that limit. See below I've increased the limit to 100, but you can increase more (or less) to better fit your needs.</p>&#xA;&#xA;<pre><code>{&#xA;    "size": 0,&#xA;    "aggs": {&#xA;        "categories": { &#xA;            "terms": {&#xA;                "field": "category",&#xA;                "size": 100                    &lt;----- increase size&#xA;            },&#xA;            "aggs": {&#xA;                "groups": {&#xA;                    "terms": {&#xA;                        "field": "group",&#xA;                        "size": 100            &lt;----- increase size&#xA;                    },&#xA;                    "aggs": {&#xA;                        "elements": {&#xA;                            "terms": {&#xA;                                "field": "element",&#xA;                                "size": 100    &lt;----- increase size&#xA;                            },&#xA;                            "aggs": {&#xA;                                "annual": {&#xA;                                    "date_histogram": {&#xA;                                        "field": "seen_at",&#xA;                                        "interval": "1d",&#xA;                                        "format": "yyyy-MM-dd"&#xA;                                    }&#xA;                                }&#xA;                            }        &#xA;                        }&#xA;                    }                    &#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;