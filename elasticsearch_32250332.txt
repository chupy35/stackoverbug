32250332
strange interaction between copy_to and analyze in elasticsearch
<p>I'm encoutering issues with analyzers in elasticseach when using <code>copy_to</code> fields and would like to know if this is a bug or working as designed.&#xA;Here's a dumbed-down example.</p>&#xA;&#xA;<p>Index is set up like this:</p>&#xA;&#xA;<pre><code>POST test/&#xA;{&#xA;    "mappings": {&#xA;        "doc" : {&#xA;            "properties" : {&#xA;                "metadata" : {&#xA;                    "type" : "string",&#xA;                    "index" : "analyzed",&#xA;                    "analyzer" : "french"&#xA;                },&#xA;                "author" : {&#xA;                    "type" : "string",&#xA;                    "index" : "analyzed",&#xA;                    "analyzer" : "standard",&#xA;                    "copy_to" : "metadata"&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>... then populated with one single document:</p>&#xA;&#xA;<pre><code>POST test/doc/&#xA;{&#xA;    "author" : "clément"&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm encoutering funky behaviors when searching on the <code>metadata</code> field.</p>&#xA;&#xA;<pre><code>POST test/doc/_search?pretty&#xA;{ "query": { "match": { "metadata": "clément" } } }&#xA;</code></pre>&#xA;&#xA;<p>Reply:</p>&#xA;&#xA;<pre><code>{&#xA;  "took" : 3,&#xA;  "timed_out" : false,&#xA;  "_shards" : {&#xA;    "total" : 5,&#xA;    "successful" : 5,&#xA;    "failed" : 0&#xA;  },&#xA;  "hits" : {&#xA;    "total" : 1,&#xA;    "max_score" : 0.30685282,&#xA;    "hits" : [ {&#xA;      "_index" : "test",&#xA;      "_type" : "doc",&#xA;      "_id" : "AU9vHqM5AZspzs43q2ir",&#xA;      "_score" : 0.30685282,&#xA;      "_source":{"author": "clément"}&#xA;    } ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>OK, found it.</p>&#xA;&#xA;<pre><code>POST test/_analyze?pretty&amp;field=doc.metadata&#xA;clément&#xA;</code></pre>&#xA;&#xA;<p>Reply:</p>&#xA;&#xA;<pre><code>{&#xA;  "tokens" : [ {&#xA;    "token" : "clement",&#xA;    "start_offset" : 0,&#xA;    "end_offset" : 7,&#xA;    "type" : "&lt;ALPHANUM&gt;",&#xA;    "position" : 1&#xA;  } ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Notice how the french analyzer removed the accent from <code>é</code>.</p>&#xA;&#xA;<p>Now if I try:</p>&#xA;&#xA;<pre><code>POST test/doc/_search?pretty&#xA;{ "query": { "match": { "metadata": "clement" } } }&#xA;</code></pre>&#xA;&#xA;<p>(with no accent in the request), I would expect the document to be found because the analyzer for the <code>metadata</code> field would yield the same result, but I find nothing:</p>&#xA;&#xA;<pre><code>{&#xA;  "took" : 2,&#xA;  "timed_out" : false,&#xA;  "_shards" : {&#xA;    "total" : 5,&#xA;    "successful" : 5,&#xA;    "failed" : 0&#xA;  },&#xA;  "hits" : {&#xA;    "total" : 0,&#xA;    "max_score" : null,&#xA;    "hits" : [ ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So it's behaving <strong>as if</strong> it used the standard analyzer both at index and search time (e.g. the analyzer from <code>doc.author</code>) instead of the french one and kept the accent the whole time.</p>&#xA;&#xA;<p>This is a dumbed-down setup I made to try and nail down the problem. In my actual setup, there are many more fields with different types and analyzers copied to <code>metadata</code> and I get the opposite behavior: I can find "clement" but not "clément" as if the french analyzer was used at index time but the standard analyzer was used at search time (but the analyze API always returns trivial results).</p>&#xA;&#xA;<p>So, am I getting something wrong or is this a bug in elasticsearch?</p>&#xA;&#xA;<p>By the way, elasticsearch version is 1.7.1 with Lucene 4.10.4.</p>&#xA;
<p>If I'm not mistaken, the french analyzer seems to return another result then the one your are expecting:</p>&#xA;&#xA;<pre><code>curl -XGET 'localhost:9200/_analyze?analyzer=french&amp;pretty' -d 'clément'&#xA;&#xA;{&#xA;  "tokens" : [ {&#xA;    "token" : "clement",&#xA;    "start_offset" : 0,&#xA;    "end_offset" : 7,&#xA;    "type" : "&lt;ALPHANUM&gt;",&#xA;    "position" : 1&#xA;  } ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And </p>&#xA;&#xA;<pre><code>curl -XGET 'localhost:9200/_analyze?analyzer=french&amp;pretty' -d 'clement'&#xA;&#xA;{&#xA;  "tokens" : [ {&#xA;    "token" : "cle",&#xA;    "start_offset" : 0,&#xA;    "end_offset" : 7,&#xA;    "type" : "&lt;ALPHANUM&gt;",&#xA;    "position" : 1&#xA;  } ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So no bug IMO with the <code>copy_to</code> feature but you probably need to adjust the <code>french</code> analyzer to meet your needs instead of using the default configuration: <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-lang-analyzer.html#french-analyzer" rel="nofollow">https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-lang-analyzer.html#french-analyzer</a></p>&#xA;&#xA;<p><code>cle</code> and <code>clement</code> are not equal. That explains why it does not match your <code>clement</code> query.</p>&#xA;