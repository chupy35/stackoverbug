30383905
Elasticsearch: Query for document containing two key-value pairs in an array
<p>How do I query for a document containing both of the key-value pairs "key1"-"value1" and "key2"-"value2"? I can't seem to find any documentation on this.</p>&#xA;&#xA;<p>I tried the query below but it returns no results even though there should be matching documents. Replacing must with should works though, but then when I put minimum_should_match = 100%, it also doesn't return any results. </p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "bool": {&#xA;      "must": [&#xA;        {&#xA;          "nested": {&#xA;            "path": "attributes",&#xA;            "query": {&#xA;              "bool": {&#xA;                "must": [&#xA;                  [&#xA;                    {&#xA;                      "match_phrase": {&#xA;                        "attributes.key": "key1"&#xA;                      }&#xA;                    },&#xA;                    {&#xA;                      "match_phrase": {&#xA;                        "attributes.value": "value1"&#xA;                      }&#xA;                    }&#xA;                  ],&#xA;                  [&#xA;                    {&#xA;                      "match_phrase": {&#xA;                        "attributes.key": "key2"&#xA;                      }&#xA;                    },&#xA;                    {&#xA;                      "match_phrase": {&#xA;                        "attributes.value": "value2"&#xA;                      }&#xA;                    }&#xA;                  ]&#xA;                ]&#xA;              }&#xA;            }&#xA;          }&#xA;        },&#xA;        [&#xA;          {&#xA;            "match_all": {&#xA;&#xA;            }&#xA;          }&#xA;        ]&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is how the mapping looks like:</p>&#xA;&#xA;<pre><code>{&#xA;    "index_name": {&#xA;        "mappings": {&#xA;            "type_name": {&#xA;                "properties": {&#xA;                    "attributes": {&#xA;                        "type": "nested",&#xA;                        "properties": {&#xA;                            "key": {&#xA;                                "type": "string",&#xA;                                "analyzer": "flat"&#xA;                            },&#xA;                            "value": {&#xA;                                "type": "string",&#xA;                                "analyzer": "flat"&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                }&#xA;            },&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Thanks a lot for your help.</p>&#xA;
<p>Try this:</p>&#xA;&#xA;<pre><code>POST /test_index/_search&#xA;{&#xA;   "query": {&#xA;      "filtered": {&#xA;         "query": {&#xA;            "match_all": {}&#xA;         },&#xA;         "filter": {&#xA;            "bool": {&#xA;               "must": [&#xA;                  {&#xA;                     "nested": {&#xA;                        "path": "attributes",&#xA;                        "query": {&#xA;                           "bool": {&#xA;                              "must": [&#xA;                                 {&#xA;                                    "term": {&#xA;                                       "attributes.key": "key1"&#xA;                                    }&#xA;                                 },&#xA;                                 {&#xA;                                    "term": {&#xA;                                       "attributes.value": "value1"&#xA;                                    }&#xA;                                 }&#xA;                              ]&#xA;                           }&#xA;                        }&#xA;                     }&#xA;                  },&#xA;                  {&#xA;                     "nested": {&#xA;                        "path": "attributes",&#xA;                        "query": {&#xA;                           "bool": {&#xA;                              "must": [&#xA;                                 {&#xA;                                    "term": {&#xA;                                       "attributes.key": "key2"&#xA;                                    }&#xA;                                 },&#xA;                                 {&#xA;                                    "term": {&#xA;                                       "attributes.value": "value2"&#xA;                                    }&#xA;                                 }&#xA;                              ]&#xA;                           }&#xA;                        }&#xA;                     }&#xA;                  }&#xA;               ]&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here's the code I used to test it (I just used the <code>standard</code> analyzer, since I didn't know what your <code>flat</code> analyzer looks like; so you might have to adjust for that):</p>&#xA;&#xA;<p><a href="http://sense.qbox.io/gist/13b7e2aa4d90bfb2f82787c6a00494ee3343e013" rel="nofollow">http://sense.qbox.io/gist/13b7e2aa4d90bfb2f82787c6a00494ee3343e013</a></p>&#xA;
<p>I ran across this experiencing the same issue with Elastic 5 and had to tweak the recommended answer slightly to get it to work as the filtered query has been deprecated.  (was receiving no [query] registered for [filtered]).</p>&#xA;&#xA;<p>With Elastic 5 the following structure solved it for me:</p>&#xA;&#xA;<pre><code>{&#xA;    "query" : {&#xA;        "bool" : {&#xA;            "must" : [&#xA;                {&#xA;                    "nested" : {&#xA;                        "path": "attributes",&#xA;                        "query" : {&#xA;                            "bool" : {&#xA;                                "must" : [&#xA;                                    { "term" : { "attributes.key" : "key1" } },&#xA;                                    { "term" : { "attributes.value" : "value1" } }&#xA;                                ]&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                },&#xA;                {&#xA;                    "nested" : {&#xA;                        "path" : "attributes",&#xA;                        "query" : {&#xA;                            "bool" : {&#xA;                                "must" : [&#xA;                                    { "term" : { "attributes.key" : "key2" } },&#xA;                                    { "term" : { "attributes.value" : "value2" } }&#xA;                                ]&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                }&#xA;            ]&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;