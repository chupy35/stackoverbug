29068381
elasticsearch, match all, for integer range search?
<p>Suppose I have a field to indicate an integer range between 1 and 7&#xA;(indicates age 1 through 7)</p>&#xA;&#xA;<p>(1,5) (2,7)</p>&#xA;&#xA;<p>I also have a special value <code>all</code> that means <code>ages don't matter</code></p>&#xA;&#xA;<p>I'd like to index and search this field in elasticsearch.  </p>&#xA;&#xA;<p>When user searches with <code>all</code> age, I'd like to return essentially <code>match_all</code>.<br>&#xA;What's the proper value to put in elasticsearch index to support this type of search? </p>&#xA;&#xA;<p>I also have null value for the field, when we are not sure about the age.</p>&#xA;
<p>I don't believe that Elasticsearch has a 'range' field type, so you're either stuck with a string, e.g. "(1,5)", where you couldn't find that age 2 was in there, or splitting into two fields, e.g. "age_low", "age_high".</p>&#xA;&#xA;<p>With two fields, if age didn't matter, you could leave them blank, or set them to stupid values, e.g. (0, 200).</p>&#xA;
<p>The best way to do this from a performance standpoint is to index every integer in the range(s) in a byte field. Since fields can hold arrays you can simply search for a given age and find all document that match the given age range. For the "all" case just store the document with the values from 0 to 150.</p>&#xA;&#xA;<p>If you want to stick to your current syntax than you can use <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-transform.html" rel="nofollow">transforms</a> to parse your '(x,y)...' string and store the values in the index (but not the _source JSON document). </p>&#xA;