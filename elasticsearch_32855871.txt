32855871
How to deal with punctuation in an ElasticSearch field
<p>I have a field in a document stored in Elastic Search, which I want to be analyzed as a full text field.  In one case, it contains a value for the <code>name</code> field like this:</p>&#xA;&#xA;<pre><code>A&amp;B Corp&#xA;</code></pre>&#xA;&#xA;<p>I want to be able to search the documents for an auto-complete widget, using a query like this (suppose the user typed <code>A&amp;B</code> into the autocomplete field).  The intention is to match documents that contain the any terms with the typed prefix.</p>&#xA;&#xA;<pre><code>{   "query": {&#xA;    "filtered": {&#xA;      "query": {&#xA;        "query_string": {&#xA;          "query": "A&amp;B*",&#xA;          "fields": [&#xA;            "firstName",&#xA;            "lastName",&#xA;            "name",&#xA;            "key",&#xA;            "email"&#xA;          ]&#xA;        }&#xA;      },&#xA;      "filter": {&#xA;        "terms": {&#xA;          "environmentId": [&#xA;            "foo"&#xA;          ]&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>```</p>&#xA;&#xA;<p>My mapping for the name field looks like this:</p>&#xA;&#xA;<pre><code>"name": {&#xA;    "type": "string"&#xA;},&#xA;</code></pre>&#xA;&#xA;<p>But, I get no results.  The query structure works for documents that don't have <code>&amp;</code> in the field, so I'm pretty sure that is part of the problem.</p>&#xA;&#xA;<p>But, I'm not sure how to deal with this.  I am pretty sure I still want to analyze the field for full text search.</p>&#xA;&#xA;<p>In addition, if I add a space before the <code>*</code> in the query (ie, <code>"query": "A&amp;B *",</code>) then I get results including <code>A&amp;B</code>, so I don't <em>think</em> it is just discarding the ampersand and treating the <code>A</code> and <code>B</code> as separate terms.</p>&#xA;&#xA;<p>Should I change my mapping? The query?</p>&#xA;
<p>The Query_string query has a set of reserved characters that needs to be escaped.</p>&#xA;&#xA;<p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html" rel="nofollow">query_string : Read the reserved characters section</a></p>&#xA;&#xA;<p>So to search for </p>&#xA;&#xA;<blockquote>&#xA;  <p>'A&amp;B'  (or)  'A&amp;B Corp' (or) 'A&amp;B....'</p>&#xA;  &#xA;  <p>Your query must be "A&amp;B\\*" such that the query_string parser treats&#xA;  it as a * wildcard operator.</p>&#xA;</blockquote>&#xA;&#xA;<ol>&#xA;<li><p>While currently your query is searching for exact match of&#xA;<strong>"A&amp;B*"</strong> it expects asterik to be part of your data.</p></li>&#xA;<li><p>And when you search <strong>"A&amp;B *"</strong> the whitespace is a reserved&#xA;character so its&#xA;    now searching for "A&amp;B" (or) "*" and hence you get a match in this&#xA;    case.</p></li>&#xA;</ol>&#xA;