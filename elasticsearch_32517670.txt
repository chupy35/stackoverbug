32517670
Sorting in sub aggregated result of a sub sub aggregated in elasticsearch
<p>I have to rewrite the SQL Query to NOSQL Query.  </p>&#xA;&#xA;<pre><code> SELECT     count(1) as total,&#xA;    count(CASE WHEN updated &gt;= now() - '1 day'::interval THEN 1 END) as daily,&#xA;    count(CASE WHEN updated &gt;= now() - '7 day'::interval THEN 1 END) as weekly,&#xA;    count(CASE WHEN updated &gt;= now() - '30 day'::interval THEN 1 END) as monthly,&#xA;    status_code, state&#xA;&#xA;    FROM alerts&#xA;    GROUP BY status_code, state&#xA;    ORDER BY total DESC, status_code, state&#xA;</code></pre>&#xA;&#xA;<p>Following is output for SQL Query</p>&#xA;&#xA;<pre><code>   total    |    daily   |   weekly    |     monthly   |   status_code   |    state&#xA;------------------------------------------------------------------------------------&#xA;    2           0               0               1           test1           ACTIVE          &#xA;    2           0               1               2           test1           INACTIVE            &#xA;    2           1               1               1           test2           INACTIVE            &#xA;    1           0               0               1           test3           ACTIVE          &#xA;</code></pre>&#xA;&#xA;<p>I got struck while ordering the 'total' column while writing NOSQL Query</p>&#xA;&#xA;<p>Below is the NOSQL Query i used</p>&#xA;&#xA;<pre><code>{&#xA;            "stateAggregation": {&#xA;             "terms": {&#xA;                "field": "state"&#xA;              },&#xA;              "aggs": {&#xA;                "statusCodeAggregation": {&#xA;                  "terms": {&#xA;                    "field": "status_code"&#xA;                  } ,&#xA;                  "aggs": {&#xA;                       "total" : {&#xA;                            "date_range": {&#xA;                                "field": "updated",&#xA;                                "ranges": [{ "to": "now" }]&#xA;                             }&#xA;                         },&#xA;                         "daily" : {&#xA;                           "date_range": {&#xA;                                "field": "updated",&#xA;                                "ranges": [{ "from": "now-1d/d" }]&#xA;                            }&#xA;                         },&#xA;                         "weekly" : {&#xA;                            "date_range": {&#xA;                                "field": "updated",&#xA;                                "ranges": [{ "from": "now-7d/d" }]&#xA;                            }&#xA;                         },&#xA;                         "monthly" : {&#xA;                            "date_range": {&#xA;                                "field": "updated",&#xA;                                "ranges": [{ "from": "now-30d/d" }]&#xA;                            }&#xA;                         }&#xA;                      }          &#xA;                }&#xA;              }&#xA;            }&#xA;        }&#xA;</code></pre>&#xA;&#xA;<p>Following is output for NOSQL Query</p>&#xA;&#xA;<pre><code>{&#xA;  "took" : 8,&#xA;  "timed_out" : false,&#xA;  "_shards" : {&#xA;    "total" : 5,&#xA;    "successful" : 5,&#xA;    "failed" : 0&#xA;  },&#xA;  "aggregations" : {&#xA;    "stateAggregation" : {&#xA;      "doc_count_error_upper_bound" : 0,&#xA;      "sum_other_doc_count" : 0,&#xA;      "buckets" : [ {&#xA;        "key" : "active",&#xA;        "doc_count" : 3,&#xA;        "statusCodeAggregation" : {&#xA;          "doc_count_error_upper_bound" : 0,&#xA;          "sum_other_doc_count" : 0,&#xA;          "buckets" : [ {&#xA;            "key" : "test 1",&#xA;            "doc_count" : 2,&#xA;            "weekly" : {&#xA;              "buckets" : [ {&#xA;                "key" : "2015-09-04T00:00:00.000Z-*",&#xA;                "from" : 1.4413248E12,&#xA;                "from_as_string" : "2015-09-04T00:00:00.000Z",&#xA;                "doc_count" : 0&#xA;              } ]&#xA;            },&#xA;            "total" : {&#xA;              "buckets" : [ {&#xA;                "key" : "*-2015-09-11T12:42:58.463Z",&#xA;                "to" : 1.441975378463E12,&#xA;                "to_as_string" : "2015-09-11T12:42:58.463Z",&#xA;                "doc_count" : 2&#xA;              } ]&#xA;            },&#xA;            "monthly" : {&#xA;              "buckets" : [ {&#xA;                "key" : "2015-08-12T00:00:00.000Z-*",&#xA;                "from" : 1.4393376E12,&#xA;                "from_as_string" : "2015-08-12T00:00:00.000Z",&#xA;                "doc_count" : 1&#xA;              } ]&#xA;            },&#xA;            "daily" : {&#xA;              "buckets" : [ {&#xA;                "key" : "2015-09-10T00:00:00.000Z-*",&#xA;                "from" : 1.4418432E12,&#xA;                "from_as_string" : "2015-09-10T00:00:00.000Z",&#xA;                "doc_count" : 0&#xA;              } ]&#xA;            }&#xA;          }, {&#xA;            "key" : "test",&#xA;            "doc_count" : 1,&#xA;            "weekly" : {&#xA;              "buckets" : [ {&#xA;                "key" : "2015-09-04T00:00:00.000Z-*",&#xA;                "from" : 1.4413248E12,&#xA;                "from_as_string" : "2015-09-04T00:00:00.000Z",&#xA;                "doc_count" : 1&#xA;              } ]&#xA;            },&#xA;            "total" : {&#xA;              "buckets" : [ {&#xA;                "key" : "*-2015-09-11T12:42:58.463Z",&#xA;                "to" : 1.441975378463E12,&#xA;                "to_as_string" : "2015-09-11T12:42:58.463Z",&#xA;                "doc_count" : 1&#xA;              } ]&#xA;            },&#xA;            "monthly" : {&#xA;              "buckets" : [ {&#xA;                "key" : "2015-08-12T00:00:00.000Z-*",&#xA;                "from" : 1.4393376E12,&#xA;                "from_as_string" : "2015-08-12T00:00:00.000Z",&#xA;                "doc_count" : 1&#xA;              } ]&#xA;            },&#xA;            "daily" : {&#xA;              "buckets" : [ {&#xA;                "key" : "2015-09-10T00:00:00.000Z-*",&#xA;                "from" : 1.4418432E12,&#xA;                "from_as_string" : "2015-09-10T00:00:00.000Z",&#xA;                "doc_count" : 1&#xA;              } ]&#xA;            }&#xA;          } ]&#xA;        }&#xA;      }, {&#xA;        "key" : "mute",&#xA;        "doc_count" : 2,&#xA;        "statusCodeAggregation" : {&#xA;          "doc_count_error_upper_bound" : 0,&#xA;          "sum_other_doc_count" : 0,&#xA;          "buckets" : [ {&#xA;            "key" : "test",&#xA;            "doc_count" : 2,&#xA;            "weekly" : {&#xA;              "buckets" : [ {&#xA;                "key" : "2015-09-04T00:00:00.000Z-*",&#xA;                "from" : 1.4413248E12,&#xA;                "from_as_string" : "2015-09-04T00:00:00.000Z",&#xA;                "doc_count" : 1&#xA;              } ]&#xA;            },&#xA;            "total" : {&#xA;              "buckets" : [ {&#xA;                "key" : "*-2015-09-11T12:42:58.463Z",&#xA;                "to" : 1.441975378463E12,&#xA;                "to_as_string" : "2015-09-11T12:42:58.463Z",&#xA;                "doc_count" : 2&#xA;              } ]&#xA;            },&#xA;            "monthly" : {&#xA;              "buckets" : [ {&#xA;                "key" : "2015-08-12T00:00:00.000Z-*",&#xA;                "from" : 1.4393376E12,&#xA;                "from_as_string" : "2015-08-12T00:00:00.000Z",&#xA;                "doc_count" : 2&#xA;              } ]&#xA;            },&#xA;            "daily" : {&#xA;              "buckets" : [ {&#xA;                "key" : "2015-09-10T00:00:00.000Z-*",&#xA;                "from" : 1.4418432E12,&#xA;                "from_as_string" : "2015-09-10T00:00:00.000Z",&#xA;                "doc_count" : 1&#xA;              } ]&#xA;            }&#xA;          } ]&#xA;        }&#xA;      } ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Can anyone please help me out in modifying the NOSQL query for applying order on 'total' aggregation?       </p>&#xA;&#xA;<p>When i try to add order on total in status code aggregation </p>&#xA;&#xA;<pre><code>"statusCodeAggregation": {&#xA;                  "terms": {&#xA;                    "field": "status_code",&#xA;                   "order" :{ "total._count" : "desc" }&#xA;                  } &#xA;</code></pre>&#xA;&#xA;<p>Then i got the following error</p>&#xA;&#xA;<p>AggregationExecutionException[Invalid terms aggregation order path [total._count]. Terms buckets can only be sorted on a sub-aggregator path that is built out of zero or more single-bucket aggregations within the path and a final single-bucket or a metrics aggregation at the path end.]}</p>&#xA;