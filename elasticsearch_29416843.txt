29416843
The value from script_field does not return native value
<p>I'm trying to create a new field from existing fields, aka <code>request_uri</code>,</p>&#xA;&#xA;<p>The original query returns,</p>&#xA;&#xA;<pre><code>{&#xA;   ...&#xA;      "hits" : [&#xA;         {&#xA;            "_type" : "xx",&#xA;            "_index" : "xx",&#xA;            "fields" : {&#xA;               "request_uri" : [&#xA;                  "/static/image/smiley/default/shocked.gif"&#xA;               ]&#xA;            },&#xA;            "_id" : "AUx5EnoynHZzwsDrHRRb",&#xA;            "_score" : 1&#xA;         }&#xA;      ],&#xA;      "total" : 2&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now if I create a script_field base on the <code>request_uri</code> field,</p>&#xA;&#xA;<pre><code>{&#xA;  "script_fields": {&#xA;    "isAnImage": {&#xA;      "script": "doc['request_uri'].value"&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The <code>isAnImage</code> returns <code>default</code>. Which means it's not the original value but an array of analyzed keywords</p>&#xA;&#xA;<p>Which just contradicts the document ... </p>&#xA;&#xA;<p>Am I wrong about something?  </p>&#xA;&#xA;<p>I need to get the original <code>request_uri</code> string and do something about it, but I couldn't retrieve the correct string.</p>&#xA;&#xA;<p><img src="https://i.stack.imgur.com/GPKiR.png" alt="enter image description here"></p>&#xA;
<p>When you are hitting doc object , your requests are getting routed to the reverse reverse index or field data cache. Here you can only access the analyzed data as an array.</p>&#xA;&#xA;<p>In case you need the ray data , you need to hit _source rather than doc.&#xA;This would be highly slow , but then you will get the right value.&#xA;Another option would be to maintain url as <a href="http://www.elastic.co/guide/en/elasticsearch/reference/1.4/mapping-core-types.html" rel="nofollow">not_analyzed</a> so that you the field data cache will have the entire information as a single token.&#xA;Here doc will give you the entire string and the same time your performance wont get affected.</p>&#xA;