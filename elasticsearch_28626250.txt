28626250
Elasticsearch fails to index long custom date format
<p>For timestamps I am using the ISO format with zone ID included, defined as:</p>&#xA;&#xA;<pre><code>yyyy-MM-dd'T'HH:mm:ss.SSS'Z['z']'&#xA;</code></pre>&#xA;&#xA;<p>This format for example matches these two timestamps:</p>&#xA;&#xA;<pre><code>2015-02-20T09:46:56.336Z[UTC]&#xA;2015-02-20T10:46:55.221+01:00[Europe/Berlin]&#xA;</code></pre>&#xA;&#xA;<p>For indexing data into elasticsearch I also defined this date format in a mapping like this (using elastic4s DSL):</p>&#xA;&#xA;<pre><code>create index indexName mappings {&#xA;  "/exampleType" as (&#xA;    "exampleField" typed DateType&#xA;  ) dynamicDateFormats "yyyy-MM-dd'T'HH:mm:ss.SSS'Z['z']'"&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Basically this mapping works as expected but I experience problems when the formatted date string gets too long due to the zone ID. E. g. the above example</p>&#xA;&#xA;<pre><code>2015-02-20T09:46:56.336Z[UTC]&#xA;</code></pre>&#xA;&#xA;<p>having 30 chars works fine, whereas</p>&#xA;&#xA;<pre><code>2015-02-20T10:46:55.221+01:00[Europe/Berlin]&#xA;</code></pre>&#xA;&#xA;<p>having 44 chars fails to index with following error:</p>&#xA;&#xA;<pre><code>...&#xA;Caused by: java.io.IOException: Cannot read numeric data larger than 32 chars&#xA; at org.elasticsearch.index.analysis.NumericTokenizer.incrementToken(NumericTokenizer.java:78) ~[elasticsearch-1.4.2.jar:na]&#xA; at org.apache.lucene.index.DefaultIndexingChain$PerField.invert(DefaultIndexingChain.java:618) ~[lucene-core-4.10.2.jar:4.10.2 1634293 - mike - 2014-10-26 05:51:56]&#xA; at org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:359) ~[lucene-core-4.10.2.jar:4.10.2 1634293 - mike - 2014-10-26 05:51:56]&#xA; ...&#xA;</code></pre>&#xA;&#xA;<p>My question is if there's a way to get around this problem e. g. by means of configuration or if I am forced to change my date format to ensure that formatted dates do not exceed 32 chars.</p>&#xA;