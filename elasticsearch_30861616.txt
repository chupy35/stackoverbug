30861616
Elasticsearch - Query document missing an array value
<p>I would like to query my elasticsearch index in order to retrieve the documents that don't contain a specific value in an array. For instance, if my query is :</p>&#xA;&#xA;<pre><code>{&#xA;    "query": {&#xA;        "bool": {&#xA;            "must": [&#xA;                {&#xA;                    "match_all": {}&#xA;                }&#xA;            ],&#xA;            "must_not": [],&#xA;            "should": []&#xA;        }&#xA;    },&#xA;    "from": 0,&#xA;    "size": 10,&#xA;    "sort": [],&#xA;    "facets": {}&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And the dataset :</p>&#xA;&#xA;<pre><code>{&#xA;    "took": 1,&#xA;    "hits": {&#xA;        "total": 1,&#xA;        "hits": [&#xA;            {&#xA;                "_index": "product__1434374235336",&#xA;                "_type": "product",&#xA;                "_id": "AU33Xeny0K4pKlL-a7sr",&#xA;                "_source": {&#xA;                    "interdictions": ["S0P","SK3"],&#xA;                    "code": "foo"&#xA;                }&#xA;            },&#xA;            {&#xA;                "_index": "product__1434374235336",&#xA;                "_type": "product",&#xA;                "_id": "AU33Xeny0K4pKlL-a7sr",&#xA;                "_source": {&#xA;                    "interdictions": ["S0P","S2V","SK3"],&#xA;                    "code": "bar"&#xA;                }&#xA;            }&#xA;        ]&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The objective is to exclude each product that contains the <code>"S2V"</code> interdiction. I initially thought of using a <code>missing</code> <code>filter</code> :</p>&#xA;&#xA;<pre><code>{&#xA;    "query": {&#xA;        "bool": {&#xA;            "must": [&#xA;                {&#xA;                    "match_all": {}&#xA;                }&#xA;            ],&#xA;            "must_not": [],&#xA;            "should": []&#xA;        }&#xA;    },&#xA;    "filter": {&#xA;        "missing": {&#xA;            "terms": {&#xA;                "interdictions": [&#xA;                    "S2V"&#xA;                ]&#xA;            }&#xA;        }&#xA;    },&#xA;    "from": 0,&#xA;    "size": 10,&#xA;    "sort": [],&#xA;    "facets": {}&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But elasticsearch fails to parse the query : <code>QueryParsingException[[product__1434374235336] [missing] filter does not support [interdictions]]; }]",</code>. I then tried with a <code>must_not</code> :</p>&#xA;&#xA;<pre><code>{&#xA;    "query": {&#xA;        "bool": {&#xA;            "must": [&#xA;                {&#xA;                    "match_all": {}&#xA;                }&#xA;            ],&#xA;            "must_not" : {&#xA;                "terms" : {&#xA;                    "interdictions" : ["S2V"]&#xA;                }&#xA;            }&#xA;        }&#xA;    },&#xA;    "from": 0,&#xA;    "size": 10&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But the output is incorrect since it returns a product with the <code>S2V</code> interdictions.</p>&#xA;&#xA;<p>So... What is the correct way to do this ?</p>&#xA;&#xA;<p>Thanks !</p>&#xA;
<p>Try this (with <strong>lowercase value</strong> for the <code>terms</code> bool):</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "bool": {&#xA;      "must": [&#xA;        {&#xA;          "match_all": {}&#xA;        }&#xA;      ],&#xA;      "must_not": {&#xA;        "terms": {&#xA;          "interdictions": [&#xA;            "s2v"&#xA;          ]&#xA;        }&#xA;      }&#xA;    }&#xA;  },&#xA;  "from": 0,&#xA;  "size": 10&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Most probably, you have an analyzer (maybe the <code>standard</code> default one) that does lower case the terms, so in the ES index the value is indexed as <code>s2v</code>, <code>sk3</code> etc. And <code>terms</code> doesn't analyze the input value, it's using it as is (in your case with uppercase letters), so it will never match.</p>&#xA;