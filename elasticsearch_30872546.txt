30872546
Make sense of elasticsearch query parse exceptions and save the manatee
<p>I'm trying to find a means of working through Elasticsearch query parse exceptions in a fashion that doesn't treat me like a machine. I want to be a human and that means that when I have a syntax error in my query I want an informative and <em>concise</em> message.</p>&#xA;&#xA;<p>Is there an existing service / gem / technology that makes this possible? Maybe it's a parser that you feed it ES gibberish query parse exception messages and it gives you back something (more) helpful? Or maybe it's an ES plugin that simply changes how parse exceptions are rendered.</p>&#xA;&#xA;<p>My most wanted characteristics - </p>&#xA;&#xA;<ol>&#xA;<li>Concise, no more than 80 characters to summarize the problem and another 200 to explain how to fix it</li>&#xA;<li>It tells me exactly where in my query the error occurred (too often the error coarsely directs my debugging efforts; as in <code>from[-1],size[-1]: Parse Failure [Expected [START_OBJECT] under [and], but got a [START_ARRAY] in [filter]]]</code>, which vaguely directs my attention to help me debug, but surely it could tell me at which line or character the syntax error occurred)</li>&#xA;<li>Human readable - it gets rid of the machine friendly cruft like <code>{</code>, <code>(</code>, and <code>;</code> and uses proper English instead of jargon.</li>&#xA;</ol>&#xA;&#xA;<p>Your help in reducing the cognitive burden imparted by these exceptions is greatly appreciated.</p>&#xA;
<p>I'm not sure if this helps, but if I have a query that is failing for a reason I don't understand, I like to use the Elasticsearch <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-validate.html" rel="nofollow">validate API</a>. </p>&#xA;&#xA;<p>So for my queries, I will do </p>&#xA;&#xA;<pre><code>curl -XPOST 'localhost:9200/&lt;index&gt;/_validate/query/?explain=true&amp;pretty=true -d {&#xA;     "query": {"match_all": {}}&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It will take the query and run it through the validator, and if it fails, it will display the specific error it detected without all that cruft.</p>&#xA;&#xA;<p>Hope that is helpful!</p>&#xA;