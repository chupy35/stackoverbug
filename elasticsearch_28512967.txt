28512967
How to query for one document followed by another in ElasticSearch
<p>Is it possible, in ElasticSearch, to find documents within a date range of another document? For example, a query that returns "Any document containing <code>stringa</code>, followed by <code>stringb</code>, if the document with <code>stringa</code> was created within 5 minutes of the document with <code>stringb</code> in it as determined by _timestamp"?</p>&#xA;&#xA;<p>For example, the log I'm pulling from might read like so (horribly simplified of course, it's actually nested JSON objects, which is one of the reasons I'm trying to do this with ES and not SQL):</p>&#xA;&#xA;<pre><code>{"timestamp": "DATETIME1", "username": "foo", "eventname": "stringa"}&#xA;{"timestamp": "DATETIME2", "username": "foo", "eventname": "spam"}&#xA;{"timestamp": "DATETIME3", "username": "bar", "eventname": "stringa"}&#xA;{"timestamp": "DATETIME4", "username": "bar", "eventname": "cake"}&#xA;{"timestamp": "DATETIME5", "username": "foo", "eventname": "stringb"}&#xA;{"timestamp": "DATETIME6", "username": "bar", "eventname": "stringb"}&#xA;</code></pre>&#xA;&#xA;<p>In ES, those lines would end up as 6 different documents.</p>&#xA;&#xA;<p>I'm trying to build a query that finds the username of the user, but only if a document containing <code>stringa</code> within  (say 5 minutes) of a document containing <code>stringb</code> that contain the same username field value.</p>&#xA;&#xA;<p>I've got the following query:</p>&#xA;&#xA;<pre><code>{&#xA;    "size": 0,&#xA;    "query": {&#xA;        "bool": {&#xA;            "should": [&#xA;                {&#xA;                    "term": {&#xA;                        "eventname": "stringa"&#xA;                    }&#xA;                },&#xA;                {&#xA;                    "term": {&#xA;                        "eventname": "stringb"&#xA;                    }&#xA;                }&#xA;            ]&#xA;        }&#xA;    },&#xA;    "aggs": {&#xA;        "by_username": {&#xA;            "terms": {&#xA;                "field": "username"&#xA;            },&#xA;            "aggs": {&#xA;                "by_eventname": {&#xA;                    "terms": {&#xA;                        "field": "eventname"&#xA;                    },&#xA;                    "aggs": {&#xA;                        "max_timestamp": {&#xA;                            "max": {&#xA;                                "field": "timestamp"&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But it doesn't quite work the way I want - it certainly shows the user names as buckets, with the eventnames inside, and the max timestamps of each (I really just want the latest of each type of event I'm interested in) but I can't figure out how to reference the documents inside each bucket to get them to compare against each other and figure out if the timestamps are close enough.</p>&#xA;&#xA;<p>In SQL I could do this with a subquery or CTE but this isn't SQL, and I'm not sure if I'm running up against a limitation of ES or if this is possible.</p>&#xA;