31876397
Combining filtered and bool queries in ES
<p>I’m having troubles with combining two queries.&#xA;First one:</p>&#xA;&#xA;<pre><code>{&#xA;  query: {&#xA;    filtered: {filter:{bool: {must_not: [{ids: {values: ["one", "two"]}}]}}}&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Second one:</p>&#xA;&#xA;<pre><code>{&#xA;  query: {&#xA;    bool: {&#xA;      must_not: [&#xA;        { wildcard: {url: "*.biz"} }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If I run them separately, they works just fine. However, if I combine them into:</p>&#xA;&#xA;<pre><code>{&#xA;  query: {&#xA;    filtered: {filter:{bool: {must_not: [{ids: {values: ["one", "two"]}}]}}},&#xA;    bool: {must_not: [{ wildcard: {url: "*.biz"} }]}&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I’m getting following error (most of the error omitted for brevity):</p>&#xA;&#xA;<pre><code>Parse Failure [Failed to parse source [{\"query\":{\"filtered\":{\"filter\":{\"bool\":{\"must_not\":[{\"ids\":{\"values\":[\"one\",\"two\"]}}]}}},\"bool\":{\"must_not\":[{\"wildcard\":{\"url\":\"*.biz\"}}]}}}]]]; nested: SearchParseException[[sites_20150502][4]: query[ConstantScore(BooleanFilter(-_uid:site#one _uid:site#two))],from[-1],size[-1]: Parse Failure [No parser for element [must_not]]]; }]","status":400}&#xA;</code></pre>&#xA;&#xA;<p>My ES version is 1.1.1.</p>&#xA;&#xA;<p>Any ideas how to fix that?</p>&#xA;
<p>Combining queries with filters should be done with <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-filtered-query.html" rel="nofollow"><code>filtered</code> query</a>, which requires <code>query</code> and <code>filter</code> arguments:</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "filtered": {&#xA;      "query": {&#xA;        "bool": {&#xA;          "must_not": [&#xA;            { wildcard: {url: "*.biz"} }&#xA;          ]&#xA;        }&#xA;      },&#xA;      "filter": {&#xA;        "bool": {&#xA;          "must_not": [&#xA;            {ids: {values: ["one", "two"]}&#xA;          ]&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;