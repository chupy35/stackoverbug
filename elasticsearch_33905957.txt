33905957
Dynamic Mapping Templates seem to prevent mappings from being created
<p>I am trying to index some data with dynamic user-created fields.  The input data looks like this:</p>&#xA;&#xA;<pre><code>{ "kind": "feature",&#xA;  "creationDate": 1424561126000,&#xA;  "key" : "sdfgsdfg",&#xA;  "user": {&#xA;    "email" : "me@example.com",&#xA;    "custom": {&#xA;      "hello": "world",&#xA;      "answer": 42,&#xA;      "enable_the_thing": true&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The keys and values in the <code>user.custom</code> object are dynamic, and it is even possible that some instances will have values of different types for the same key.  So, I am translating these into a shape like this:</p>&#xA;&#xA;<pre><code>    "custom": {&#xA;      "hello": {&#xA;        "stringVal": "world"&#xA;      },&#xA;      "answer": {&#xA;        "numVal": 42&#xA;      },&#xA;      "enable_the_thing": {&#xA;        "boolVal": true&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>(This way, I can be sure that <code>user.custom.hello.stringVal</code> will always be a string, even if another document has a numeric <code>user.custom.hello.numVal</code>.)</p>&#xA;&#xA;<p>So far, this seems to work.  I declared the mapping for <code>user.custom</code> as:</p>&#xA;&#xA;<pre><code>{&#xA;  "type": "object",&#xA;  "dynamic": true&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When I get the mapping, I see these dynamic fields are created as I expect.</p>&#xA;&#xA;<p>However, I also need to keep an unanalyzed string representation of all of these values.  So, I added a dynamic mapping template like this (and one for the <code>numVal</code> and <code>boolVal</code> fields as well):</p>&#xA;&#xA;<pre><code>"custom_attribute_string": {&#xA;    "mapping": {&#xA;        "fields": {&#xA;            "stringVal": {&#xA;                "index": "analyzed", &#xA;                "type": "string"&#xA;            }, &#xA;            "untouched": {&#xA;                "index": "not_analyzed", &#xA;                "type": "string"&#xA;            }&#xA;        }, &#xA;        "type": "multi_field"&#xA;    }, &#xA;    "path_match": "user.custom.*.stringVal"&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However, now the dynamic custom fields are not created in the mapping, and the documents are not indexed.  </p>&#xA;&#xA;<p>I suspect there is something wrong with my mapping template, but I'm not sure where to look.  I created this template based on these <a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/custom-dynamic-mapping.html#dynamic-templates" rel="nofollow">docs</a>, but maybe I should be looking elsewhere?</p>&#xA;
<p>Your dynamic mapping works perfectly, the <code>untouched</code> field is created but it won't show up in your results when viewing the source of your document. <code>_source</code> will only ever contain whatever data you sent for indexing. Elasticsearch will index each field according to the mapping you've specified, but it won't modify the <code>_source</code></p>&#xA;&#xA;<p>You can see that the <code>untouched</code> sub-field does indeed exist by running an aggregation on it:</p>&#xA;&#xA;<pre><code>{&#xA;  "size": 0,&#xA;  "aggs": {&#xA;    "untouched_values": {&#xA;      "terms": {&#xA;        "field": "user.custom.hello.stringVal.untouched"&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>As a side-note, the <code>multi-field</code> type has been deprecated a while ago, so even though it still works, you should use the new way of specifying multi-fields instead, like this:</p>&#xA;&#xA;<pre><code>"custom_attribute_string": {&#xA;    "mapping": {&#xA;        "type": "string",&#xA;        "fields": {&#xA;            "untouched": {&#xA;                "index": "not_analyzed", &#xA;                "type": "string"&#xA;            }&#xA;        }&#xA;    }, &#xA;    "path_match": "user.custom.*.stringVal"&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Note that in order to recreate your issue above, I've created the following index:</p>&#xA;&#xA;<pre><code>curl -XPUT localhost:9200/testindex -d '{&#xA;  "mappings": {&#xA;    "test": {&#xA;      "dynamic_templates": [&#xA;        {&#xA;          "custom_attribute_string": {&#xA;            "mapping": {&#xA;              "fields": {&#xA;                "stringVal": {&#xA;                  "index": "analyzed",&#xA;                  "type": "string"&#xA;                },&#xA;                "untouched": {&#xA;                  "index": "not_analyzed",&#xA;                  "type": "string"&#xA;                }&#xA;              },&#xA;              "type": "multi_field"&#xA;            },&#xA;            "path_match": "user.custom.*.stringVal"&#xA;          }&#xA;        }&#xA;      ],&#xA;      "properties": {&#xA;        "user": {&#xA;          "properties": {&#xA;            "email": {&#xA;              "type": "string"&#xA;            },&#xA;            "custom": {&#xA;              "type": "object",&#xA;              "dynamic": true&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>And then I indexed the following test document:</p>&#xA;&#xA;<pre><code>curl -XPUT localhost:9200/testindex/test/1 -d '{&#xA;  "user": {&#xA;    "email": "val@me.com",&#xA;    "custom": {&#xA;      "hello": {&#xA;        "stringVal": "world"&#xA;      },&#xA;      "answer": {&#xA;        "numVal": 42&#xA;      },&#xA;      "enable_the_thing": {&#xA;        "boolVal": true&#xA;      }&#xA;    }&#xA;  }&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>After running this, I retrieved the mapping and as you can see the <code>hello.stringVal.untouched</code> sub-field is present:</p>&#xA;&#xA;<pre><code>{&#xA;  "customs" : {&#xA;    "mappings" : {&#xA;      "custom" : {&#xA;        "dynamic_templates" : [ {&#xA;          "custom_attribute_string" : {&#xA;            "mapping" : {&#xA;              "type" : "multi_field",&#xA;              "fields" : {&#xA;                "untouched" : {&#xA;                  "index" : "not_analyzed",&#xA;                  "type" : "string"&#xA;                },&#xA;                "stringVal" : {&#xA;                  "index" : "analyzed",&#xA;                  "type" : "string"&#xA;                }&#xA;              }&#xA;            },&#xA;            "path_match" : "user.custom.*.stringVal"&#xA;          }&#xA;        } ],&#xA;        "properties" : {&#xA;          "user" : {&#xA;            "properties" : {&#xA;              "custom" : {&#xA;                "dynamic" : "true",&#xA;                "properties" : {&#xA;                  "answer" : {&#xA;                    "dynamic" : "true",&#xA;                    "properties" : {&#xA;                      "numVal" : {&#xA;                        "type" : "long"&#xA;                      }&#xA;                    }&#xA;                  },&#xA;                  "enable_the_thing" : {&#xA;                    "dynamic" : "true",&#xA;                    "properties" : {&#xA;                      "boolVal" : {&#xA;                        "type" : "boolean"&#xA;                      }&#xA;                    }&#xA;                  },&#xA;                  "hello" : {&#xA;                    "dynamic" : "true",&#xA;                    "properties" : {&#xA;                      "stringVal" : {&#xA;                        "type" : "string",&#xA;                        "fields" : {&#xA;                          "untouched" : {&#xA;                            "type" : "string",&#xA;                            "index" : "not_analyzed"&#xA;                          }&#xA;                        }&#xA;                      }&#xA;                    }&#xA;                  }&#xA;                }&#xA;              },&#xA;              "email" : {&#xA;                "type" : "string"&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;