24682470
using valueLink, child input field unable to change
<p>I'm starting to play with reactjs, and for this project, I have -></p>&#xA;&#xA;<ul>&#xA;<li>an input field</li>&#xA;<li>a button that toggles a modal&#xA;<ul>&#xA;<li>the modal has another input field.</li>&#xA;</ul></li>&#xA;</ul>&#xA;&#xA;<p><strong>How do we make both input fields stay in sync?</strong></p>&#xA;&#xA;<p>What I though I would need to do use to use the LinkedState mixin. </p>&#xA;&#xA;<p>So, I do something like this -> </p>&#xA;&#xA;<pre><code>MainFoo = React.createClass&#xA;  mixins: [React.addons.LinkedStateMixin]&#xA;  getInitialState: -&gt;&#xA;    searchTerm: ''&#xA;  render: -&gt;&#xA;    input valueLink: @linkState('searchTerm') # this works&#xA;    CustomReactChild&#xA;      searchTermLink: @linkState('searchTerm') #passing into child.&#xA;&#xA;CustomReactChild = React.createClass&#xA;  renderModal:&#xA;    unless @modal&#xA;      $anchor = $('&lt;div&gt;').appendTo('body');&#xA;      comp = (Modal &#xA;               body: (CustomReactChildchild &#xA;                         searchTermLink: @props.searchTermLink)&#xA;             ) #custom react modal class&#xA;      @modal = React.renderComponent comp, anchor&#xA;    @modal.show()&#xA;  render: -&gt;&#xA;    label&#xA;      onClick: @renderModal&#xA;# Deep inside CustomReactChild&#xA;CustomReactChildsChild = React.createClass&#xA;  render: -&gt;&#xA;    input valueLink: @props.searchTermLink # Am unable to change the value via this input&#xA;</code></pre>&#xA;&#xA;<p>Am I using this incorrectly? How can I get the second input to change the value of the parent's input and vice versa? </p>&#xA;
<p>@Douglas popped in an awesome answer in the comments --></p>&#xA;&#xA;<blockquote>&#xA;  <p>Looking at the logs here, jsfiddle.net/kb3gN/3602 - I think part of the problem is that the modal popup is re-rendering (or at least running the "Controlled Input" handler) before MainFoo has updated its state. I'd suggest merging the models together, so that there is only one React.renderComponent call, or factor out the state into a shared Store which both inputs update and get change events from. &#xA;  ```</p>&#xA;</blockquote>&#xA;