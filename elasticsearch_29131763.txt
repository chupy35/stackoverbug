29131763
Proper way to filter a query with Elasticsearch? (filter vs filtered query)
<p>I am trying work out if there is a difference between "filters" and "filtered queries" in Elasticsearch.</p>&#xA;&#xA;<p>The two example requests below return the same results, when run against my index.</p>&#xA;&#xA;<p>Are they actually different in some subtle way?  </p>&#xA;&#xA;<p>Is there a reason why one would be preferred over the other, in different situations? </p>&#xA;&#xA;<p>DSL giving one top-level <code>query</code>, <strong>and</strong> one top-level <code>filter</code>:</p>&#xA;&#xA;<pre><code>GET /index/type/_search?_source&#xA;{&#xA;  "query": {&#xA;    "multi_match": {&#xA;      "query": "my dog has fleas",&#xA;      "fields": ["name", "keywords"]&#xA;    }&#xA;  },&#xA;  "filter": {&#xA;    "term": {"status": 2}&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>DSL giving <strong>only</strong> a top-level <code>query</code>, using the <code>filtered</code> construct:</p>&#xA;&#xA;<pre><code>GET /index/type/_search?_source&#xA;{&#xA;  "query": {&#xA;    "filtered": {&#xA;      "query": {&#xA;        "multi_match": {&#xA;          "query": "my dog has fleas",&#xA;          "fields": ["name", "keywords"]&#xA;        }&#xA;      },&#xA;      "filter": {&#xA;        "term": {"status": 2}&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;
<p>The first example is a <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-post-filter.html">post_filter</a>, which is sub-optimal from a performance perspective. Filtered queries are preferred, since the filters will be run prior to the queries. Typically, you want your filters to run first, since scoring documents is more expensive than just a boolean pass/fail. That way, your result set is cut down before you run your query on it. With a post_filter, your query is run first, the entire result set is scored, and then the filter is applied to the results.</p>&#xA;&#xA;<p>The top-level <code>filter</code> directive was deprecated in 1.0, and was renamed to <code>post_filter</code> to clarify its purpose and usage.</p>&#xA;&#xA;<blockquote>&#xA;  <p>the top-level filter parameter in search has been renamed to post_filter, to indicate that it should not be used as the primary way to filter search results (use a filtered query instead), but only to filter results AFTER facets/aggregations have been calculated.</p>&#xA;</blockquote>&#xA;&#xA;<p><a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/_search_requests.html">http://www.elastic.co/guide/en/elasticsearch/reference/current/_search_requests.html</a></p>&#xA;