34065838
Advanced query with Elasticsearch (How to do JOIN)
<p>I'm currently moving from a RDBMS world into the NO SQL world, and i'm trying to solve an issue.&#xA;I'm using ElasticSearch, and i have 2 indexes:&#xA;1st index, "routes", contains a person name and GeoLocation array of points, whith routes he made during the last week.&#xA;2nd index, "address", contains a list of addresses -> a person name, and a geo location point of his house.</p>&#xA;&#xA;<p>Now, i want to make an advanced query, which will allow the user to filter something like:&#xA;- Give me all the people which their house is in a specific polygon(A), and also has route which within another polygon(B)</p>&#xA;&#xA;<p>it's like doing a JOIN statement on the person name - &#xA;how can i make such a thing using ElasticSearch? I'm writing my code in JAVA</p>&#xA;&#xA;<p>Thanks</p>&#xA;
<p>The short answer: you can't do a SQL-equivelant JOIN in Elasticsearch, its just not how it works.</p>&#xA;&#xA;<p>The long answer: <a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/relations.html" rel="nofollow">https://www.elastic.co/guide/en/elasticsearch/guide/current/relations.html</a></p>&#xA;&#xA;<p>You should create your collections with certain relationships between them.</p>&#xA;&#xA;<p>Though in your situation, I suggest you just save everything in the same collection and handle it from there, Elasticsearch can handle it.</p>&#xA;