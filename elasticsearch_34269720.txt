34269720
ElasticSearch multiple terms aggregation order
<p>I have a document structure which describes a container, some of its fields are: </p>&#xA;&#xA;<pre><code>containerId -&gt; Unique Id,String&#xA;containerManufacturer -&gt; String&#xA;containerValue -&gt; Double&#xA;estContainerWeight -&gt;Double&#xA;actualContainerWeight -&gt; Double&#xA;</code></pre>&#xA;&#xA;<p>I want to run a search aggregation which has two levels of terms aggregations on the two weight fields, but in descending order of the weight fields, like below: </p>&#xA;&#xA;<pre><code>{&#xA;  "size": 0,&#xA;  "aggs": {&#xA;    "by_manufacturer": {&#xA;      "terms": {&#xA;        "field": "containerManufacturer",&#xA;        "size": 10,&#xA;        "order": {"estContainerWeight": "desc"} //Cannot do this&#xA;      },&#xA;      "aggs": {&#xA;        "by_est_weight": {&#xA;          "terms": {&#xA;            "field": "estContainerWeight",&#xA;            "size": 10,&#xA;            "order": { "actualContainerWeight": "desc"} //Cannot do this&#xA;          },&#xA;          "aggs": {&#xA;            "by_actual_weight": {&#xA;              "terms": {&#xA;                "field": "actualContainerWeight",&#xA;                "size": 10&#xA;              },&#xA;              "aggs" : {&#xA;                "container_value_sum" : {"sum" : {"field" : "containerValue"}}&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Sample documents:</p>&#xA;&#xA;<pre><code>{"containerId":1,"containerManufacturer":"A","containerValue":12,"estContainerWeight":5.0,"actualContainerWeight":5.1}&#xA;{"containerId":2,"containerManufacturer":"A","containerValue":24,"estContainerWeight":5.0,"actualContainerWeight":5.2}&#xA;{"containerId":3,"containerManufacturer":"A","containerValue":23,"estContainerWeight":5.0,"actualContainerWeight":5.2}&#xA;{"containerId":4,"containerManufacturer":"A","containerValue":32,"estContainerWeight":6.0,"actualContainerWeight":6.2}&#xA;{"containerId":5,"containerManufacturer":"A","containerValue":26,"estContainerWeight":6.0,"actualContainerWeight":6.3}&#xA;{"containerId":6,"containerManufacturer":"A","containerValue":23,"estContainerWeight":6.0,"actualContainerWeight":6.2}&#xA;</code></pre>&#xA;&#xA;<p>Expected Output(not complete):</p>&#xA;&#xA;<pre><code>{&#xA;  "by_manufacturer": {&#xA;    "buckets": [&#xA;      {&#xA;        "key": "A",&#xA;        "by_est_weight": {&#xA;          "buckets": [&#xA;            {&#xA;              "key" : 5.0,&#xA;              "by_actual_weight" : {&#xA;                "buckets" : [&#xA;                  {&#xA;                    "key" : 5.2,&#xA;                    "container_value_sum" : {&#xA;                      "value" : 1234 //Not actual sum&#xA;                    }&#xA;                  },&#xA;                  {&#xA;                    "key" : 5.1,&#xA;                    "container_value_sum" : {&#xA;                      "value" : 1234 //Not actual sum&#xA;                    }&#xA;                  }&#xA;                ]&#xA;              }&#xA;            },&#xA;            {&#xA;              "key" : 6.0,&#xA;              "by_actual_weight" : {&#xA;                "buckets" : [&#xA;                  {&#xA;                    "key" : 6.2,&#xA;                    "container_value_sum" : {&#xA;                      "value" : 1234 //Not actual sum&#xA;                    }&#xA;                  },&#xA;                  {&#xA;                    "key" : 6.3,&#xA;                    "container_value_sum" : {&#xA;                      "value" : 1234 //Not actual sum&#xA;                    }&#xA;                  }&#xA;                ]&#xA;              }&#xA;            }&#xA;          ]&#xA;        }&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However, I cannot order by the nested aggregations. (Error: Terms buckets can only be sorted on a sub-aggregator path that is built out of zero or more single-bucket aggregations within the path and a final single-bucket or a metrics aggregation...)</p>&#xA;&#xA;<p>For example, for the above sample output, I have no control on the buckets generated if I introduce a size on the terms aggregations (which I will have to do if my data is large),so I would like to only get the top N weights for each terms aggregation.</p>&#xA;&#xA;<p>Is there a way to do this ?</p>&#xA;
<p>If I understand your problem correctly, you would like to sort the manufacturer terms in decreasing order of the estimated weights of their containers and then each bucket of "estimated weight" in decreasing order of their actual weight.</p>&#xA;&#xA;<pre><code>{&#xA;  "size": 0,&#xA;  "aggs": {&#xA;    "by_manufacturer": {&#xA;      "terms": {&#xA;        "field": "containerManufacturer",&#xA;        "size": 10&#xA;      },&#xA;        "by_est_weight": {&#xA;          "terms": {&#xA;            "field": "estContainerWeight",&#xA;            "size": 10,&#xA;            "order": {&#xA;              "_term": "desc"       &lt;--- change to this&#xA;            }&#xA;          },&#xA;            "by_actual_weight": {&#xA;              "terms": {&#xA;                "field": "actualContainerWeight",&#xA;                "size": 10,&#xA;                "order" : {"_term" : "desc"}   &lt;----- Change to this&#xA;              },&#xA;              "aggs": {&#xA;                "container_value_sum": {&#xA;                  "sum": {&#xA;                    "field": "containerValue"&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;