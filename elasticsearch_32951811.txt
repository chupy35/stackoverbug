32951811
elasticsearch custom analyzer by specific chracter
<p>How to create custom analyzer that tokenize a field by '/' characters only.</p>&#xA;&#xA;<p>I have url strings in my field for exp: "<a href="https://stackoverflow.com/questions/ask">https://stackoverflow.com/questions/ask</a>"&#xA;I want tokenized this like: "http", "stackoverflow.com", "questions" and "ask"</p>&#xA;
<p>The standard analyzer already does that for you.</p>&#xA;&#xA;<pre><code>curl -XGET 'localhost:9200/_analyze?analyzer=standard&amp;pretty' -d 'http://stackoverflow.com/questions/ask'&#xA;</code></pre>&#xA;&#xA;<p>You get this:</p>&#xA;&#xA;<pre><code>{&#xA;  "tokens" : [ {&#xA;    "token" : "http",&#xA;    "start_offset" : 0,&#xA;    "end_offset" : 4,&#xA;    "type" : "&lt;ALPHANUM&gt;",&#xA;    "position" : 1&#xA;  }, {&#xA;    "token" : "stackoverflow.com",&#xA;    "start_offset" : 7,&#xA;    "end_offset" : 24,&#xA;    "type" : "&lt;ALPHANUM&gt;",&#xA;    "position" : 2&#xA;  }, {&#xA;    "token" : "questions",&#xA;    "start_offset" : 25,&#xA;    "end_offset" : 34,&#xA;    "type" : "&lt;ALPHANUM&gt;",&#xA;    "position" : 3&#xA;  }, {&#xA;    "token" : "ask",&#xA;    "start_offset" : 35,&#xA;    "end_offset" : 38,&#xA;    "type" : "&lt;ALPHANUM&gt;",&#xA;    "position" : 4&#xA;  } ]&#xA;}&#xA;</code></pre>&#xA;
<p>This seems to do what you want, using a <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-pattern-tokenizer.html" rel="nofollow">pattern tokenizer</a>:</p>&#xA;&#xA;<pre><code>PUT /test_index&#xA;{&#xA;   "settings": {&#xA;      "number_of_shards": 1,&#xA;      "analysis": {&#xA;         "analyzer": {&#xA;            "slash_analyzer": {&#xA;               "type": "pattern",&#xA;               "pattern": "[/:]+",&#xA;               "lowercase": true&#xA;            }&#xA;         }&#xA;      }&#xA;   },&#xA;   "mappings": {&#xA;      "doc": {&#xA;         "properties": {&#xA;            "url": {&#xA;               "type": "string",&#xA;               "index_analyzer": "slash_analyzer",&#xA;               "search_analyzer": "standard",&#xA;               "term_vector": "yes"&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;&#xA;PUT /test_index/doc/1&#xA;{&#xA;   "url": "http://stackoverflow.com/questions/ask"&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I added <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-termvectors.html" rel="nofollow">term vectors</a> in the mapping (you probably don't want to do this in production), so we can see what terms are generated:</p>&#xA;&#xA;<pre><code>GET /test_index/doc/1/_termvector&#xA;...&#xA;{&#xA;   "_index": "test_index",&#xA;   "_type": "doc",&#xA;   "_id": "1",&#xA;   "_version": 1,&#xA;   "found": true,&#xA;   "took": 1,&#xA;   "term_vectors": {&#xA;      "url": {&#xA;         "field_statistics": {&#xA;            "sum_doc_freq": 4,&#xA;            "doc_count": 1,&#xA;            "sum_ttf": 4&#xA;         },&#xA;         "terms": {&#xA;            "ask": {&#xA;               "term_freq": 1&#xA;            },&#xA;            "http": {&#xA;               "term_freq": 1&#xA;            },&#xA;            "questions": {&#xA;               "term_freq": 1&#xA;            },&#xA;            "stackoverflow.com": {&#xA;               "term_freq": 1&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here's the code I used:</p>&#xA;&#xA;<p><a href="http://sense.qbox.io/gist/669fbdd681895d7e9f8db13799865c6e8be75b11" rel="nofollow">http://sense.qbox.io/gist/669fbdd681895d7e9f8db13799865c6e8be75b11</a></p>&#xA;