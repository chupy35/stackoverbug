31415973
Limit aggregations to list of values
<p>Can I limit aggregations to return only specific list of values? I have something like this:</p>&#xA;&#xA;<pre><code>{ "aggs" : {&#xA;        "province" : {&#xA;            "terms" : {&#xA;              "field" : "province"&#xA;            }&#xA;        }&#xA;    },&#xA;    "query": {&#xA;        "bool": {&#xA;         //my query..&#xA;</code></pre>&#xA;&#xA;<p>But let's say I know list of province for which I want make count ({'province1', 'province2', 'province3'}). Is it possible to restrict returned list of province without influence on my query results?</p>&#xA;&#xA;<p>I want to get: </p>&#xA;&#xA;<pre><code>  //list of hits..&#xA;  //&#xA;  "aggregations": {&#xA;        "province": {&#xA;            "buckets": [&#xA;                {&#xA;                    "key": "province1",&#xA;                    "doc_count": 200&#xA;                },&#xA;                {&#xA;                    "key": "province2",&#xA;                    "doc_count": 162&#xA;                },&#xA;                {&#xA;                    "key": "province3",&#xA;                    "doc_count": 162&#xA;                }&#xA;                // even if there is more possible provinces&#xA;                // I don't want to see them&#xA;</code></pre>&#xA;
<p>Sure, just use <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-terms-aggregation.html?q=terms%20agg#_filtering_values" rel="nofollow">term filters</a>.</p>&#xA;&#xA;<p>Here's an example. Let's say I have visit stats for a bunch of different IP addresses, but I only want to get counts of document for two of them, I could do this: </p>&#xA;&#xA;<pre><code>POST /test_index/_search?search_type=count&#xA;{&#xA;   "aggregations": {&#xA;      "ip": {&#xA;         "terms": {&#xA;            "field": "ip",&#xA;            "size": 10,&#xA;            "include": [&#xA;               "146.233.189.126",&#xA;               "193.33.153.89"&#xA;            ]&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and get back something like:</p>&#xA;&#xA;<pre><code>{&#xA;   "took": 4,&#xA;   "timed_out": false,&#xA;   "_shards": {&#xA;      "total": 1,&#xA;      "successful": 1,&#xA;      "failed": 0&#xA;   },&#xA;   "hits": {&#xA;      "total": 7,&#xA;      "max_score": 0,&#xA;      "hits": []&#xA;   },&#xA;   "aggregations": {&#xA;      "ip": {&#xA;         "doc_count_error_upper_bound": 0,&#xA;         "sum_other_doc_count": 0,&#xA;         "buckets": [&#xA;            {&#xA;               "key": "146.233.189.126",&#xA;               "doc_count": 3&#xA;            },&#xA;            {&#xA;               "key": "193.33.153.89",&#xA;               "doc_count": 3&#xA;            }&#xA;         ]&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is some code I used to play around with it:</p>&#xA;&#xA;<p><a href="http://sense.qbox.io/gist/68697646ef7afc9f0375995b6f84181a7ac4cba9" rel="nofollow">http://sense.qbox.io/gist/68697646ef7afc9f0375995b6f84181a7ac4cba9</a></p>&#xA;&#xA;<p>So your example might look like:</p>&#xA;&#xA;<pre><code>{&#xA;   "aggs": {&#xA;      "province": {&#xA;         "terms": {&#xA;            "field": "province",&#xA;            "include": [&#xA;               "province1",&#xA;               "province2",&#xA;               "province3"&#xA;            ]&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;