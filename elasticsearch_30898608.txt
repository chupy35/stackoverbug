30898608
How do I limit an ElasticSearch API count by date?
<p>I'm trying to count the number of query matches over a given time range, hitting the URL <code>/{index}/_count</code> with the body indicated below.</p>&#xA;&#xA;<p>I'm new to Query DSL, so it's quite possible I'm overlooking something obvious.  However, the straightforward application of a count to an existing query doesn't work.  I don't see anything in the docs that indicate a count query should receive special treatment.</p>&#xA;&#xA;<p>I've tried adding a range and aggregations to the query, but I keep getting the following error or some variant:</p>&#xA;&#xA;<blockquote>&#xA;  <p>indices:data/read/count[s]]]; nested:&#xA;  QueryParsingException[[graylog2_NN] request does not support [{label}]]</p>&#xA;</blockquote>&#xA;&#xA;<p>Limit query by timestamp:</p>&#xA;&#xA;<pre><code>{                                                                                                                                                                                 &#xA;    "query": {                                                                                                                                                                              &#xA;        "term": { "level":3 },                                                                                                                                                              &#xA;        "range": {                                                                                                                                                                          &#xA;            "timestamp": {                                                                                                                                                                  &#xA;                "from": "2015-06-16 15:10:09.322",                                                                                                                                          &#xA;                "to": "2015-06-16 16:10:09.322",                                                                                                                                            &#xA;                "include_lower": true,                                                                                                                                                      &#xA;                "include_upper": true                                                                                                                                                       &#xA;            }                                                                                                                                                                               &#xA;        }                                                                                                                                                                                   &#xA;    }                                                                                                                                                                                       &#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Use an aggregation:</p>&#xA;&#xA;<pre><code>{                                                                                                                                                                                 &#xA;    "query": {                                                                                                                                                                              &#xA;        "term": { "level":3 }                                                                                                                                                               &#xA;    },                                                                                                                                                                                      &#xA;    "aggs": {                                                                                                                                                                       &#xA;        "range": {                                                                                                                                                                          &#xA;            "date_range": {                                                                                                                                                                 &#xA;                field: "_timestamp",                                                                                                                                                        &#xA;                "ranges": {                                                                                                                                                                 &#xA;                    { "to": "now-1d" },                                                                                                                                                     &#xA;                    { "from": "now-2d" },                                                                                                                                                   &#xA;                }                                                                                                                                                                           &#xA;            }                                                                                                                                                                               &#xA;        }                                                                                                                                                                                   &#xA;    }                                                                                                                                                                                       &#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I've also tried plugging in the query exported from the UI (bug icon on an individual stream display), no joy there either (one hour's worth of matches):</p>&#xA;&#xA;<pre><code>{&#xA;    "from": 0,&#xA;    "size": 100,&#xA;    "query": {&#xA;        "match_all": {}&#xA;    },&#xA;    "post_filter": {&#xA;        "bool": {&#xA;            "must": [&#xA;                {&#xA;                    "range": {&#xA;                        "timestamp": {&#xA;                            "from": "2015-06-16 15:10:09.322",&#xA;                            "to": "2015-06-16 16:10:09.322",&#xA;                            "include_lower": true,&#xA;                            "include_upper": true&#xA;                        }&#xA;                    }&#xA;                },&#xA;                {&#xA;                    "query": {&#xA;                        "query_string": {&#xA;                            "query": "streams:5568c9dbe4b0b31b781bf105"&#xA;                        }&#xA;                    }&#xA;                }&#xA;            ]&#xA;        }&#xA;    },&#xA;    "sort": [&#xA;        {&#xA;            "timestamp": {&#xA;                "order": "desc"&#xA;            }&#xA;        }&#xA;    ],&#xA;    "highlight": {&#xA;        "require_field_match": false,&#xA;        "fields": {&#xA;            "*": {&#xA;                "fragment_size": 0,&#xA;                "number_of_fragments": 0&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;
<p>Try the following query that uses <a href="https://www.elastic.co/guide/en/elasticsearch/guide/master/_most_important_queries_and_filters.html#_bool_query" rel="nofollow">bool query</a>. I use a different timestamp format, which is the default in elasticsearch. Try that format first, if no luck modify the timestamp format to match yours.</p>&#xA;&#xA;<p><div class="snippet" data-lang="js" data-hide="false">&#xD;&#xA;<div class="snippet-code">&#xD;&#xA;<pre class="snippet-code-js lang-js prettyprint-override"><code>{&#xD;&#xA;    "query": {&#xD;&#xA;        "bool" : {&#xD;&#xA;            "should" : [&#xD;&#xA;                {&#xD;&#xA;                    "term": { "level":3 }&#xD;&#xA;                },&#xD;&#xA;                {&#xD;&#xA;                    "range": {&#xD;&#xA;                        "timestamp": {&#xD;&#xA;                            "from": "2015-06-16T15:10:09",&#xD;&#xA;                            "to": "2015-06-16T16:10:09"&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            ]&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;
<p>I've found a query that both matches and lines up pretty closely with numbers I get from the UI ("Search in the last 1 day"):</p>&#xA;&#xA;<pre><code>{                                                                                                                                                                                 &#xA;    "query": {                                                                                                                                                                              &#xA;        "filtered": {                                                                                                                                                                       &#xA;            "query": {                                                                                                                                                                      &#xA;                "term": { "level":3 }                                                                                                                                                       &#xA;            },                                                                                                                                                                              &#xA;            "filter": {                                                                                                                                                                     &#xA;                "range": { "timestamp": { "gte": "now-1d" } }                                                                                                                               &#xA;            }                                                                                                                                                                               &#xA;        }                                                                                                                                                                                   &#xA;    }                                                                                                                                                                                       &#xA;}&#xA;</code></pre>&#xA;