29888492
How to make a query with a must filter on nested fields from different hierarchies
<p>I have the following object in my index:</p>&#xA;&#xA;<pre><code>{&#xA;    "user" : {&#xA;        "info" : {&#xA;            "fname" : "John",&#xA;            "lname" : "Stark"&#xA;        },&#xA;        "settings" : {&#xA;            "hide_menu" : true,&#xA;            "time_offset" : 3&#xA;        }&#xA;    },&#xA;    "views" : [&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is the mapping:</p>&#xA;&#xA;<pre><code>{&#xA;    "dynamic" : "false",&#xA;    "properties" : {&#xA;        "user" : {&#xA;            "type" : "nested",&#xA;            "dynamic" : "false",&#xA;            "properties" : {&#xA;                "info" : {&#xA;                    "type" : "nested",&#xA;                    "dynamic" : "false",&#xA;                    "properties" : {&#xA;                        "fname" : {&#xA;                            "type" : "string",&#xA;                            "index" : "not_analyzed"&#xA;                        },&#xA;                        "lname" : {&#xA;                            "type" : "string",&#xA;                            "index" : "not_analyzed"&#xA;                        }&#xA;                    }&#xA;                },&#xA;                "settings" : {&#xA;                    "type" : "nested",&#xA;                    "dynamic" : "false",&#xA;                    "properties" : {&#xA;                        "hide_menu" : {&#xA;                            "type" : "boolean"&#xA;                        },&#xA;                        "time_offset" : {&#xA;                            "type" : "long"&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And I'd like to create a filter to find all the users whose first name is John and have time_offset=3&#xA;So I need to build a must filter, but the problem is that these 2 fields are nested on different hierarchies: user.info and user.settings</p>&#xA;&#xA;<p>How can I make a must filter (AND) with both of them?</p>&#xA;
<p>You can simply refer the fields with the dot notation.</p>&#xA;&#xA;<pre><code>"filter":{&#xA;     "bool": {&#xA;            "must": [&#xA;                {&#xA;                    "terms": {&#xA;                        "user.info.fname": [&#xA;                            "John"&#xA;                        ]&#xA;                    }&#xA;                },&#xA;                {&#xA;                    "terms": {&#xA;                        "user.settings.time_offset": [&#xA;                            3&#xA;                        ]&#xA;                    }&#xA;                }&#xA;            ]&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Edit</strong>: Updated Query as per mapping provided</p>&#xA;&#xA;<pre><code>{&#xA;    "filter": {&#xA;        "nested": {&#xA;            "path": "user",&#xA;            "filter": {&#xA;                "bool": {&#xA;                    "must": [&#xA;                        {&#xA;                            "nested": {&#xA;                                "path": "user.info",&#xA;                                "filter": {&#xA;                                    "terms": {&#xA;                                        "user.info.fname": [&#xA;                                            "John"&#xA;                                        ]&#xA;                                    }&#xA;                                }&#xA;                            }&#xA;                        },&#xA;                        {&#xA;                            "nested": {&#xA;                                "path": "user.settings",&#xA;                                "filter": {&#xA;                                    "terms": {&#xA;                                        "user.settings.time_offset": [&#xA;                                            3&#xA;                                        ]&#xA;                                    }&#xA;                                }&#xA;                            }&#xA;                        }&#xA;                    ]&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;