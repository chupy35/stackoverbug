33342142
Need to Sort the _term in elastic search aggregation result
<p><a href="https://stackoverflow.com/questions/32969369/need-to-sort-the-term-in-elastic-search">Need to Sort the _term in elastic search aggregation result</a></p>&#xA;&#xA;<p>As per the above question, my elastic search query with the script given by the Val worked fine till the last week. We have upgraded the ES version and suddenly it stopped working. </p>&#xA;&#xA;<pre><code>{&#xA;"size": 0,&#xA;"aggs": {&#xA;"count": {&#xA;  "terms": {&#xA;    "script": "doc.billingSequence.value as Integer",  &lt;--- transform the terms to integers&#xA;    "order": {&#xA;      "_term": "asc"&#xA;    },&#xA;    "value_type": "integer",      &lt;--- consider the terms as integer when sorting&#xA;    "size": 10&#xA;  }&#xA;}&#xA;}&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now suddenly my ES stopped working with code containing "as Integer" in script. Can anyone please check and help.</p>&#xA;&#xA;<pre><code>[DEBUG] 2015-10-26 10:00:13,907 org.elasticsearch.action.search.type - [Eson the Searcher] [owce_assets][4], node[aNnn7tvHRi6tCkOA-RU2nw], [P], s[STARTED]: Failed to execute [org.elasticsearch.action.search.SearchRequest@123872f5] lastShard [true]&#xA;org.elasticsearch.search.SearchParseException: [owce_assets][4]: from[0],size[100]: Parse Failure [Failed to parse source [{"from":0,"size":100,"aggregations_binary":"ewoJCQkJCQkiY291bnQiOiB7IAoJCQkJCQkJInRlcm1zIjogewoJCQkJCQkJCSJzY3JpcHQiOiJkb2MuYmlsbGluZ1NlcXVlbmNlLnZhbHVlIGFzIEludGVnZXIiLAoJCQkJCQkJCSJvcmRlciI6IHsKCQkJCQkJCQkgICJfdGVybSI6ICJhc2MiCgkJCQkJCQkJfSwKCQkJCQkJCQkidmFsdWVfdHlwZSI6ICJpbnRlZ2VyIiwgICAgIAoJCQkJCQkic2l6ZSI6IDIwCgkJCQkJCQkJCgkJCQkJCQkgfQoJCQkJCQl9CgkJCQkJfQ=="}]]&#xA;    at org.elasticsearch.search.SearchService.parseSource(SearchService.java:634)&#xA;    at org.elasticsearch.search.SearchService.createContext(SearchService.java:507)&#xA;    at org.elasticsearch.search.SearchService.createAndPutContext(SearchService.java:480)&#xA;    at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:252)&#xA;    at org.elasticsearch.search.action.SearchServiceTransportAction.sendExecuteQuery(SearchServiceTransportAction.java:202)&#xA;    at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction$AsyncAction.sendExecuteFirstPhase(TransportSearchQueryThenFetchAction.java:80)&#xA;    at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction.performFirstPhase(TransportSearchTypeAction.java:216)&#xA;    at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction.performFirstPhase(TransportSearchTypeAction.java:203)&#xA;    at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction$2.run(TransportSearchTypeAction.java:186)&#xA;    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)&#xA;    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)&#xA;    at java.lang.Thread.run(Thread.java:744)&#xA;Caused by: [Error: unknown class or illegal statement: org.elasticsearch.common.mvel2.ParserContext@7915fb96]&#xA;[Near : {... doc.billingSequence.value as Integer ....}]&#xA;                                         ^&#xA;</code></pre>&#xA;&#xA;<p>I have tried the given query and now it throws the below exception.</p>&#xA;&#xA;<pre><code>[DEBUG] 2015-10-26 10:33:01,912 org.elasticsearch.action.search.type - [Eson the Searcher] [owce_assets][4], node[aNnn7tvHRi6tCkOA-RU2nw], [P], s[STARTED]: Failed to execute [org.elasticsearch.action.search.SearchRequest@66accd25] lastShard [true]&#xA;org.elasticsearch.search.SearchParseException: [owce_assets][4]: from[0],size[100]: Parse Failure [Failed to parse source [{"from":0,"size":100,"aggregations_binary":"ewoiY291bnQiOiB7CiAgInRlcm1zIjogewogICAgInNjcmlwdCI6ICJkb2MuYmlsbGluZ1NlcXVlbmNlLnZhbHVlIGFzIEludGVnZXIiLAogICAgIm9yZGVyIjogewogICAgICAiX3Rlcm0iOiAiYXNjIgogICAgfSwKICAgICJ2YWx1ZV90eXBlIjogImludGVnZXIiLAogICAgInNpemUiOiAxMCwKICAgICJsYW5nIjogImdyb292eSIgICAgICAgICAgICAKICB9Cn0KfQ=="}]]&#xA;at org.elasticsearch.search.SearchService.parseSource(SearchService.java:634)&#xA;at org.elasticsearch.search.SearchService.createContext(SearchService.java:507)&#xA;at org.elasticsearch.search.SearchService.createAndPutContext(SearchService.java:480)&#xA;at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:252)&#xA;at org.elasticsearch.search.action.SearchServiceTransportAction.sendExecuteQuery(SearchServiceTransportAction.java:202)&#xA;at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction$AsyncAction.sendExecuteFirstPhase(TransportSearchQueryThenFetchAction.java:80)&#xA;at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction.performFirstPhase(TransportSearchTypeAction.java:216)&#xA;at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction.performFirstPhase(TransportSearchTypeAction.java:203)&#xA;at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction$2.run(TransportSearchTypeAction.java:186)&#xA;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)&#xA;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)&#xA;at java.lang.Thread.run(Thread.java:744)&#xA;Caused by: org.elasticsearch.ElasticsearchIllegalArgumentException: script_lang not supported [groovy]&#xA;at org.elasticsearch.script.ScriptService.compile(ScriptService.java:143)&#xA;at org.elasticsearch.script.ScriptService.search(ScriptService.java:163)&#xA;at&#xA;org.elasticsearch.search.aggregations.bucket.terms.TermsParser.parse(TermsParser.java:202)&#xA;at org.elasticsearch.search.aggregations.AggregatorParsers.parseAggregators(AggregatorParsers.java:114)&#xA;at org.elasticsearch.search.aggregations.AggregatorParsers.parseAggregators(AggregatorParsers.java:77)&#xA;at org.elasticsearch.search.aggregations.AggregationParseElement.parse(AggregationParseElement.java:60)&#xA;at org.elasticsearch.search.aggregations.AggregationBinaryParseElement.parse(AggregationBinaryParseElement.java:42)&#xA;at org.elasticsearch.search.SearchService.parseSource(SearchService.java:622)&#xA;... 11 more&#xA;</code></pre>&#xA;&#xA;<p>The query I am passing as a parameter is::</p>&#xA;&#xA;<pre><code>{&#xA;    "count": { &#xA;        "terms": {&#xA;            "script": "Integer.parseInt(doc.billingSequence.value)",&#xA;                "order": {&#xA;                              "_term": "asc"&#xA;                            },&#xA;                              "value_type": "integer",&#xA;                            "size": 20&#xA;&#xA;                         }&#xA;                    }&#xA;                }&#xA;</code></pre>&#xA;&#xA;<p>As my indexer contains 1, 2, 4, 6, 14 values in the <code>billingSequence</code> field. But after executing this query, I am getting 2, 4, 6 only in the result.</p>&#xA;&#xA;<p>Exactly my code goes like below..</p>&#xA;&#xA;<pre><code>&lt;mix:variable name="aggregations" as="xs:string"&gt;&#xA;   &lt;mix:option name="disable-expression-parsing" value="true"/&gt;&#xA;       {&#xA;            "fatal_errors": {&#xA;                "filter": { &#xA;                    "and":[&#xA;                        &lt;!-- Filter by date (if given). Value should be send as "`DATE#" and the period should be in Filter data(&lt;Filter name="field_name" value="`DATE#"&gt;1d&lt;/Filter&gt;).--&gt;&#xA;                        &lt;mix:for-each select="//Date"&gt;&#xA;                            &lt;mix:if test="$comma"&gt;,&lt;/mix:if&gt;&#xA;                                { "range": {&#xA;                                    "&lt;mix:value-of select='./@name'/&gt;": {&#xA;                                        "gte": "now-&lt;mix:value-of select='./@value'/&gt;",&#xA;                                            "lt": "now"&#xA;                                        }&#xA;                                    }&#xA;                                 }&#xA;                            &lt;mix:global-variable name="comma" select="true()" as="xs:boolean"/&gt;&#xA;                         &lt;/mix:for-each&gt;    &#xA;&#xA;                        &lt;!-- Filter all the not nulls or blanks in a field (if given). Value should be send as "`NOT_NULL#" (&lt;Filter name="field_name" value="`NOT_NULL#"&gt;&lt;/Filter&gt;).--&gt;&#xA;                        &lt;mix:for-each select="//NotNull"&gt;&#xA;                            &lt;mix:if test="$comma"&gt;,&lt;/mix:if&gt;&#xA;                                {&#xA;                                    "not":&#xA;                                        {&#xA;                                            "term":{&#xA;                                                "&lt;mix:value-of select='./@name'/&gt;":""&#xA;                                            }&#xA;                                     }&#xA;                                }&#xA;                            &lt;mix:global-variable name="comma" select="true()" as="xs:boolean"/&gt;&#xA;                        &lt;/mix:for-each&gt;                                                 &#xA;&#xA;                        &lt;mix:for-each select="//FitlerTerm"&gt;&#xA;                            &lt;mix:if test="$comma"&gt;,&lt;/mix:if&gt;&#xA;                                {&#xA;                                    "term":{&#xA;                                        "&lt;mix:value-of select='./@name'/&gt;":"&lt;mix:value-of select='./@value'/&gt;"&#xA;                                    }&#xA;                                }&#xA;                            &lt;mix:global-variable name="comma" select="true()" as="xs:boolean"/&gt;&#xA;                        &lt;/mix:for-each&gt; &#xA;                    ]&#xA;                },&#xA;                "aggs": {&#xA;                    "count": { &#xA;                        "terms": {&#xA;                            "script": "Integer.parseInt(doc.billingSequence.value)",&#xA;                            "order": {&#xA;                              "_term": "asc"&#xA;                            },&#xA;                              "value_type": "integer",&#xA;                            "size": 20&#xA;&#xA;                         }&#xA;                    }&#xA;                }&#xA;&#xA;            }&#xA;        }&#xA;        &lt;mix:option name="disable-expression-parsing" value="false"/&gt;&#xA;&lt;/mix:variable&gt;&#xA;</code></pre>&#xA;&#xA;<p>Here I am passing an aggregation with filter.. My filter is working fine and at the place of aggregation I am getting the issue. Please check and do the needful.</p>&#xA;
<p>It seems that you're using <code>mvel</code> scripting. You simply need to specify that you want to use <code>groovy</code> instead.</p>&#xA;&#xA;<pre><code>{&#xA;"size": 0,&#xA;"aggs": {&#xA;"count": {&#xA;  "terms": {&#xA;    "script": "doc.billingSequence.value as Integer",&#xA;    "order": {&#xA;      "_term": "asc"&#xA;    },&#xA;    "value_type": "integer",&#xA;    "size": 10,&#xA;    "lang": "groovy"              &lt;--- add this line&#xA;  }&#xA;}&#xA;}&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Also make sure that you include this to your project dependencies as it's not included by default:</p>&#xA;&#xA;<pre><code>    &lt;dependency&gt;&#xA;        &lt;groupId&gt;org.codehaus.groovy&lt;/groupId&gt;&#xA;        &lt;artifactId&gt;groovy-all&lt;/artifactId&gt;&#xA;        &lt;version&gt;2.4.0&lt;/version&gt;&#xA;        &lt;scope&gt;compile&lt;/scope&gt;&#xA;        &lt;optional&gt;true&lt;/optional&gt;&#xA;    &lt;/dependency&gt;&#xA;</code></pre>&#xA;&#xA;<p><strong>UPDATE</strong> </p>&#xA;&#xA;<p>If you really cannot use Groovy, you can stick to MVEL and use MVEL type casting instead:</p>&#xA;&#xA;<pre><code>{&#xA;"size": 0,&#xA;"aggs": {&#xA;"count": {&#xA;  "terms": {&#xA;    "script": "Integer.parseInt(doc.billingSequence.value)",   &lt;--- change this line&#xA;    "order": {&#xA;      "_term": "asc"&#xA;    },&#xA;    "value_type": "integer",&#xA;    "size": 10&#xA;  }&#xA;}&#xA;}&#xA;}&#xA;</code></pre>&#xA;