30531768
From Json String to XContentBuilder
<p>I have a file in json format, is there a way to convert it to a XContentBuilder?</p>&#xA;&#xA;<p>What I want to do is to read a file with some mapping and then convert it to XContentBuilder</p>&#xA;&#xA;<p>Something like:</p>&#xA;&#xA;<pre><code>XContentBuilder builder = JsonXContent.contentBuilder().source(String json);&#xA;</code></pre>&#xA;
<pre><code>val x: XContentBuilder = XContentFactory.jsonBuilder().value("{\"bla\":\"blub\"}")&#xA;</code></pre>&#xA;&#xA;<p>Not sure if this answers your question because you don't provide much information but you can also use strings to add a mapping to an IndexRequestBuilder:</p>&#xA;&#xA;<pre><code>new CreateIndexRequestBuilder(adminclient)&#xA;  .addMapping("typeName", "{\"mapping\" : \"mapping\"}")&#xA;</code></pre>&#xA;&#xA;<p>If you really want and need to create a XContentBuilder Object from a string you can do so like this:</p>&#xA;&#xA;<pre><code>String mapping = "{\"bla\":\"blub\"}"&#xA;XContentBuilder x = XContentFactory.jsonBuilder().value(mapping)&#xA;</code></pre>&#xA;
<p>This seems to work for me:</p>&#xA;&#xA;<pre><code>import static org.elasticsearch.common.xcontent.XContentFactory.jsonBuilder;&#xA;import org.elasticsearch.common.xcontent.XContentBuilder;&#xA;import org.elasticsearch.common.xcontent.XContentFactory;&#xA;import org.elasticsearch.common.xcontent.XContentParser;&#xA;import org.elasticsearch.common.xcontent.XContentType;&#xA;&#xA;...&#xA;&#xA;String message = "{\"bob\": \"test\"}";&#xA;XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(message.getBytes();&#xA;parser.close();&#xA;XContentBuilder builder = jsonBuilder().copyCurrentStructure(parser);&#xA;</code></pre>&#xA;
<p>Usually the API should accept a <code>String</code> or <code>byte[]</code> so you shouldn't need to convert. Maybe you want <code>CreateIndexRequestBuilder#addMapping(String, String)</code>?</p>&#xA;&#xA;<p>If you really, really, really want an <code>XContentBuilder</code> you can make an <code>XContentParser</code> and copy the contents to a builder. As of Elasticsearch 5.2 this should do it:</p>&#xA;&#xA;<pre><code>    String message = "{\"test\":\"test\"}";&#xA;    XContentBuilder b = XContentFactory.jsonBuilder().prettyPrint();&#xA;    try (XContentParser p = XContentFactory.xContent(XContentType.JSON).createParser(NamedXContentRegistry.EMPTY, message)) {&#xA;        b.copyCurrentStructure(p);&#xA;    }&#xA;    System.err.println(b.string());&#xA;</code></pre>&#xA;&#xA;<p>You could probably also do <em>something</em> with raw but I don't think that is worth it.</p>&#xA;&#xA;<p>Pre 5.2 you don't need the <code>NamedXContentRegistry.EMPTY,</code> part.</p>&#xA;