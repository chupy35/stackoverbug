28882092
Synonyms does not seems to work with a wildcard request
<p>I can't get the synonyms to work on my ElasticSearch, I've already tried multiple things but nothing worked so here is how my setup is:</p>&#xA;&#xA;<p>First, my synonyms.txt file:</p>&#xA;&#xA;<pre><code>hello =&gt; world&#xA;</code></pre>&#xA;&#xA;<p>Second, my index metadatas:</p>&#xA;&#xA;<pre><code>"analysis": {&#xA;    "filter": {&#xA;        "ipSynonym": {&#xA;            "type": "synonym",&#xA;            "synonyms_path": "synonyms.txt"&#xA;        },&#xA;        "ipAsciiFolding": {&#xA;            "type": "asciifolding",&#xA;            "preserve_original": "true"&#xA;        },&#xA;        "NoTokenPattern": {&#xA;            "type": "pattern_capture",&#xA;            "preserve_original": "true",&#xA;            "patterns": [".*"]&#xA;        }&#xA;    },&#xA;    "char_filter": {&#xA;        "ipCharFilter": {&#xA;            "type": "mapping",&#xA;            "mappings": ["'=&gt;-",&#xA;            "_=&gt;-"]&#xA;        }&#xA;    },&#xA;    "analyzer": {&#xA;        "ipStrictAnalyzer": {&#xA;            "filter": ["lowercase",&#xA;            "trim",&#xA;            "ipSynonym"],&#xA;            "type": "custom",&#xA;            "tokenizer": "ipStrictTokenizer"&#xA;        },&#xA;        "varIdAnalyser": {&#xA;            "type": "custom",&#xA;            "filter": ["lowercase",&#xA;            "trim"],&#xA;            "tokenizer": "varIdTokenizer"&#xA;        },&#xA;        "pathAnalyzer": {&#xA;            "type": "custom",&#xA;            "filter": ["lowercase"],&#xA;            "tokenizer": "pathTokenizer"&#xA;        },&#xA;        "ipAnalyzer": {&#xA;            "filter": ["icu_normalizer",&#xA;            "icu_folding",&#xA;            "ipSynonym"],&#xA;            "char_filter": ["ipCharFilter"],&#xA;            "type": "custom",&#xA;            "tokenizer": "ipTokenizer"&#xA;        }&#xA;    },&#xA;    "tokenizer": {&#xA;        "varIdTokenizer": {&#xA;            "pattern": "([\W_]+|[a-zA-Z0-9]+|[\w]+)",&#xA;            "type": "pattern",&#xA;            "group": "0"&#xA;        },&#xA;        "ipTokenizer": {&#xA;            "type": "icu_tokenizer"&#xA;        },&#xA;        "pathTokenizer": {&#xA;            "type": "pattern",&#xA;            "pattern": "/"&#xA;        },&#xA;        "ipStrictTokenizer": {&#xA;            "type": "keyword"&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So as you can see there, I created a filter named ipSynonym of type 'synonym' with the synonym_path to my new created synonym.txt file in the config folder of ElasticSearch.</p>&#xA;&#xA;<p>You can see I use this filter in the ipStrictAnalyzer and in the ipAnalyzer.</p>&#xA;&#xA;<p>Now here is what I get when I search on the ElasticSearch API:&#xA;First the request:</p>&#xA;&#xA;<pre><code>http://localhost:9200/media/_analyze?analyzer=ipAnalyzer&amp;text=hello/&#xA;</code></pre>&#xA;&#xA;<p>And the answer:</p>&#xA;&#xA;<pre><code>{&#xA;    "tokens": [{&#xA;        "token": "world",&#xA;        "start_offset": 0,&#xA;        "end_offset": 5,&#xA;        "type": "SYNONYM",&#xA;        "position": 1&#xA;    }]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This let me think that the synonym filter is working fine, right? :)</p>&#xA;&#xA;<p>So I do this query in ElasticSearch now:</p>&#xA;&#xA;<pre><code>"query": {&#xA;    "nested": {&#xA;        "query": {&#xA;            "wildcard": {&#xA;                "name.analyzed": {&#xA;                    "value": "*world*"&#xA;                }&#xA;            }&#xA;        },&#xA;        "path": "name"&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The output is the item I want. This one:</p>&#xA;&#xA;<pre><code>{&#xA;    "_index": "media",&#xA;    "_type": "clipdocument",&#xA;    "_id": "2c215600-b21d-4355-a379-e44db5c9b354",&#xA;    "_score": 1,&#xA;    "_source": {&#xA;        "name": {&#xA;            "analyzed": "world",&#xA;            "notAnalyzed": "world"&#xA;        },&#xA;        "creationDate": "2015-02-27T23:27:58",&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now I search on </p>&#xA;&#xA;<pre><code>"query": {&#xA;    "nested": {&#xA;        "query": {&#xA;            "wildcard": {&#xA;                "name.analyzed": {&#xA;                    "value": "*hello*"&#xA;                }&#xA;            }&#xA;        },&#xA;        "path": "name"&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And I don't find the document I previously found, why? :(</p>&#xA;
<p>So, I find the synonyms system weird but its probably because i'm not used to it.</p>&#xA;&#xA;<p>I retried from a more simple mapping and it worked but the first time (like in the example) I did the synonyms.txt file bad, I wrote hello => world but I wanted to make world => hello. So it kind of work now.</p>&#xA;