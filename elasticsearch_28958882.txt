28958882
Elasticsearch Filtered query vs Filter
<p>Is there any difference between "query and filter in filtered" and "query and filter on the root"? for example</p>&#xA;&#xA;<p>Case 1:</p>&#xA;&#xA;<pre class="lang-js prettyprint-override"><code>{&#xA;  "query":{&#xA;    "filtered":{&#xA;      "query":{&#xA;        "term":{"title":"kitchen3"}&#xA;      },&#xA;      "filter":{&#xA;        "term":{"price":1000}&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Case 2:</p>&#xA;&#xA;<pre class="lang-json prettyprint-override"><code>{&#xA;  "query":{&#xA;    "term":{"title":"kitchen3"}&#xA;  },&#xA;  "filter":{&#xA;    "term":{"price":1000}&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I found this discussion <a href="http://elasticsearch-users.115913.n3.nabble.com/Filtered-query-vs-using-filter-outside-td3960119.html">http://elasticsearch-users.115913.n3.nabble.com/Filtered-query-vs-using-filter-outside-td3960119.html</a>, but referenced URL is 404 and the explanation is a bit too concise for me.</p>&#xA;&#xA;<p>Please teach or give any document which is pointing the difference between these, thank you. </p>&#xA;
<p>The difference is related to performance. "filter" on top level is always executed <strong>after</strong> the query. This means the query is executed on all documents, score is computed for all documents etc. - and only then documents not matching filter are excluded.</p>&#xA;&#xA;<p>With "filtered" query there is a possibility that ES will optimize this computation, e.g. first executing the filter, then executing query on a limited set of documents, saving time on testing the documents that don't match the filter against the query, and on computing scores for them if they do match the query. </p>&#xA;&#xA;<p>If you are performing multiple queries with same filter, then there are even more advantages: the filter may be cached, improving performance of each query even further. This applies to your example: "term" filters are cached by default.</p>&#xA;&#xA;<p>You also can explicitly control the execution of "filtered" query (see the documentation) to optimize it for your particular use case.</p>&#xA;
<p>The filters in the two types can be referred as pre and post filters also. As @alexey explained, root level filter is performed after query and filter in filtered query is performed before the query.</p>&#xA;&#xA;<p>In addition you need to understand the impact of the same other then the order they are executed. The filter in "filtered" query comes under the query scope which means that while calculating aggregations the filtered output will be considered while in case of the root level filter aggregations will be performed only on the results of the query excluding the filter. Though in both case the result documents will be same.</p>&#xA;&#xA;<p>For example with the two queries you have posted, both will give same results, but if you are performing aggregations also the first query will calculate aggregation count from documents matching title kitchen3 and price 10000 while the second query will calculate aggregation count from documents matching title kitchen3 only without filter of price 1000.</p>&#xA;