29896839
Join/Merge Elasticsearch results
<p>We have a documents with a (simplified) structure as shown here in Elasticsearch:</p>&#xA;&#xA;<pre><code>{ _id: ..., patientId: 4711, text: "blue" } &#xA;{ _id: ..., patientId: 4711, text: "red" }&#xA;{ _id: ..., patientId: 4712, text: "blue" } &#xA;{ _id: ..., patientId: 4712, text: "green" } &#xA;{ ... }&#xA;</code></pre>&#xA;&#xA;<p>How can I create a query to find all documents containing the text&#xA;<code>blue</code> and <code>red</code> within the SAME patient.</p>&#xA;&#xA;<p>In the above example I would expect a result set of two documents with <code>patientId 4711</code> (contains <code>blue</code> and <code>red</code>).</p>&#xA;&#xA;<p>Potential solution strategies might be :</p>&#xA;&#xA;<ul>&#xA;<li>Run two queries and "join" results afterward by application logic. </li>&#xA;<li>Run separate queries based on prior list of patients. Only feasible if number of potential patients are small.</li>&#xA;</ul>&#xA;&#xA;<p>Are there better ways (ideal one query) to handle this use case?</p>&#xA;
<p>You can simply use <a href="http://www.elastic.co/guide/en/elasticsearch/reference/0.90/query-dsl-bool-query.html" rel="nofollow">bool query</a> or <a href="http://www.elastic.co/guide/en/elasticsearch/reference/1.3/query-dsl-bool-filter.html" rel="nofollow">bool filter</a></p>&#xA;&#xA;<p>Example using bool filter</p>&#xA;&#xA;<pre><code>{&#xA;    "filtered" : {&#xA;        "query" : {&#xA;            "match_all" : { }&#xA;        },&#xA;        "filter" : {&#xA;            "bool" : {&#xA;&#xA;&#xA;                "Must" : [&#xA;                    {&#xA;                        "term" : { "text" : "blue" }&#xA;                    },&#xA;                    {&#xA;                        "term" : { "text" : "red" }&#xA;                    }&#xA;                ]&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Edit</strong>: misread the requirement:</p>&#xA;&#xA;<p>You should be using <a href="http://www.elastic.co/guide/en/elasticsearch/guide/current/top-hits.html" rel="nofollow">field collapsing</a></p>&#xA;
<p>How about changing the way you store data into elastisearch.&#xA;Just store one document for one patient id, and keep text as array of all distinct colors assigned to that patient.</p>&#xA;