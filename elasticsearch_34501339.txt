34501339
Elasticsearch - "OR" query condition using match query and term query
<p>I have following <strong><em>match</em></strong> query string:</p>&#xA;&#xA;<pre><code>curl -XGET 'my-es.com/my_indice/_search?pretty' -d '{&#xA;  "size" : 10,&#xA;  "query" : {&#xA;    "bool" : {&#xA;      "must" : [ {&#xA;        "match" : {&#xA;          "state" : {&#xA;            "query" : ["ACTIVE", "INACTIVE"],&#xA;            "type" : "boolean"&#xA;          }&#xA;        }&#xA;      }]&#xA;    }&#xA;  }&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>I guess it means <code>"state" = "ACTIVE" or "state" = "INACTIVE"</code>, but actually it performs <code>"state" = "INACTIVE"</code>.</p>&#xA;&#xA;<p>Then I tried <strong><em>term</em></strong> query string:</p>&#xA;&#xA;<pre><code>curl -XGET 'my-es.com/my_indice/_search?pretty' -d '{&#xA;  "size" : 10,&#xA;  "query" : {&#xA;    "bool" : {&#xA;      "must" : [{&#xA;         "terms" : { "state" : ["ACTIVE", "INACTIVE"] }&#xA;      }]&#xA;    }&#xA;  }&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>It performs <code>"state" = "ACTIVE" or "state" = "INACTIVE"</code>, showing <strong><em>term</em></strong> query supports multiple OR conditions via an array.</p>&#xA;&#xA;<p>I'm curious about why <strong><em>match</em></strong> query does not support <strong><em>OR</em></strong> condition via an array? And it does not show any syntax error.</p>&#xA;
<p>The <code>match</code> query only supports a single string value to be specified. It is not explicitly specified in the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query.html" rel="nofollow">official <code>match</code> documentation</a>, but if you're willing to read some source code for <a href="https://github.com/elastic/elasticsearch/blob/37d762914623c830714c942b95e11d728262b115/core/src/main/java/org/elasticsearch/index/query/MatchQueryParser.java#L100" rel="nofollow"><code>MatchQueryParser.java</code></a>, you can see that while parsing the <code>query</code> field, the parser will skip the tokens delimiting the start and end of the array and always override the <code>value</code> with the latest one being parsed, hence why you're seeing what you see, i.e. that <code>state</code> will be matched with <code>INACTIVE</code> only.</p>&#xA;&#xA;<p>What you can do, however, is to put both tokens inside the same string like below, and both tokens will be taken into account:</p>&#xA;&#xA;<pre><code>curl -XGET 'my-es.com/my_indice/_search?pretty' -d '{&#xA;  "size" : 10,&#xA;  "query" : {&#xA;    "bool" : {&#xA;      "must" : [ {&#xA;        "match" : {&#xA;          "state" : {&#xA;            "query" : "ACTIVE INACTIVE",&#xA;            "type" : "boolean"&#xA;          }&#xA;        }&#xA;      }]&#xA;    }&#xA;  }&#xA;}'&#xA;</code></pre>&#xA;