30538437
how to do an atomic increment using elastic search update?
<p>will this update in elastic search cause an atomic increment?  Or will it be non-atomic?</p>&#xA;&#xA;<pre><code>curl -XPOST 'localhost:9200/test/type1/1/_update' -d '{&#xA;    "script" : "ctx._source.counter += count",&#xA;    "params" : {&#xA;        "count" : 1&#xA;    }&#xA;}'&#xA;</code></pre>&#xA;
<p>Non-atomic. You need to use the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-update.html#_parameters_3" rel="nofollow"><code>version</code> parameter</a> to tell ES to update the document only if it has a certain version: <a href="https://www.elastic.co/guide/en/elasticsearch/guide/master/optimistic-concurrency-control.html" rel="nofollow">https://www.elastic.co/guide/en/elasticsearch/guide/master/optimistic-concurrency-control.html</a></p>&#xA;&#xA;<p>For example: <code>/test/type1/1/_update?version=5</code></p>&#xA;
<p><s>I would argue that the suggested update script <em>is</em> atomic</s>, the referred <a href="https://www.elastic.co/guide/en/elasticsearch/guide/master/optimistic-concurrency-control.html" rel="noreferrer">Optimistic Concurrency Control</a> talks about updates on documents which <em>are not</em> atomic (meaning that parallel update requests might get the document into an "inconsistent" unintended state).</p>&#xA;&#xA;<p>Ah, after reading more docs about <a href="https://www.elastic.co/guide/en/elasticsearch/guide/master/partial-updates.html#_updates_and_conflicts" rel="noreferrer">Partial Updates to Documents</a> I learned that actually it is not atomic, but it checks the version number and fails if they don't match (so updates won't silently get lost, as is the case with non-atomic increments on CPUs):</p>&#xA;&#xA;<blockquote>&#xA;  <p>To avoid losing data, the update API retrieves the current _version of&#xA;  the document in the retrieve step, and passes that to the index&#xA;  request during the reindex step. If another process has changed the&#xA;  document between retrieve and reindex, then the _version number won’t&#xA;  match and the update request will fail.</p>&#xA;</blockquote>&#xA;&#xA;<p>However there is an easy fix to make it work just the same as atomic increments:</p>&#xA;&#xA;<blockquote>&#xA;  <p>For many uses of partial update, it doesn’t matter that a document has&#xA;  been changed. For instance, if two processes are both incrementing the&#xA;  page-view counter, it doesn’t matter in which order it happens; if a&#xA;  conflict occurs, the only thing we need to do is reattempt the update.</p>&#xA;  &#xA;  <p>This can be done automatically by setting the <code>retry_on_conflict</code>&#xA;  parameter to the number of times that <code>update</code> should retry before&#xA;  failing; it defaults to <code>0</code>.</p>&#xA;</blockquote>&#xA;