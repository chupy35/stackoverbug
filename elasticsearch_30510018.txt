30510018
How to query for field values that all documents have in common?
<p>I've got the following simple ElasticSearch query:</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "term": {&#xA;      "categories": "1234"&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Which returns a number of documents containing a structure like this:</p>&#xA;&#xA;<pre><code>{&#xA;    "properties": [&#xA;        {&#xA;            "name": "foo",&#xA;            "value": 20&#xA;        },&#xA;        {&#xA;            "name": "bar",&#xA;            "value": 30&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How do I have to alter the above query so ElasticSearch returns a set of values in <code>properties.name</code> that <em>all</em> result documents have in common?</p>&#xA;
<p>You can't do this with a simple query. One of the solution is to use <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-terms-aggregation.html#search-aggregations-bucket-terms-aggregation" rel="nofollow">a term aggregation</a>, like this one:</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "term": {&#xA;      "categories": "1234"&#xA;    }&#xA;  },&#xA;  "aggs": {&#xA;    "properties_name": {&#xA;      "terms": {&#xA;        "field": "properties.name"&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You will get a similar response:</p>&#xA;&#xA;<pre><code>{&#xA;  "_shards": {&#xA;    "total": 5,&#xA;    "successful": 5,&#xA;    "failed": 0&#xA;  },&#xA;  "hits": {&#xA;    "total": 10,&#xA;    "hits": [{...}]&#xA;  }&#xA;  "aggregations": {&#xA;    "properties_name": {&#xA;      "doc_count_error_upper_bound": 0,&#xA;      "sum_other_doc_count": 0,&#xA;      "buckets": [{&#xA;        "key": "foo",&#xA;        "doc_count": 10&#xA;      }, {&#xA;        "key": "bar",&#xA;        "doc_count": 4&#xA;      }, {}]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You usual results will be available under <code>hits</code>, and the aggregation results under <code>aggregations</code>.</p>&#xA;&#xA;<p>Then you can use hits.total (10) to find properties_names which are present in all documents. You simply need to iterate over buckets, and keep ones with doc_count == hits.total</p>&#xA;&#xA;<p>In this example only "foo" properties is present in all documents</p>&#xA;