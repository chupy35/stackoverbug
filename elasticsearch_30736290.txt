30736290
How to correctly setup 2-node ElasticSearch cluster
<p>I have small 2-node cluster</p>&#xA;&#xA;<ol>&#xA;<li><p>node1 is "always on" and placed on production server</p></li>&#xA;<li><p>node2 is "sometimes on" and placed on notebook for developing proposes</p></li>&#xA;</ol>&#xA;&#xA;<p>they both have simple unicast config</p>&#xA;&#xA;<pre><code>discovery.zen.ping.multicast.enabled: false&#xA;discovery.zen.ping.unicast.hosts: [ "other node IP" ]&#xA;</code></pre>&#xA;&#xA;<ol start="3">&#xA;<li>so node2 is very often offline from node1</li>&#xA;<li>node1 is USUALLY master, but SOMETIMES node2 elected as master</li>&#xA;</ol>&#xA;&#xA;<p>Usually node1 has newer data than node2, after connecting all shards are syncronized from node1 to node2 and it's OK</p>&#xA;&#xA;<p>But if node1 has newer data they simply lost.&#xA;If occasionally node1 became master it can kill new data on production</p>&#xA;&#xA;<p>I cannot set node.master : false on notebook because it became not-working offline from node1.</p>&#xA;&#xA;<p>Is there way to setup master-master synchronization behavior with optimictic merging of documents in index (newer wins)?  </p>&#xA;&#xA;<p>May be i must have additional 3d node.data: false, node.master:true node in the middle?</p>&#xA;&#xA;<p>So what i have to do?</p>&#xA;
<p>This is an interesting set-up you're trying to achieve but not one that I would recommend in the long run as you're putting your production node under stress very often.</p>&#xA;&#xA;<p>First off, the term "development" in this case makes little sense because as far as ES is concerned, you're adding a "production" node and killing a "production" node every time. Most of what you do on your "development" node will affect your "production" node.</p>&#xA;&#xA;<p>That said, here's what I would suggest you try:</p>&#xA;&#xA;<ol>&#xA;<li><p>You can set the "development" node to not hold any data with <code>node.data: false</code> and prevent it from every becoming master with <code>node.master: false</code>. As such, when your development node joins, ES will not start moving shards around but you will still be able to query that node. In this configuration, you want to set your number of replicas to 0 on all indexes so that your cluster stays in "green" health. Note that in this configuration, all of the data is stored on the "production" node only. If that goes down, you will have data loss.</p></li>&#xA;<li><p>If you really want the development node to contain a replica of the data, make sure you set <code>node.master: false</code> on it and that all your indexes have a replica count of 1. This way, your "production" node will always have a copy of your data and when your development node goes offline, no data will be lost. When your development node comes back online, it will automatically sync with the "production" node so that its data (its replicas) are up-to-date. Depending on the amount of data you have, this may take some time but is generally quick. Again, beware that whatever query you do on your "development" node affects your production node anyways so again... probably not a good idea in the long run. If you can afford it, it's much better to have at the very least 2 nodes with 1 replica on each index, ideally 3+.</p></li>&#xA;</ol>&#xA;