32568802
Elasticsearch bool filter and minimum_should_match option
<p>I have a following situation - I need to change my bool query to a filter in order to check if it's faster. <br />&#xA;Problem is, we use <code>minimum_should_match</code> parameter a lot, typically with 1 or 0 as a value. Bool filter does not support <code>minimum_should_match</code>, apparently - it gives me <code>nested: QueryParsingException[[index_name] [bool] filter does not support [minimum_should_match]</code> error. So what do I do? Are there any workarounds? <br />We use Elasticsearch 1.7.1</p>&#xA;
<p>In your typical situation you don't need <code>minimum_should_match</code>.</p>&#xA;&#xA;<p>This may not completely answer your question since it is a solution only for <code>0</code> and <code>1</code>.</p>&#xA;&#xA;<p>I wasn't aware that it isn't supported; however, notice that for <code>1</code> and <code>0</code> you don't need the option, because 1 is the default value, and 0 is invalid; it gets ignored and it is as if it were 1. From the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-minimum-should-match.html" rel="nofollow">docs</a>:</p>&#xA;&#xA;<blockquote>&#xA;  <p>No matter what number the calculation arrives at, a value greater than the number of optional clauses, or a value less than 1 will never be used. (ie: no matter how low or how high the result of the calculation result is, the minimum number of required matches <strong>will never be lower than 1</strong> or greater than the number of clauses.</p>&#xA;</blockquote>&#xA;