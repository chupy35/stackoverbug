32354006
How does doc_values work in ElasticSearch
<p>Can someone explain to me how does doc_values work?&#xA;Why would that help me when doing aggregations?</p>&#xA;&#xA;<p>Would it help me when filtering?</p>&#xA;&#xA;<p>For filtering, the way I see it, ElasticSearch would access the inverted index to find "pointers" to all the documents that fit the aggregations, so doc_values, which is an "uninverted index" according to the documentation, is irrelevant? Or am I wrong?</p>&#xA;&#xA;<p>Can someone explain the flow of an aggregation when doc_values is enabled, and when it isn't, and why enabling it saves memory?</p>&#xA;&#xA;<p>Thanks.</p>&#xA;
<p>General statements about <code>doc_values</code>:</p>&#xA;&#xA;<ul>&#xA;<li><code>doc_values</code> will help with <strong>heap</strong> memory usage</li>&#xA;<li>they are used for the memory section called <code>fielddata</code></li>&#xA;<li><code>fielddata</code> is being used when sorting, doing aggregations, when using scripts that access field values, when using parent-child relationships and geo-distance filters</li>&#xA;</ul>&#xA;&#xA;<p>Until <code>doc_values</code> came into play, fielddata was being loaded into <strong>heap</strong>. <code>doc_values</code> will not use the heap, but the memory outside the heap - the file system cache, because <code>doc_values</code> will live in the file system. Lucene will access the file system, the operating system will cache it in the file system cache and then serve requests from there.</p>&#xA;&#xA;<p>Why is this important: the heap has a limited size and the recommendation is not to use more than 30ish GB for heap size. The heap, also, contains other sections: filter caches, query caches, indexing buffers, meta-data from the segment files etc. Fielddata, usually, takes a lot of room not because it is inefficient, but because ES needs to load all the documents into memory so that it can sort, aggregate on them. For larger indices (implicitly, shards) this means a lot of data.</p>&#xA;&#xA;<p>That's why <code>doc_values</code> were introduced: move all this burden from the heap (which is limited) to the OS file system cache (which is limited, as well, but definitely with less pressure on it).</p>&#xA;&#xA;<p><code>doc_values</code> it will not help you with aggregations per se. <code>doc_values</code> means fielddata. <strong>Fielddata is mandatory for aggregations</strong>. <code>doc_values</code> will help you with <strong>heap</strong> memory usage.</p>&#xA;