33041340
Elasticsearch, how to use filter gte on specific structure
<p>I'm trying to learn Elasticsearch, and therefore I'm trying to find a good data structure, that will fit my needs for querying.</p>&#xA;&#xA;<p>My data structure actually looks like this : </p>&#xA;&#xA;<pre><code>{&#xA;    "questions": [&#xA;    {&#xA;    "id": "n1-pain-score",&#xA;    "name": "Pain score",&#xA;    "answer": {&#xA;        "value": 3,&#xA;        "label": "Small pain"&#xA;        }&#xA;    },&#xA;    {&#xA;    "id": "n2-temperature",&#xA;    "name": "Temperature",&#xA;    "answer": {&#xA;        "value": 37.5,&#xA;        "label": "37.5°C"&#xA;         }&#xA;    }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>For a given patient, there are multiple questions and answers.&#xA;Is there a way to take advantage of Elasticsearch filtered queries and say : &#xA;<code>I want to see the patients that have a pain score over 6</code> ?</p>&#xA;&#xA;<p>Note that I'm only testing and I still can modify the data structure to get what I want :). </p>&#xA;
<p>It is possible to do with a filtered query. A plain query will also do:</p>&#xA;&#xA;<pre><code>GET {index}/{type}/_search&#xA;{&#xA;    "query": {&#xA;        "bool": {&#xA;            "must": [&#xA;               {&#xA;                   "match": {&#xA;                      "name": "Pain score"&#xA;                   }&#xA;               },&#xA;               {&#xA;                 "range": {&#xA;                    "answer.value": {&#xA;                      "gt":6&#xA;                    }&#xA;                 }&#xA;               }&#xA;            ]&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;
<p>I suggest the following mapping and queries. Most important part - <code>questions</code> needs to be of type <code>nested</code> so that the <code>id</code> matching should of the same element of <code>questions</code>. Meaning the <code>id</code> with value <code>n1-pain-score</code> must belong to the same element that also contains <code>answer.value: 3</code>.</p>&#xA;&#xA;<pre><code>DELETE test&#xA;PUT /test&#xA;{&#xA;  "mappings": {&#xA;    "test": {&#xA;      "properties": {&#xA;        "questions": {&#xA;          "type": "nested",&#xA;          "properties": {&#xA;            "answer": {&#xA;              "properties": {&#xA;                "label": {&#xA;                  "type": "string"&#xA;                },&#xA;                "value": {&#xA;                  "type": "long"&#xA;                }&#xA;              }&#xA;            },&#xA;            "id": {&#xA;              "type": "string",&#xA;              "fields": {&#xA;                "notAnalyzed": {&#xA;                  "type": "string",&#xA;                  "index": "not_analyzed"&#xA;                }&#xA;              }&#xA;            },&#xA;            "name": {&#xA;              "type": "string"&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;POST /test/test/1&#xA;{&#xA;  "questions": [&#xA;    {&#xA;      "id": "n1-pain-score",&#xA;      "name": "Pain score",&#xA;      "answer": {&#xA;        "value": 3,&#xA;        "label": "Small pain"&#xA;      }&#xA;    },&#xA;    {&#xA;      "id": "n2-temperature",&#xA;      "name": "Temperature",&#xA;      "answer": {&#xA;        "value": 37.5,&#xA;        "label": "37.5°C"&#xA;      }&#xA;    }&#xA;  ]&#xA;}&#xA;&#xA;GET /test/_search&#xA;{&#xA;  "query": {&#xA;    "nested": {&#xA;      "path": "questions",&#xA;      "query": {&#xA;        "bool": {&#xA;          "must": [&#xA;            {&#xA;              "term": {&#xA;                "questions.id.notAnalyzed": {&#xA;                  "value": "n1-pain-score"&#xA;                }&#xA;              }&#xA;            },&#xA;            {&#xA;              "range": {&#xA;                "questions.answer.value": {&#xA;                  "gte": 3&#xA;                }&#xA;              }&#xA;            }&#xA;          ]&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;GET /test/_search&#xA;{&#xA;  "query": {&#xA;    "nested": {&#xA;      "path": "questions",&#xA;      "query": {&#xA;        "bool": {&#xA;          "must": [&#xA;            {&#xA;              "term": {&#xA;                "questions.id.notAnalyzed": {&#xA;                  "value": "n2-temperature"&#xA;                }&#xA;              }&#xA;            },&#xA;            {&#xA;              "range": {&#xA;                "questions.answer.value": {&#xA;                  "gte": 38&#xA;                }&#xA;              }&#xA;            }&#xA;          ]&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;