32266631
Is it possible to count number of matches when using should filter based on custom weight values?
<p>For example, I have index <code>pizzas</code>. And I have Bool Filter</p>&#xA;&#xA;<pre><code> "bool": {&#xA;      "should": {&#xA;          "toppings": [&#xA;            {&#xA;              "query": "Tomatoes"&#xA;            },&#xA;            {&#xA;              "query": "Mushrooms"&#xA;            }&#xA;          ]&#xA;        }&#xA;      }&#xA;</code></pre>&#xA;&#xA;<p>Can ElasticSearch return match percentage for all pizzas in index, so all that have <code>mushrooms XOR tomatoes</code>, will return 50%, if both - 100%. And other toppings are irrelevant.</p>&#xA;&#xA;<p>If yes, could we extend this functionality that way, so we could add for each topping weight value. &#xA;For example I'm interested in Tomatoes(50) , in Mushrooms(75) and Chili(100).&#xA;So in sum it will be 50 + 75 + 100 = 225&#xA;So Margherita has Tomatoes and Muchrooms = 125.&#xA;So this pizza match percentage should return near 56% ( 125/225).</p>&#xA;&#xA;<p>I read ElasticSearch guide, read like hundred of times API docs, tried filters, queries, minimum_should_match, boost. I will really appreciate at least some direction where to search further.</p>&#xA;
<p>I can see three different methods to execute this </p>&#xA;&#xA;<p><strong>Named query</strong></p>&#xA;&#xA;<p>You can use <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-named-queries-and-filters.html" rel="nofollow">named query</a> in bool and see which all queries matched against each document. On client side you can compute the values of each topping and find the sum yourself.</p>&#xA;&#xA;<p><strong>Function score query</strong></p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "function_score": {&#xA;      "filter": {&#xA;        "terms": {&#xA;          "toppings": [&#xA;            "Tomatoes",&#xA;            "Mushrooms",&#xA;            "chillies"&#xA;          ]&#xA;        }&#xA;      },&#xA;      "functions": [&#xA;        {&#xA;          "weight": 100,&#xA;          "filter": {&#xA;            "toppings": "chillies"&#xA;          }&#xA;        },&#xA;        {&#xA;          "weight": 50,&#xA;          "filter": {&#xA;            "toppings": "Tomatoes"&#xA;          }&#xA;        },&#xA;        {&#xA;          "weight": 75,&#xA;          "filter": {&#xA;            "toppings": "Mushrooms"&#xA;          }&#xA;        }&#xA;      ],&#xA;      "score_mode": "sum",&#xA;      "boost_mode": "replace"&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In the above documents having either chillies or tomatoes or mushroom would be matched. For whatever filter is present , it will create a boost values and add it. So the score given by the functions are the sum you are looking for. Now this is replaced by the query score. Hence score of the document would be the number you are looking for.</p>&#xA;&#xA;<p><strong>Script field approach</strong></p>&#xA;&#xA;<p>Here you need to use <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-script-fields.html" rel="nofollow">script field</a> . Which will create a additional field per document which computes the sum you are looking for using script</p>&#xA;