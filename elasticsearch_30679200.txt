30679200
Java - Elasticsearch : sort based on distance
<p>This is my ES mapping</p>&#xA;&#xA;<pre><code>{&#xA;  "titan": {&#xA;    "mappings": {&#xA;      "tagLabelIndices": {&#xA;        "_ttl": {&#xA;          "enabled": true&#xA;        },&#xA;        "properties": {&#xA;          "tagLabel": {&#xA;            "type": "string"&#xA;          }&#xA;        }&#xA;      },&#xA;      "objIndices": {&#xA;        "_ttl": {&#xA;          "enabled": true&#xA;        },&#xA;        "properties": {&#xA;          "objAddress": {&#xA;            "type": "string"&#xA;          },&#xA;          "objGeoLocation": {&#xA;            "type": "geo_point"&#xA;          },&#xA;          "objTitle": {&#xA;            "type": "string"&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now I want to do distance based search</p>&#xA;&#xA;<pre><code>public static String getTitleBasedQuery( String titleString)&#xA;{&#xA;    StringBuilder sb = new StringBuilder();&#xA;    sb.append(AppConstants.Common.property.objTitle);&#xA;    sb.append(":");&#xA;    sb.append(titleString);&#xA;&#xA;    return sb.toString();&#xA;}&#xA;&#xA;public static ArrayList&lt;Long&gt; esQueryExecuter(Client client,String query, int start, String sortOnField,int resultPerPage,String types,SortOrder order)&#xA;{&#xA;    SearchResponse response = client.prepareSearch("titan")&#xA;    .setTypes(types)&#xA;    .setQuery(QueryBuilders.queryString(query))&#xA;    .setFrom((start-1)*resultPerPage).setSize(resultPerPage)&#xA;    .addSort(sortOnField, order)&#xA;    .execute()&#xA;    .actionGet();&#xA;&#xA;    SearchHit[] results = response.getHits().getHits();&#xA;    ArrayList&lt;Long&gt; al = new ArrayList&lt;Long&gt;();&#xA;    for (SearchHit hit : results) &#xA;        al.add(LongEncoding.decode(hit.getId()));&#xA;    return al;&#xA;}     &#xA;&#xA;&#xA;System.out.println(esQueryExecuter(esClient, getTitleBasedQuery("Matrix's rain javascript"), 1, AppConstants.Common.property.objGeoLocation.toString(), 10, "objIndices", SortOrder.ASC));&#xA;</code></pre>&#xA;&#xA;<p>i got this error:</p>&#xA;&#xA;<pre><code>nested: ElasticsearchIllegalArgumentException[can't sort on geo_point field without using specific sorting feature, like geo_distance]; }&#xA;</code></pre>&#xA;&#xA;<p>again somewhere i saw <code>setFilter(GeoDistanceRangeFilterBuilder)</code> but this method was not found</p>&#xA;
<p>Sorting by distance requires a specific distance sort structure called <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-sort.html#_geo_distance_sorting" rel="nofollow"><code>_geo_distance</code></a> which you can build this way</p>&#xA;&#xA;<pre><code>SearchResponse response = client.prepareSearch("titan")&#xA;    .setTypes(types)&#xA;    .setQuery(QueryBuilders.queryString(query))&#xA;    .setFrom((start-1)*resultPerPage).setSize(resultPerPage)&#xA;    .addSort(SortBuilders.geoDistanceSort(sortOnField)&#xA;        .order(order)&#xA;        .point(ORIGIN_LAT, ORIGIN_LON)&#xA;        .unit("km"))&#xA;    .execute()&#xA;    .actionGet();&#xA;</code></pre>&#xA;&#xA;<p>Note that you also need to input <code>ORIGIN_LAT</code> + <code>ORIGIN_LON</code> as a reference point from which to compute the distance to sort on.</p>&#xA;&#xA;<p>If you need to add a range within which to search, you can do it with a <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-geo-distance-filter.html" rel="nofollow"><code>geo_distance</code> filter</a>:</p>&#xA;&#xA;<pre><code>GeoDistanceFilterBuilder geoDistanceFilterBuilder = FilterBuilders.geoDistanceFilter(sortOnField)&#xA;  .point(ORIGIN_LAT, ORIGIN_LON)&#xA;  .distance(10, "km")&#xA;  .optimizeBbox("memory")&#xA;  .geoDistance(GeoDistance.ARC);&#xA;&#xA;SearchResponse response = client.prepareSearch("titan")&#xA;    .setTypes(types)        &#xA;    .setQuery(QueryBuilders.filteredQuery(QueryBuilders.queryString(query),&#xA;         geoDistanceFilterBuilder))&#xA;    .setFrom((start-1)*resultPerPage).setSize(resultPerPage)&#xA;    .addSort(SortBuilders.geoDistanceSort(sortOnField)&#xA;        .order(order)&#xA;        .point(ORIGIN_LAT, ORIGIN_LON)&#xA;        .unit("km"))&#xA;    .execute()&#xA;    .actionGet();&#xA;</code></pre>&#xA;