32160390
Elasticsearch: Wildcard query returns error
<p>I have following data in my ES database</p>&#xA;&#xA;<pre><code>{&#xA;   "took": 3,&#xA;   "timed_out": false,&#xA;   "_shards": {&#xA;      "total": 5,&#xA;      "successful": 5,&#xA;      "failed": 0&#xA;   },&#xA;   "hits": {&#xA;      "total": 618,&#xA;      "max_score": 1,&#xA;      "hits": [&#xA;         {&#xA;            "_index": "secse",&#xA;            "_type": "monologue",&#xA;            "_id": "4",&#xA;            "_score": 1,&#xA;            "_source": {&#xA;               "username": "balpha",&#xA;               "timestamp": "2011-03-04T00:00:00",&#xA;               "identifier": "4",&#xA;               "messages": [&#xA;                  {&#xA;                     "message": "\n \n \n\r\n                    @Iszi new feature:                      \r\n                \n\n\n",&#xA;                     "identifier": "604694"&#xA;                  },&#xA;                  {&#xA;                     "message": "\n \n\n3A: Chat clean up &amp; owner rulesSure. In most cases, the room owner is more or less arbitrary, because it's just the person who was first to create the (e.g.) PHP room. But of course it makes sense to have several owners, especially for rooms that are quite active and have developed their own \"style\", and have those owners be p...\n\n\n\n",&#xA;                     "identifier": "604695"&#xA;                  }&#xA;               ]&#xA;            }&#xA;         },&#xA;         {&#xA;            "_index": "secse",&#xA;            "_type": "monologue",&#xA;            "_id": "4331",&#xA;            "_score": 1,&#xA;            "_source": {&#xA;               "username": "Jenko",&#xA;               "timestamp": "2011-01-06T00:00:00",&#xA;               "identifier": "4331",&#xA;               "messages": [&#xA;                  {&#xA;                     "message": "\n \n\n0Q: Prevent acccess to the C driveIs it possible to prevent regular users from accessing or modifying the C drive? they should be allowed to execute certain programs. This is to ensure that employees cannot steal or copy out proprietary software even though they should be able to execute it.\n\nThis is for Windows XP/7.\nsecurity protection access-control\n\n\n\n",&#xA;                     "identifier": "290604"&#xA;                  }&#xA;               ]&#xA;            }&#xA;         },&#xA;         {&#xA;            "_index": "secse",&#xA;            "_type": "monologue",&#xA;            "_id": "4728",&#xA;            "_score": 1,&#xA;            "_source": {&#xA;               "username": "JHarley1",&#xA;               "timestamp": "2011-01-12T00:00:00",&#xA;               "identifier": "4728",&#xA;               "messages": [&#xA;                  {&#xA;                     "message": "\n \n\r\n                    I am just reading up on Kerberos in regards to application security, does anyone know anything about it?                      \r\n                \n\n\n",&#xA;                     "identifier": "308589"&#xA;                  }&#xA;               ]&#xA;            }&#xA;         },&#xA;         {&#xA;            "_index": "secse",&#xA;            "_type": "monologue",&#xA;            "_id": "6356",&#xA;            "_score": 1,&#xA;            "_source": {&#xA;               "username": "itsnotvalid",&#xA;               "timestamp": "2011-01-29T00:00:00",&#xA;               "identifier": "6356",&#xA;               "messages": [&#xA;                  {&#xA;                     "message": "\n \n\r\n                    well, i can talk without being a member in security.sx                      \r\n                \n\n\n",&#xA;                     "identifier": "428619"&#xA;                  }&#xA;               ]&#xA;            }&#xA;         },&#xA;         {&#xA;            "_index": "secse",&#xA;            "_type": "monologue",&#xA;            "_id": "4658",&#xA;            "_score": 1,&#xA;            "_source": {&#xA;               "username": "Essobi",&#xA;               "timestamp": "2011-01-20T00:00:00",&#xA;               "identifier": "4658",&#xA;               "messages": [&#xA;                  {&#xA;                     "message": "\n \n\r\n                    doing fine                      \r\n                \n\n\n",&#xA;                     "identifier": "389309"&#xA;                  }&#xA;               ]&#xA;            }&#xA;         },&#xA;         {&#xA;            "_index": "secse",&#xA;            "_type": "monologue",&#xA;            "_id": "6705",&#xA;            "_score": 1,&#xA;            "_source": {&#xA;               "username": "Richard Gadsden",&#xA;               "timestamp": "2011-05-14T00:00:00",&#xA;               "identifier": "6705",&#xA;               "messages": [&#xA;                  {&#xA;                     "message": "\n \n\r\n                    Afternoon, @ScottPack (3:25pm here)                      \r\n                \n\n\n",&#xA;                     "identifier": "978411"&#xA;                  }&#xA;               ]&#xA;            }&#xA;         },&#xA;         {&#xA;            "_index": "secse",&#xA;            "_type": "monologue",&#xA;            "_id": "12635",&#xA;            "_score": 1,&#xA;            "_source": {&#xA;               "username": "WZeberaFFS",&#xA;               "timestamp": "2011-05-06T00:00:00",&#xA;               "identifier": "12635",&#xA;               "messages": [&#xA;                  {&#xA;                     "message": "\n \n\r\n                    @Iszi agreed +1 :)                      \r\n                \n\n\n",&#xA;                     "identifier": "933929"&#xA;                  }&#xA;               ]&#xA;            }&#xA;         },&#xA;         {&#xA;            "_index": "secse",&#xA;            "_type": "monologue",&#xA;            "_id": "13335",&#xA;            "_score": 1,&#xA;            "_source": {&#xA;               "username": "Justin",&#xA;               "timestamp": "2011-04-29T00:00:00",&#xA;               "identifier": "13335",&#xA;               "messages": [&#xA;                  {&#xA;                     "message": "\n \n\r\n                    @ThomasPornin Shouldn't the encyclopedia only include questions as such? So if said question is a terrible one why not correct the question to meet the answer?                      \r\n                \n\n\n",&#xA;                     "identifier": "903332"&#xA;                  },&#xA;                  {&#xA;                     "message": "\n \n\r\n                    Nevermind, I just thought about it.                      \r\n                \n\n\n",&#xA;                     "identifier": "903334"&#xA;                  }&#xA;               ]&#xA;            }&#xA;         },&#xA;         {&#xA;            "_index": "secse",&#xA;            "_type": "monologue",&#xA;            "_id": "1084",&#xA;            "_score": 1,&#xA;            "_source": {&#xA;               "username": "Ben Pilbrow",&#xA;               "timestamp": "2011-03-30T00:00:00",&#xA;               "identifier": "1084",&#xA;               "messages": [&#xA;                  {&#xA;                     "message": "\n \n\r\n                    We'll get a complaining post on Meta if we're not careful. Something to strive for I guess :-)                      \r\n                \n\n\n",&#xA;                     "identifier": "752945"&#xA;                  }&#xA;               ]&#xA;            }&#xA;         },&#xA;         {&#xA;            "_index": "secse",&#xA;            "_type": "monologue",&#xA;            "_id": "10608",&#xA;            "_score": 1,&#xA;            "_source": {&#xA;               "username": "Fred1234",&#xA;               "timestamp": "2011-04-08T00:00:00",&#xA;               "identifier": "10608",&#xA;               "messages": [&#xA;                  {&#xA;                     "message": "\n \n\r\n                    Hi guys...                      \r\n                \n\n\n",&#xA;                     "identifier": "795968"&#xA;                  }&#xA;               ]&#xA;            }&#xA;         }&#xA;      ]&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I wanted to use following query to return all entries with a timestamp of 2011:</p>&#xA;&#xA;<pre><code>GET _search&#xA;{"query" : {&#xA;    "wildcard" : { "timestamp" : "2011*" }&#xA;}&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But I'm getting following error:</p>&#xA;&#xA;<pre><code>{&#xA;   "error": "SearchPhaseExecutionException[Failed to execute phase [query], all shards failed; shardFailures {[vqcfh1FdQyGetag21_zKTQ][secse][0]: SearchParseException[[secse][0]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\" : {\n        \"wildcard\" : { \"timestamp\" : \"2011*\" }\n    }\n    }\n]]]; nested: IllegalArgumentException[Invalid format: \"2011*\" is malformed at \"*\"]; }{[vqcfh1FdQyGetag21_zKTQ][secse][1]: SearchParseException[[secse][1]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\" : {\n        \"wildcard\" : { \"timestamp\" : \"2011*\" }\n    }\n    }\n]]]; nested: IllegalArgumentException[Invalid format: \"2011*\" is malformed at \"*\"]; }{[vqcfh1FdQyGetag21_zKTQ][secse][2]: SearchParseException[[secse][2]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\" : {\n        \"wildcard\" : { \"timestamp\" : \"2011*\" }\n    }\n    }\n]]]; nested: IllegalArgumentException[Invalid format: \"2011*\" is malformed at \"*\"]; }{[vqcfh1FdQyGetag21_zKTQ][secse][3]: SearchParseException[[secse][3]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\" : {\n        \"wildcard\" : { \"timestamp\" : \"2011*\" }\n    }\n    }\n]]]; nested: IllegalArgumentException[Invalid format: \"2011*\" is malformed at \"*\"]; }{[vqcfh1FdQyGetag21_zKTQ][secse][4]: SearchParseException[[secse][4]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\"query\" : {\n        \"wildcard\" : { \"timestamp\" : \"2011*\" }\n    }\n    }\n]]]; nested: IllegalArgumentException[Invalid format: \"2011*\" is malformed at \"*\"]; }]",&#xA;   "status": 400&#xA;}&#xA;</code></pre>&#xA;
<p>So basically you want all the document whose timestamp is in 2011. You can do it more simply and efficiently with a <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-range-query.html" rel="nofollow"><code>range</code> query</a>.</p>&#xA;&#xA;<p>Try this:</p>&#xA;&#xA;<pre><code>curl -XPOST localhost:9200/_search -d '{&#xA;    "query": {&#xA;        "range": {&#xA;            "timestamp": {&#xA;                "gte": "2011",&#xA;                "lte": "2011",&#xA;                "format": "yyyy"&#xA;            }&#xA;        }&#xA;    }&#xA;}'&#xA;</code></pre>&#xA;