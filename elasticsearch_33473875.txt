33473875
UnavailableShardsException when running tests with 1 shard and 1 node
<p>We are running our tests (PHP application) in Docker. Some tests use Elasticsearch.</p>&#xA;&#xA;<p>We have configured Elasticsearch to have only 1 node and 1 shard (for simplicity). Here is the config we added to the default:</p>&#xA;&#xA;<pre><code>index.number_of_shards: 1&#xA;index.number_of_replicas: 0&#xA;</code></pre>&#xA;&#xA;<p>Sometimes when the tests run, they fail because of the following Elasticsearch response:</p>&#xA;&#xA;<pre><code>{&#xA;  "_indices":{&#xA;    "acme":{&#xA;      "_shards":{&#xA;        "total":1,&#xA;        "successful":0,&#xA;        "failed":1,&#xA;        "failures":[&#xA;          {&#xA;            "index":"acme",&#xA;            "shard":0,&#xA;            "reason":"UnavailableShardsException[[acme][0] Primary shard is not active or isn't assigned to a known node. Timeout: [1m], request: delete_by_query {[acme][product], query [{\"query\":{\"term\":{\"product_id\":\"3\"}}}]}]"&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The error message extracted from the response:</p>&#xA;&#xA;<blockquote>&#xA;  <p>UnavailableShardsException[[acme][0] Primary shard is not active or isn't assigned to a known node. Timeout: [1m], request: delete_by_query {[acme][product], query [{\"query\":{\"term\":{\"product_id\":\"3\"}}}]}]</p>&#xA;</blockquote>&#xA;&#xA;<p>Why would our client fail to connect to Elasticsearch's node or shard randomly? Is this something to do with the fact that we have only 1 shard? Is this a bad thing?</p>&#xA;