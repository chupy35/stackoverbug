30935978
Nested search bool query with must and should operators
<p>I'm trying a nested aggregation and to apply a filter on it.</p>&#xA;&#xA;<p>See the following example:</p>&#xA;&#xA;<p><strong>Car</strong></p>&#xA;&#xA;<ul>&#xA;<li>brand</li>&#xA;<li>name</li>&#xA;<li>features</li>&#xA;</ul>&#xA;&#xA;<p><strong>Features</strong></p>&#xA;&#xA;<ul>&#xA;<li>name</li>&#xA;<li>value</li>&#xA;</ul>&#xA;&#xA;<p>Here's some test data:</p>&#xA;&#xA;<pre><code>car_A:&#xA;{&#xA; brand :"VW",&#xA; name: "Golf",&#xA; features: [&#xA;  {name: "color", value: "black"},&#xA;  {name: "power", value: "150"}&#xA; ]&#xA;}&#xA;&#xA;car_B:&#xA;{&#xA; brand :"VW",&#xA; name: "Golf",&#xA; features: [&#xA;  {name: "color", value: "blue"},&#xA;  {name: "power", value: "150"}&#xA; ]&#xA;}&#xA;&#xA;car_C:&#xA;{&#xA; brand :"VW",&#xA; name: "Golf",&#xA; features: [&#xA;  {name: "color", value: "white"},&#xA;  {name: "power", value: "150"}&#xA; ]&#xA;}&#xA;&#xA;car_D:&#xA;{&#xA; brand :"BMW",&#xA; name: "X3",&#xA; features: [&#xA;  {name: "color", value: "white"},&#xA;  {name: "power", value: "180"}&#xA; ]&#xA;}&#xA;&#xA;car_E:&#xA;{&#xA; brand :"BMW",&#xA; name: "X5",&#xA; features: [&#xA;  {name: "color", value: "blue"},&#xA;  {name: "power", value: "250"}&#xA; ]&#xA;}&#xA;&#xA;car_F:&#xA;{&#xA; brand :"BMW",&#xA; name: "X3",&#xA; features: [&#xA;  {name: "color", value: "blue"},&#xA;  {name: "power", value: "150"}&#xA; ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and here's the query:</p>&#xA;&#xA;<pre><code>"query": {&#xA;"nested": {&#xA;  "path": "features",&#xA;  "query": {&#xA;    "bool": {&#xA;      "should": [&#xA;        {&#xA;          "match": {&#xA;            "features.color": "blue"&#xA;          }&#xA;        },&#xA;        {&#xA;          "match": {&#xA;            "features.color": "white"&#xA;          }&#xA;        }&#xA;      ],&#xA;      "must": [&#xA;        {"match": {&#xA;          "features.power": 150&#xA;        }}&#xA;      ]&#xA;    }&#xA;  }&#xA; }&#xA;} &#xA;</code></pre>&#xA;&#xA;<p>The query result is A,B,C,F</p>&#xA;&#xA;<p>The expected result should be B,C,F (color=blue <strong>OR</strong> color=white) <strong>AND</strong> power=150</p>&#xA;
<p>Try this query:</p>&#xA;&#xA;<pre><code>"query": {&#xA;"nested": {&#xA;  "path": "features",&#xA;  "query": {&#xA;    "bool": {&#xA;      "should": [&#xA;        {&#xA;          "match": {&#xA;            "features.color": "blue"&#xA;          }&#xA;        },&#xA;        {&#xA;          "match": {&#xA;            "features.color": "white"&#xA;          }&#xA;        }&#xA;      ],&#xA;      "must": [&#xA;        {"match": {&#xA;          "features.power": 150&#xA;        }}&#xA;      ]&#xA;    }&#xA;  }&#xA; }&#xA;} &#xA;</code></pre>&#xA;&#xA;<p>Meaning, the fields that you use in the query should be prefixed with the name of the <code>path</code>: <code>features.color</code>, <code>features.power</code>.</p>&#xA;&#xA;<p><strong>EDIT</strong>:</p>&#xA;&#xA;<p>Try this query (I missed the essential here - you need two <code>must</code>s, one being a <code>bool</code> with <code>should</code>s):</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "nested": {&#xA;      "path": "features",&#xA;      "query": {&#xA;        "bool": {&#xA;          "must": [&#xA;            {&#xA;              "match": {&#xA;                "features.power": 150&#xA;              }&#xA;            },&#xA;            {&#xA;              "bool": {&#xA;                "should": [&#xA;                  {&#xA;                    "match": {&#xA;                      "features.color": "blue"&#xA;                    }&#xA;                  },&#xA;                  {&#xA;                    "match": {&#xA;                      "features.color": "white"&#xA;                    }&#xA;                  }&#xA;                ]&#xA;              }&#xA;            }&#xA;          ]&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;