28604142
Elasticsearch, filter on full-text string
<p>I am just starting to use Elasticsearch and I have to work with data generated by a colleague. I noticed that every String data is a full-text value :</p>&#xA;&#xA;<pre><code>{&#xA;    "countryId": {&#xA;      "type": "string"&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>but we never need to do a full text search, so exact values with filter search would be perfectly fine. The only problem is that the type of those values cannot be change for the moment, because of a lack of time.</p>&#xA;&#xA;<p>So my question is this : what will happen if I do a filter based search on full-text values ? Will the search criteria be analyzed like it would be if using a <code>match</code> search , or will the filter ignore the full-text type of this value and process it as an exact value, saving a lot of search time since filters are really fast ?</p>&#xA;&#xA;<p>I looked into the documentation and around but could not get a clear answer.</p>&#xA;
<p>You may have already empirically observed what happens when you try this, but in order for the <code>term</code> filter to behave as expected (exactly match the specified parameter in the specified field), the mapping for the index must define the field's <code>index</code> property as <code>not_analyzed</code>.  The official documentation for the <code>term</code> filter is <a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl-term-filter.html" rel="nofollow">here</a>, but the most immediately relevant portion may be this:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Filters documents that have fields that contain a term (not analyzed).</p>&#xA;</blockquote>&#xA;&#xA;<p>So, your index should have a mapping defined similarly to the following:</p>&#xA;&#xA;<pre><code>{"mappings" : {"the_document_type": {&#xA;  "countryId" : {"type" : "string", "index" : "not_analyzed"},&#xA;  ...&#xA;  ... Mappings for other fields in your document&#xA;  ...&#xA;}}}&#xA;</code></pre>&#xA;&#xA;<p>Given the snippet above, a query containing a <code>term</code> filter requiring documents to exactly match some specified parameter for <code>countryId</code> should be successful.  Something like the following:</p>&#xA;&#xA;<pre><code>{"query" : {"filtered" :&#xA;  "query" : {"match_all" : {}},&#xA;  "filter" : {"term" : {"countryId" : "Kingdom of Anvilania"}}&#xA;}}&#xA;</code></pre>&#xA;&#xA;<p>There's further documentation of the <code>string</code> type (and all other core types) in Elasticsearch <a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/mapping-core-types.html" rel="nofollow">here</a>, but the specific portion about the <code>index</code> attribute is this:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Set to analyzed for the field to be indexed and searchable after being broken down into token using an analyzer. not_analyzed means that its still searchable, but does not go through any analysis process or broken down into tokens. no means that it wonâ€™t be searchable at all (as an individual field; it may still be included in _all). Setting to no disables include_in_all. Defaults to analyzed.</p>&#xA;</blockquote>&#xA;