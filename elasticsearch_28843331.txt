28843331
Elasticsearch range filter on strings returning incorrect results
<p>In my index, I have a field called "time" that is of type "string". There's another field "date" of type "date".</p>&#xA;&#xA;<p>When I try to query the index and filter the results based on time, I am getting incorrect results. For example, my query is:&#xA;{"and": { "filters": [ { "term": { "date": "2015-02-06" } }, { "range": { "time": { "from": "22:11", "to": "23:59", "include_lower": true, "include_upper": true } } }</p>&#xA;&#xA;<p>And in the results I get fields for which the date is "2015-02-06", but the time is "16:01", "07:01" etc.</p>&#xA;&#xA;<p>What am I doing wrong ?</p>&#xA;
<p>You need to format your time field as such, for your range filter to work. I don't think <code>"range"</code> knows what to do with a <code>"string"</code> field. </p>&#xA;&#xA;<p>This worked for me: <code>"time" : { "type": "date", "format": "HH:mm" }</code>. </p>&#xA;&#xA;<p>Here's the full example I used:</p>&#xA;&#xA;<pre><code>DELETE /test_index&#xA;&#xA;PUT /test_index&#xA;{&#xA;   "settings": {&#xA;      "number_of_shards": 1&#xA;   },&#xA;   "mappings": {&#xA;      "doc": {&#xA;         "properties": {&#xA;             "time" : { "type": "date", "format": "HH:mm" },&#xA;             "date" : { "type": "date" }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;&#xA;POST /test_index/_bulk&#xA;{"index":{"_index":"test_index","_type":"doc","_id":1}}&#xA;{"date": "2015-02-06","time": "16:01"}&#xA;{"index":{"_index":"test_index","_type":"doc","_id":2}}&#xA;{"date": "2015-02-06","time": "07:01"}&#xA;{"index":{"_index":"test_index","_type":"doc","_id":3}}&#xA;{"date": "2015-02-06","time": "22:30"}&#xA;{"index":{"_index":"test_index","_type":"doc","_id":4}}&#xA;{"date": "2015-02-08","time": "15:30"}&#xA;&#xA;POST /test_index/_search&#xA;{&#xA;   "query": {&#xA;      "filtered": {&#xA;         "query": {&#xA;            "match_all": {}&#xA;         },&#xA;         "filter": {&#xA;            "and": {&#xA;               "filters": [&#xA;                  {&#xA;                     "term": {&#xA;                        "date": "2015-02-06"&#xA;                     }&#xA;                  },&#xA;                  {&#xA;                     "range": {&#xA;                        "time": {&#xA;                           "from": "22:11",&#xA;                           "to": "23:59",&#xA;                           "include_lower": true,&#xA;                           "include_upper": true&#xA;                        }&#xA;                     }&#xA;                  }&#xA;               ]&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;...&#xA;{&#xA;   "took": 5,&#xA;   "timed_out": false,&#xA;   "_shards": {&#xA;      "total": 1,&#xA;      "successful": 1,&#xA;      "failed": 0&#xA;   },&#xA;   "hits": {&#xA;      "total": 1,&#xA;      "max_score": 1,&#xA;      "hits": [&#xA;         {&#xA;            "_index": "test_index",&#xA;            "_type": "doc",&#xA;            "_id": "3",&#xA;            "_score": 1,&#xA;            "_source": {&#xA;               "date": "2015-02-06",&#xA;               "time": "22:30"&#xA;            }&#xA;         }&#xA;      ]&#xA;   }&#xA;}&#xA;</code></pre>&#xA;