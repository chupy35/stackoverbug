33623456
ElasticSearch How to AND a nested query
<p>I am trying to figure out how to AND my Elastic Search query. I've tried a few different variations but I am always hitting a parser error.</p>&#xA;&#xA;<p>What I have is a structure like this:</p>&#xA;&#xA;<pre><code>{&#xA;  "title": "my title",&#xA;  "details": [&#xA;    { "name": "one", "value": 100 },&#xA;    { "name": "two", "value": 21 }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I have defined <code>details</code> as a nested type in my mappings. What I'm trying to achieve is a query where it matches a part of the title and it matches various details by the detail's <code>name</code> and <code>value</code>.</p>&#xA;&#xA;<p>I have the following query which gets me nearly there but I haven't been able to figure out how to <code>AND</code> the details. As an example I'd like to find anything that has: </p>&#xA;&#xA;<ol>&#xA;<li>detail of <strong>one</strong> with value less than or equal to <strong>100</strong></li>&#xA;<li>AND detail of <strong>two</strong> with value less than or equal to <strong>25</strong></li>&#xA;</ol>&#xA;&#xA;<p>The following query only allows me to search by one detail name/value:</p>&#xA;&#xA;<pre><code>"query" : {&#xA;  "bool": {&#xA;    "must": [&#xA;      { "match": {"title": {"query": titleQuery, "operator": "and" } } },&#xA;      {&#xA;        "nested": {&#xA;          "path": "details",&#xA;          "query": {&#xA;            "bool": {&#xA;              "must": [&#xA;                { "match": {"details.name" : "one"} },&#xA;                { "range": {"details.value" : { "lte": 100 } } }&#xA;              ]&#xA;            }&#xA;          }&#xA;        } // nested&#xA;      }&#xA;    ] // must&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>As a second question, would it be better to query the title and then move the nested part of the query into a filter?</p>&#xA;
<p>You were so close! Just add another <code>"nested"</code> clause in your outer <code>"must"</code>:</p>&#xA;&#xA;<pre><code>POST /test_index/_search&#xA;{&#xA;   "query": {&#xA;      "bool": {&#xA;         "must": [&#xA;            {&#xA;               "match": {&#xA;                  "title": {&#xA;                     "query": "title",&#xA;                     "operator": "and"&#xA;                  }&#xA;               }&#xA;            },&#xA;            {&#xA;               "nested": {&#xA;                  "path": "details",&#xA;                  "query": {&#xA;                     "bool": {&#xA;                        "must": [&#xA;                           {"match": {"details.name": "one" } },&#xA;                           { "range": { "details.value": { "lte": 100 } } }&#xA;                        ]&#xA;                     }&#xA;                  }&#xA;               }&#xA;            },&#xA;            {&#xA;               "nested": {&#xA;                  "path": "details",&#xA;                  "query": {&#xA;                     "bool": {&#xA;                        "must": [&#xA;                           {"match": {"details.name": "two" } },&#xA;                           { "range": { "details.value": { "lte": 25 } } }&#xA;                        ]&#xA;                     }&#xA;                  }&#xA;               }&#xA;            }&#xA;         ]&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is some code I used to test it:</p>&#xA;&#xA;<p><a href="http://sense.qbox.io/gist/1fc30d49a810d22e85fa68d781114c2865a7c92e" rel="nofollow">http://sense.qbox.io/gist/1fc30d49a810d22e85fa68d781114c2865a7c92e</a></p>&#xA;&#xA;<p><strong>EDIT:</strong> Oh, the answer to your second question is "yes", though if you're using 2.0 things have <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/breaking_20_query_dsl_changes.html#breaking_20_query_dsl_changes" rel="nofollow">changed a little</a>.</p>&#xA;