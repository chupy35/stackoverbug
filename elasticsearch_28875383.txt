28875383
How can I aggregate filtered nested documents in ElasticSearch?
<p>Suppose I have an index with nested document that looks like this:</p>&#xA;&#xA;<pre><code>{&#xA;    "id" : 1234&#xA;    "cars" : [{&#xA;            "id" : 987&#xA;            "name" : "Volkswagen"&#xA;        }, {&#xA;            "id": 988&#xA;            "name" : "Tesla"&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I now want to get a count aggregation of "car" documents that match a certain criteria, e.g. that match a search query. My initial attempt was the following query:</p>&#xA;&#xA;<pre><code>{&#xA;  "query" : {&#xA;    "nested" : {&#xA;      "path" : "cars",&#xA;      "query" : {&#xA;        "query_string" : {&#xA;          "fields" : ["cars.name"],&#xA;          "query" : "Tes*"&#xA;        }&#xA;      }&#xA;    }&#xA;  },&#xA;  "aggregations" : {&#xA;    "cars" :{&#xA;      "nested" : {&#xA;        "path" : "cars"&#xA;      },&#xA;      "aggs" : {&#xA;        "cars" : {&#xA;          "terms" : {&#xA;            "field" : "cars.id"&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I was hoping here to get an aggregation result with only the ids of cars whose name begin with "Tes". However, the aggregation instead uses all cars that are in a top-level document that also contains a matching nested documents. That is, in the above example "Volkswagen" would also be counted because the top-level document also contains a car that does match. </p>&#xA;&#xA;<p>How can I get an aggregation of just the matching nested documents?</p>&#xA;
<p>In the mean time I've figured it out: to achieve this a filter aggregation should be added around the the terms aggregation like so:</p>&#xA;&#xA;<pre><code>  "aggregations" : {&#xA;    "cars" :{&#xA;      "nested" : {&#xA;        "path" : "cars"&#xA;      },&#xA;      "aggs" : {&#xA;        "cars-filter" : {&#xA;          "filter" : {&#xA;            "query" : {&#xA;              "query_string" : {&#xA;                "fields" : ["cars.name"],&#xA;                "query" : "Tes*"&#xA;              }&#xA;            }  &#xA;          },&#xA;          "aggs" : {&#xA;            "cars" : {&#xA;              "terms" : {&#xA;                "field" : "cars.id"&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;