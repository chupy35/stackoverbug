32927634
elasticsearch inner join
<p>I have an index with some fields, my documents contains valid "category" data also contains "url"(analyzed field) data but not contains respsize..&#xA;in the other hand documents that contains "respsize" data (greater than 0) also contains "url" data but not contains "category" data..&#xA;I think you got the point, I need join or intersection whatever that a query returns all documents contains respsize and category that have same same url documents.</p>&#xA;&#xA;<p>Here what I did so far;(url field analyzed, rest of them not_analyzed) </p>&#xA;&#xA;<p>here documents that have category:&#xA;<a href="https://i.stack.imgur.com/SQgqa.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/SQgqa.png" alt="enter image description here"></a></p>&#xA;&#xA;<p>and other documents have respsize that I need to combine them based on url&#xA;<a href="https://i.stack.imgur.com/vHDj5.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/vHDj5.png" alt="enter image description here"></a></p>&#xA;&#xA;<p>I need a dsl query that return records that have same url token(in this scenario it will be www.domainname.com) with merge category and respsize,&#xA;I simply want field in second img "category":"27" like in img1 but of course with rest of all fields.</p>&#xA;&#xA;<p>here is my query but not work</p>&#xA;&#xA;<pre><code>GET webproxylog/accesslog/_search&#xA;{&#xA;  "query": {&#xA;    "filtered": {&#xA;      "filter" : {&#xA;            "and" : {&#xA;                "filters": [&#xA;                    {&#xA;                        "not": {&#xA;                          "filter": {&#xA;                            "terms": {&#xA;                              "category": [&#xA;                                "-",&#xA;                                "-1",&#xA;                                "0"&#xA;                              ]&#xA;                            },&#xA;                            "term": {&#xA;                              "respsize": "0"&#xA;                            }&#xA;                          }&#xA;                        },&#xA;                        "term": {&#xA;                          "category": "www.hurriyet.com.tr"&#xA;                        }&#xA;                    }&#xA;                ],&#xA;                "_cache" : true&#xA;            }&#xA;        }&#xA;    }&#xA;  },&#xA;  "sort": [&#xA;    {&#xA;      "respsize": {&#xA;        "order": "desc"&#xA;      }&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;
<p>You can try the query below. It will require the <code>url</code> field to be the one you specify (i.e. <code>must</code>) and then either of the next two clauses (i.e. <code>should</code>) must be true, i.e. <code>category</code> should be not one of the given terms or the <code>respsize</code> must be greater than 0.</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "filtered": {&#xA;      "filter": {&#xA;        "bool": {&#xA;          "must": [&#xA;            {&#xA;              "term": {&#xA;                "url": "www.hurriyet.com.tr"&#xA;              }&#xA;            }&#xA;          ],&#xA;          "should": [&#xA;            {&#xA;              "not": {&#xA;                "terms": {&#xA;                  "category": [&#xA;                    "-",&#xA;                    "-1",&#xA;                    "0"&#xA;                  ]&#xA;                }&#xA;              }&#xA;            },&#xA;            {&#xA;              "range": {&#xA;                "respsize": {&#xA;                  "gt": 0&#xA;                }&#xA;              }&#xA;            }&#xA;          ]&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;