21868847
Sending events between components
<p>Consider the ToDo App example on the React homepage.  For posterity, here's <a href="http://jsfiddle.net/nXJL5/" rel="nofollow">a fiddle</a> and the code is at the end of this post.</p>&#xA;&#xA;<p>Now say we decide to upgrade this app with w simple features:</p>&#xA;&#xA;<ol>&#xA;<li>Each todo item will have not only text, but also a "done" attribute.  You can click on an item and it will toggle the "done" state, and perhaps add strikethrough styling when it is done.</li>&#xA;<li>At the very bottom, there will be text indicating the number of "Done", eg, "2 items done, 3 left to do"</li>&#xA;</ol>&#xA;&#xA;<p>The problem is that the state of the items is maintained in <code>TodoApp</code>, not in <code>TodoList</code>.  So we'd like to add an <code>onClick={something}</code> to the <code>&lt;li&gt;</code> element in <code>TodoList</code>'s render method.  But we want that click event to be handled by <code>TodoApp</code>, which would then change the state of the item, and cause everything to re-render.  If we wanted to approach it like this, how could we do it?</p>&#xA;&#xA;<p>We could also create a <code>TodoItem</code> component to be called by <code>TodoList</code>, and push the statefulness down into that.  This would allow the click to be handled by the <code>TodoItem</code>, but now we would need a way to share the <code>TodoItem</code>s' states with the component indicating the number of items done and still todo.</p>&#xA;&#xA;<p>In a nutshell, I'd like to know how components can send events to each other, because I think just knowing that would allow solutions to both problems.</p>&#xA;&#xA;<h2>React ToDo App</h2>&#xA;&#xA;<pre class="lang-js prettyprint-override"><code>/** @jsx React.DOM */&#xA;var TodoList = React.createClass({&#xA;  render: function() {&#xA;    var createItem = function(itemText) {&#xA;      return &lt;li&gt;{itemText}&lt;/li&gt;;&#xA;    };&#xA;    return &lt;ul&gt;{this.props.items.map(createItem)}&lt;/ul&gt;;&#xA;  }&#xA;});&#xA;var TodoApp = React.createClass({&#xA;  getInitialState: function() {&#xA;    return {items: [], text: ''};&#xA;  },&#xA;  onChange: function(e) {&#xA;    this.setState({text: e.target.value});&#xA;  },&#xA;  handleSubmit: function(e) {&#xA;    e.preventDefault();&#xA;    var nextItems = this.state.items.concat([this.state.text]);&#xA;    var nextText = '';&#xA;    this.setState({items: nextItems, text: nextText});&#xA;  },&#xA;  render: function() {&#xA;    return (&#xA;      &lt;div&gt;&#xA;        &lt;h3&gt;TODO&lt;/h3&gt;&#xA;        &lt;TodoList items={this.state.items} /&gt;&#xA;        &lt;form onSubmit={this.handleSubmit}&gt;&#xA;          &lt;input onChange={this.onChange} value={this.state.text} /&gt;&#xA;          &lt;button&gt;{'Add #' + (this.state.items.length + 1)}&lt;/button&gt;&#xA;        &lt;/form&gt;&#xA;      &lt;/div&gt;&#xA;    );&#xA;  }&#xA;});&#xA;React.renderComponent(&lt;TodoApp /&gt;, document.body);&#xA;</code></pre>&#xA;
<p>The idiomatic way to do this is to pass a callback down to TodoList:</p>&#xA;&#xA;<p><strong>Live demo:</strong> <a href="http://jsbin.com/zeqizene/1/edit" rel="nofollow noreferrer">http://jsbin.com/zeqizene/1/edit</a></p>&#xA;&#xA;<p>I've changed TodoList to look like this:</p>&#xA;&#xA;<pre><code>var TodoList = React.createClass({&#xA;  handleDoneToggle: function(i) {&#xA;    this.props.onDoneToggle(i);&#xA;  },&#xA;  render: function() {&#xA;    var createItem = function(item, i) {&#xA;      return &lt;li onClick={this.handleDoneToggle.bind(null, i)}&gt;&#xA;        {item.text}&#xA;        {item.done &amp;&amp; " (done)"}&#xA;      &lt;/li&gt;;&#xA;    };&#xA;    return &lt;ul&gt;{this.props.items.map(createItem, this)}&lt;/ul&gt;;&#xA;  }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>When an item is clicked, TodoList will call its own <code>onDoneToggle</code> function, so <code>TodoApp</code> can modify the state appropriately.</p>&#xA;&#xA;<p>See also <a href="https://stackoverflow.com/questions/20795323/editing-a-rich-data-structure-in-react-js">Editing a rich data structure in React.js</a>.</p>&#xA;