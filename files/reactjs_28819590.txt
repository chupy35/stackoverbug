28819590
react developer console not showing up
<p>I have react chrome extension installed and I know its working since it shows up on instagram.com. However, I'm going through the React tutorial (<a href="http://facebook.github.io/react/docs/tutorial.html" rel="nofollow">http://facebook.github.io/react/docs/tutorial.html</a>) and the react tab is not showing up in my console window here is all the code I have:</p>&#xA;&#xA;<pre><code>&lt;!-- index.html --&gt;&#xA;&lt;html&gt;&#xA;  &lt;head&gt;&#xA;    &lt;title&gt;Hello React&lt;/title&gt;&#xA;    &lt;script src="http://fb.me/react-0.12.2.js"&gt;&lt;/script&gt;&#xA;    &lt;script src="http://fb.me/JSXTransformer-0.12.2.js"&gt;&lt;/script&gt;&#xA;    &lt;script src="http://code.jquery.com/jquery-1.10.0.min.js"&gt;&lt;/script&gt;&#xA;  &lt;/head&gt;&#xA;  &lt;body&gt;&#xA;    &lt;div id="content"&gt;&lt;/div&gt;&#xA;    &lt;script type="text/jsx"&gt;&#xA;    var data = [&#xA;      {author: "Derp", text: "this is another comment"},&#xA;      {author: "Derp", text: "this is a comment"}&#xA;    ];&#xA;&#xA;      var CommentBox = React.createClass({&#xA;        loadCommentsFromServer: function() {&#xA;          $.ajax({&#xA;            url: this.props.url,&#xA;            dataType: 'json',&#xA;            success: function(data) {&#xA;              this.setState({data: data});&#xA;            }.bind(this),&#xA;            error: function(xhr, status, err) {&#xA;              console.error(this.props.url, status, err.toString());&#xA;            }.bind(this)&#xA;          });&#xA;        },&#xA;        handleCommentSubmit: function(comment) {&#xA;          $.ajax({&#xA;            url: this.props.url,&#xA;            dataType: 'json',&#xA;            type: 'POST',&#xA;            data: comment,&#xA;            success: function(data) {&#xA;              this.setState({data: data});&#xA;            }.bind(this),&#xA;            error: function(xhr, status, err) {&#xA;              console.error(this.props.url, status, err.toString());&#xA;            }.bind(this)&#xA;          });&#xA;        },&#xA;        getInitialState: function() {&#xA;          return {data: []};&#xA;        },&#xA;        componentDidMount: function() {&#xA;          this.loadCommentsFromServer();&#xA;          setInterval(this.loadCommentsFromServer, this.props.pollInterval);&#xA;        }&#xA;        render: function() {&#xA;          return (&#xA;            &lt;div className="commentBox"&gt;&#xA;              &lt;h1&gt;Comments&lt;/h1&gt;&#xA;              &lt;CommentList data={this.state.data}/&gt;&#xA;              &lt;CommentForm onCommentSubmit={this.handleCommentSubmit}/&gt;&#xA;            &lt;/div&gt;&#xA;          );&#xA;        }&#xA;      });&#xA;&#xA;      var CommentList = React.createClass({&#xA;        render: function() {&#xA;          var comments = this.props.data.map(function (comment){&#xA;            return (&#xA;              &lt;Comment author={comment.author}&gt;&#xA;                {comment.text}&#xA;              &lt;/Comment&gt;&#xA;            )&#xA;          })&#xA;&#xA;          return (&#xA;            &lt;div className="commentList"&gt;&#xA;              {comments}&#xA;            &lt;/div&gt;&#xA;          );&#xA;        }&#xA;      });&#xA;&#xA;      var Comment = React.createClass({&#xA;        render: function() {&#xA;          return (&#xA;            &lt;div className="comment"&gt;&#xA;              &lt;h2 className="commentAuthor"&gt;&#xA;                {this.props.author}&#xA;              &lt;/h2&gt;&#xA;              {this.props.children}&#xA;            &lt;/div&gt;&#xA;          );&#xA;        }&#xA;      })&#xA;&#xA;      var CommentForm = React.createClass({&#xA;        handleSubmit: function(e) {&#xA;          e.preventDefault();&#xA;          var author = this.refs.author.getDOMNode().value.trim();&#xA;          var text = this.refs.text.getDOMNode().value.trim();&#xA;          if(!text || !author) {&#xA;            return;&#xA;          }&#xA;          this.props.onCommentSubmit({author: author, text: text});&#xA;          this.refs.author.getDOMNode().value = '';&#xA;          this.refs.text.getDomNode().value = '';&#xA;        },&#xA;        render: function() {&#xA;          return (&#xA;            &lt;div className="commentForm"&gt;&#xA;              &lt;form className="commentForm"&gt;&#xA;                &lt;input type="text" placeholder="your name" ref="something"/&gt;&#xA;                &lt;input type="text" placeholder="say something" ref="someting" /&gt;&#xA;                &lt;input type="submit" value="Post" /&gt;&#xA;              &lt;/form&gt;&#xA;            &lt;/div&gt;&#xA;          );&#xA;        }&#xA;      });&#xA;&#xA;      React.render(&#xA;        &lt;CommentBox url="comments.json" pollInterval={2000}/&gt;,&#xA;        document.getElementById('content')&#xA;      );&#xA;    &lt;/script&gt;&#xA;  &lt;/body&gt;&#xA;&lt;/html&gt;&#xA;</code></pre>&#xA;&#xA;<p>my console says the following:</p>&#xA;&#xA;<pre><code>Download the React DevTools for a better development experience: http://fb.me/react-devtools&#xA;&#xA;You are using the in-browser JSX transformer. Be sure to precompile your JSX for production - http://facebook.github.io/react/docs/tooling-integration.html#jsx&#xA;&#xA;Uncaught Error: Parse Error: Line 41: Unexpected identifier&#xA;</code></pre>&#xA;&#xA;<p>I have a bug in there somewhere, but I'm trying to get the React tab to show up for the time being and not too sure how to do it.</p>&#xA;
<p>I had the same issue: I installed <code>React Developer Tools</code> plugin, but the <code>React</code> tab didn't appear.&#xA;The solution was simple: I just closed the Chrome tab and opened it again - and it was there.</p>&#xA;&#xA;<p>You can read about other possible reasons on their official GitHub page <a href="https://github.com/facebook/react-devtools#user-content-the-react-tab-doesnt-show-up" rel="nofollow">https://github.com/facebook/react-devtools#user-content-the-react-tab-doesnt-show-up</a> </p>&#xA;
<p>This was happening to me because I didn not have global React object, or a global require that is able to require('react') from global scope.<br>&#xA;I was able to make the extension work by requiring react in my gulpfile. I'm sure it would work the same in a webpack file: </p>&#xA;&#xA;<pre><code>var React = require('react');&#xA;</code></pre>&#xA;