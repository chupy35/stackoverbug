26863938
Modify attributes of children in ReactJS component
<p>I am trying to figure out how to modify the children of a component to for example, add a class.  I have tried to do:</p>&#xA;&#xA;<pre><code>var inputReactObject = React.Children.only(this.props.children);&#xA;&#xA;inputReactObject.className = "test";&#xA;</code></pre>&#xA;&#xA;<p>However that does not seem to work.</p>&#xA;&#xA;<p>Is it possible to modify children attributes in a ReactJS component?</p>&#xA;&#xA;<p>Full plunker: <a href="http://plnkr.co/edit/msbUSDBQn17qXzBHzGXD?p=preview">http://plnkr.co/edit/msbUSDBQn17qXzBHzGXD?p=preview</a></p>&#xA;
<p>As mentioned by @lpiepiora plunker, the code to do what I want would be:</p>&#xA;&#xA;<pre><code>var inputReactObject = React.Children.only(this.props.children);&#xA;var clonnedChild = React.addons.cloneWithProps(inputReactObject, {&#xA;  className: "input-element test"&#xA;});&#xA;&#xA;return clonnedChild;&#xA;</code></pre>&#xA;
<p>Now that <code>cloneWithProps</code> is <a href="https://facebook.github.io/react/blog/2015/03/03/react-v0.13-rc2.html#react.cloneelement" rel="nofollow">deprecated</a>, the current approach would be</p>&#xA;&#xA;<pre><code>var inputReactObject = React.Children.only(this.props.children);&#xA;var clonedChild = React.cloneElement(inputReactObject, {&#xA;  className: "input-element test"&#xA;});&#xA;&#xA;return clonedChild;&#xA;</code></pre>&#xA;