21591512
Pass props from template into react.js root node
<p>I may have missed something, but here goes. If I have:</p>&#xA;&#xA;<pre class="lang-js prettyprint-override"><code>var Swoosh = React.createClass({&#xA;  render: function() {&#xA;    return (&#xA;      &lt;div className="swoosh"&gt;&#xA;        Boom.&#xA;      &lt;/div&gt;&#xA;    );&#xA;  }&#xA;});&#xA;&#xA;React.renderComponent(&#xA;  &lt;Swoosh /&gt;,&#xA;  document.getElementById('content')&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>Can I set <code>props</code> as attributes on the mount point (where <code>id='content'</code>)?</p>&#xA;&#xA;<pre class="lang-html prettyprint-override"><code>&lt;div id='content' foo='alice' bar='has' bav='a cat' /&gt;&#xA;&lt;!-- have foo, bar &amp; bav available as props in &lt;Swoosh /&gt;? --&gt;&#xA;</code></pre>&#xA;
<p>No, though of course you can do:</p>&#xA;&#xA;<pre><code>var container = document.getElementById('content');&#xA;React.renderComponent(&#xA;  &lt;Swoosh&#xA;    foo={container.getAttribute('foo')}&#xA;    bar={container.getAttribute('bar')}&#xA;    bav={container.getAttribute('bav')} /&gt;,&#xA;  container&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>(or if you want to make an attributes dict using something like <a href="https://stackoverflow.com/a/5282801/49485">https://stackoverflow.com/a/5282801/49485</a>, then you can do <code>Swoosh(attributes)</code>).</p>&#xA;
<p>There's nothing in the API to transfer properties from a plain DOM element to a React component, but you could create a Mixin to do it. Note that this will only work on a component passed to <code>renderComponent</code> because it uses <code>setProps</code>:</p>&#xA;&#xA;<p>(<a href="http://jsfiddle.net/ssorallen/YgPPV/">Working JSFiddle</a>)</p>&#xA;&#xA;<pre><code>var InheritsDomAttributes = {&#xA;  componentDidMount: function(rootNode) {&#xA;    var hasNextProps = false;&#xA;    var nextProps = {};&#xA;    var parentNode = rootNode.parentNode;&#xA;&#xA;    Object.keys(parentNode.attributes).forEach(function(key) {&#xA;      var namedNode;&#xA;&#xA;      // NamedNodeMaps have an attribute named "length" that&#xA;      // should not be considered a set attribute.&#xA;      if (key !== "length") {&#xA;        hasNextProps = true;&#xA;        namedNode = parentNode.attributes[key];&#xA;        nextProps[namedNode.name] = namedNode.value;&#xA;      }&#xA;    });&#xA;&#xA;    if (hasNextProps) this.setProps(nextProps);&#xA;  }&#xA;};&#xA;&#xA;var Swoosh = React.createClass({&#xA;  mixins: [InheritsDomAttributes],&#xA;  render: function() {&#xA;    return (&#xA;      &lt;div className="swoosh"&gt;&#xA;        Boom.&#xA;      &lt;/div&gt;&#xA;    );&#xA;  }&#xA;});&#xA;&#xA;React.renderComponent(&#xA;  &lt;Swoosh /&gt;,&#xA;  document.getElementById('content')&#xA;);&#xA;</code></pre>&#xA;