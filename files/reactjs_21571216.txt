21571216
is sending state of current component as a parameter to another external method possible in react
<pre class="lang-js prettyprint-override"><code>/** @jsx React.DOM */&#xA;&#xA;// create a login component&#xA;var Login = React.createClass({&#xA;  displayName: 'loginComp',&#xA;  getInitialState: function () {&#xA;    return {&#xA;      id_uname: 'u',&#xA;      id_pwd: 'p'&#xA;    };&#xA;  },&#xA;  onChange: function(e){&#xA;    if(e.target.name=="username")&#xA;      this.setState({id_uname: e.target.value});&#xA;    else&#xA;      this.setState({id_pwd: e.target.value});&#xA;  },&#xA;  handleSubmit: function (e) {&#xA;    console.log(this.state.id_uname);&#xA;    console.log(this.state.id_pwd);&#xA;  },&#xA;  render: function () {&#xA;    var objState = this.state;&#xA;    var asd = "asd";&#xA;&#xA;    return (&#xA;      &lt;fieldset&gt;&#xA;        &lt;input ref='username' type="text" name="username" onChange={this.onChange}/&gt;&#xA;        &lt;input ref='password' type="password"  name="password" onChange={this.onChange}/&gt;&#xA;        &lt;button ref='password' type="submit" onClick={this.props.handleSubmit(this.state) ||  this.handleSubmit}&gt;Submit&lt;/button&gt;&#xA;      &lt;/fieldset&gt;&#xA;    );&#xA;  }&#xA;});&#xA;&#xA;var sub = function(state){&#xA;  console.log('-- OUTSIDE--');&#xA;  console.log('-- --',state);&#xA;};&#xA;&#xA;React.renderComponent(&#xA;  &lt;Login handleSubmit={sub}/&gt;,&#xA;  document.body&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>When i click the button, it should go to sub method .. instead sub method responds to every state change and in the end when i press button it goes to default handleSubmit method .. Help !!</p>&#xA;
<p>When you write</p>&#xA;&#xA;<pre><code>onClick={this.props.handleSubmit(this.state) ||  this.handleSubmit}&#xA;</code></pre>&#xA;&#xA;<p>you're calling the <code>this.props.handleSubmit</code> handler immediately and setting its <em>result</em> as the onClick handler. I'm guessing you want to instead do a partial application, which you can do using <code>.bind</code>:</p>&#xA;&#xA;<pre><code>onClick={this.props.handleSubmit.bind(null, this.state)}&#xA;</code></pre>&#xA;&#xA;<p>(Also, it's probably best to explicitly pass specific state keys to the handler, or else you may end up accidentally passing internal state on as you make future changes.)</p>&#xA;