21337032
ReactJS: Events in .map(array) not fired
<p>In my <code>render</code> function I want to display a list based on an array, while displaying it works fine, it seems that whatever event I bind to it is being ignored.</p>&#xA;&#xA;<pre class="lang-js prettyprint-override"><code>render: function() {&#xA;  var language = function(language) {&#xA;    return (&#xA;      &lt;li&gt;&lt;label&gt;&#xA;        &lt;input type="checkbox" value={language} onChange={this.onLanguageChange} /&gt; &#xA;        {language} ({_languages_total[language]})&#xA;      &lt;/label&gt;&lt;/li&gt;&#xA;    )&#xA;  }&#xA;&#xA;  return (&#xA;    &lt;ul className="filter__list"&gt;&#xA;      &lt;li&gt;&lt;label&gt;&#xA;        &lt;input type="checkbox" value="0" onChange={this.onLanguageChange} /&gt;&#xA;        0 (2)&#xA;      &lt;/label&gt;&lt;/li&gt;&#xA;      {this.state.languages.map(language)}&#xA;    &lt;/ul&gt;&#xA;  )&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I rendered one list item directly outside the <code>.map</code> to see if it would give any results, and this seems to be the only one that's working.</p>&#xA;&#xA;<p>Am I just missing something obvious, or are events ignored when placed outside the <code>return()</code>?</p>&#xA;
<p>Your problem is that the <code>this.onLanguageChange</code> doesn't refer to the right handler because <code>this</code> within the <code>language</code> function is unbound and so when it's executed points to the global object (i.e., <code>window</code>). You can do a few things to fix it:</p>&#xA;&#xA;<ol>&#xA;<li>Add <code>var self = this;</code> before defining <code>language</code> and refer to <code>self.onLanguageChange</code>.</li>&#xA;<li>Add <code>.bind(this)</code> after the function that you're assigning to <code>render</code>.</li>&#xA;<li>Call <code>.map(language, this)</code> to tell <code>map</code> what context to use when calling <code>language</code>. This is the simplest and cleanest solution.</li>&#xA;</ol>&#xA;&#xA;<p>If you're not familiar with JavaScript's scoping rules and how <code>this</code> works, I suggest reading up on it.</p>&#xA;
<p>There is a really useful example in the reactjs docs&#xA;<a href="http://facebook.github.io/react/tips/communicate-between-components.html" rel="nofollow">http://facebook.github.io/react/tips/communicate-between-components.html</a></p>&#xA;&#xA;<p>They basically do something like this..</p>&#xA;&#xA;<pre><code>return (&#xA;  {this.state.languages.map(function(langauge, i){&#xA;   return (&#xA;     &lt;li&gt;&lt;label&gt;&#xA;        &lt;input type="checkbox" value={language} onChange={this.onLanguageChange.bind(this, i)} /&gt; &#xA;        {language} ({_languages_total[language]})&#xA;      &lt;/label&gt;&lt;/li&gt;&#xA;   )&#xA;  }, this)&#xA; }&#xA;)&#xA;</code></pre>&#xA;