28410192
HTML select onChange doesn't fire when value changes
<p>When <code>this.state.selected</code> changes, the select box changes its value correctly, but its <code>onChange</code> method is not called. This is probably because I need two-way-bindings for that, so I've tried the <code>valueLink</code> pattern from <a href="http://facebook.github.io/react/docs/two-way-binding-helpers.html" rel="nofollow">the docs</a>, but it still doesn't get fired:</p>&#xA;&#xA;<pre><code>render: function() {&#xA;  return (&#xA;    React.createElement("select", { valueLink: { value: this.state.selected, requestChange: this.changeHandler } },&#xA;       React.createElement("option", { value: 1 }, "1"),&#xA;       React.createElement("option", { value: 2 }, "2")&#xA;    )&#xA;  )&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>See the whole fiddle: <a href="http://jsbin.com/tisahiliqi/1/edit?html,output" rel="nofollow">http://jsbin.com/tisahiliqi/1/edit?html,output</a></p>&#xA;&#xA;<p>How can I get <code>requestChange</code> executed <strong>without</strong> firing an event manually (which is, in my opinion, what two-way-bindings should do for me)?</p>&#xA;&#xA;<p>Did I misunderstand something?</p>&#xA;
<p>Your code is a little mixed up with React's <code>LinkedStateMixin</code>. If you want to fire your own event handler you can use this:&#xA;<a href="http://jsbin.com/fuwowifoqe/1/" rel="nofollow">http://jsbin.com/fuwowifoqe/1/</a></p>&#xA;&#xA;<pre><code>var MySelect = React.createClass({&#xA;  getInitialState: function() {&#xA;    return { selected: 1 }&#xA;  },&#xA;&#xA;   componentDidMount: function() {&#xA;    // Imagine some AJAX that takes 1s&#xA;    window.setTimeout(function() {&#xA;      this.setState({ selected: 2 });&#xA;    }.bind(this), 1000);&#xA;  },&#xA;&#xA;  changeHandler: function(e) {&#xA;    // ... Doesn't fire...&#xA;    alert("Something changed!");&#xA;    this.setState({selected : e.target.value })&#xA;  },&#xA;&#xA;  render: function() {&#xA;    return (&#xA;      React.createElement("select", { value: this.state.selected, onChange: this.changeHandler },&#xA;         React.createElement("option", { value: 1 }, "1"),&#xA;         React.createElement("option", { value: 2 }, "2")&#xA;      )&#xA;    )&#xA;  }&#xA;});&#xA;&#xA;React.render(React.createElement(MySelect, null, "Hi"), document.getElementById("app"));&#xA;</code></pre>&#xA;&#xA;<p></p>&#xA;&#xA;<p>Note that the handler is not fired when you change value with <code>setState</code>, but when value is changed via user interaction.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p><strong>UPDATE</strong></p>&#xA;&#xA;<p>Then you can observe changes to <code>this.state</code> or <code>this.state.selected</code> using one of the life cycle methods such as <code>componentWillUpdate</code> or <code>componentDidUpdate</code>:</p>&#xA;&#xA;<p>jsbin: <a href="http://jsbin.com/lipovucapi/1/" rel="nofollow">http://jsbin.com/lipovucapi/1/</a></p>&#xA;&#xA;<pre><code>componentDidUpdate: function(prevProps, prevState){  &#xA;    if(this.state.selected != prevState.selected)&#xA;        alert("selected changed!");&#xA;},&#xA;</code></pre>&#xA;