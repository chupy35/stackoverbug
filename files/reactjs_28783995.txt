28783995
ReactJS Passing Value to Google Map Component
<p>I have the following <code>GoogleMaps</code> React component:</p>&#xA;&#xA;<pre><code>var GoogleMaps = React.createClass({&#xA;    getDefaultProps: function () {&#xA;        return {&#xA;            initialZoom: 6,&#xA;            mapCenterLat: 53.5333,&#xA;            mapCenterLng: -113.4073126&#xA;        };&#xA;    },&#xA;    componentDidMount: function (rootNode) {&#xA;        var mapOptions = {&#xA;            center: this.mapCenterLatLng(),&#xA;            zoom: this.props.initialZoom&#xA;        },&#xA;        map = new google.maps.Map(this.getDOMNode(), mapOptions);&#xA;        var marker = new google.maps.Marker({position: this.mapCenterLatLng(), title: 'Hi', map: map});&#xA;        this.setState({map: map});&#xA;    },&#xA;    mapCenterLatLng: function () {&#xA;        var props = this.props;&#xA;&#xA;        return new google.maps.LatLng(props.mapCenterLat, props.mapCenterLng);&#xA;    },&#xA;    render: function () {&#xA;&#xA;        return (&#xA;            &lt;div className='map-gic'&gt;&lt;/div&gt;&#xA;        );&#xA;    }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>And then use it via the following declaration:</p>&#xA;&#xA;<pre><code>var myPage = React.createClass({&#xA;  render: function() {&#xA;    return (&#xA;      &lt;div&gt;&#xA;        &lt;GoogleMaps mlat="55.0000" mlong="-113.0000" /&gt;&#xA;      &lt;/div&gt;&#xA;    )&#xA;  }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>How do I access the passed values (<code>mlat</code> and <code>mlong</code>) so that the location would be marked on the rendered map? At the moment, the values in the <code>getDefaultProps</code> function are the ones being marked on the map.</p>&#xA;&#xA;<p><strong>Rephrase the question:</strong> &#xA;How do I replace the value of the variables <code>mapCenterLat</code> and <code>mapCenterLng</code> in the <code>getDefaultProps</code> function with the values I pass through the component rendering?</p>&#xA;&#xA;<p>When I check the value passed in the <code>render</code> function of the <code>GoogleMaps</code> component by adding some <code>console.log</code>s like this:</p>&#xA;&#xA;<pre><code>render: function () {&#xA;  console.log(this.props.mlat);&#xA;  console.log(this.props.mlong);&#xA;  return (&#xA;    &lt;div className='map-gic'&gt;&lt;/div&gt;&#xA;  )&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is what registers in the browser console:</p>&#xA;&#xA;<pre><code>undefined&#xA;undefined&#xA;undefined&#xA;undefined&#xA;55.0000&#xA;113.000&#xA;</code></pre>&#xA;&#xA;<p>The source code for this application is in <a href="https://github.com/AngeloAnolin/ReactEdmontonCatholicSchools" rel="nofollow noreferrer">this GitHub repo</a>.</p>&#xA;
<p><a href="http://jsfiddle.net/wiredprairie/kmktjgmb/" rel="nofollow">Here</a> is a basic working example. </p>&#xA;&#xA;<p>I'm not sure what you're code is doing wrong as it does not entirely match what it would need to be to work or demonstrate the problem.</p>&#xA;&#xA;<p>I've not attempted to clean up the code further. It doesn't work if the <code>props</code> change (as <code>componentDidMount</code> only executes once), and doesn't properly remove the <code>Map</code> when React executes an <code>unmount</code> on the control.</p>&#xA;&#xA;<pre><code>var GoogleMap = React.createClass({  &#xA;    getDefaultProps: function () {&#xA;        return {&#xA;            initialZoom: 8,&#xA;            mapCenterLat: 41.8,    /* Chicago by default */&#xA;            mapCenterLng: -87.6,&#xA;        };&#xA;    },&#xA;    componentDidMount: function (rootNode) {&#xA;        var mapOptions = {&#xA;            center: this.mapCenterLatLng(),&#xA;            zoom: this.props.initialZoom&#xA;        };&#xA;        var map = new google.maps.Map(this.getDOMNode(), mapOptions);&#xA;        var marker = new google.maps.Marker({position: this.mapCenterLatLng(), map: map});&#xA;        this.setState({map: map});&#xA;    },&#xA;    mapCenterLatLng: function () {&#xA;        var props = this.props;&#xA;        return new google.maps.LatLng(&#xA;               props.mapCenterLat, props.mapCenterLng);&#xA;    },&#xA;    render: function () {&#xA;        return (&#xA;            &lt;div className="gmap"&gt;&lt;/div&gt;&#xA;        );&#xA;    }&#xA;});&#xA;// Bay area override&#xA;React.renderComponent(&#xA;    &lt;GoogleMap mapCenterLat='37' mapCenterLng='-122' /&gt;, &#xA;    document.body);&#xA;</code></pre>&#xA;