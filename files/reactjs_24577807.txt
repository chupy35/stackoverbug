24577807
Set document title on client and server side
<p>I want to know how you set the title of each page with ReactJS. And more, I use react-router-component and i want use same tech to set title to each page at server side by using React.renderComponentToString.</p>&#xA;&#xA;<p>My current root Component :</p>&#xA;&#xA;<pre class="lang-jsx prettyprint-override"><code>module.exports = App = React.createClass&#xA;  getInitialState: -&gt;&#xA;    return title: 'My title'&#xA;&#xA;  render: -&gt;&#xA;    &lt;html lang="fr"&gt;&#xA;      &lt;head&gt;&#xA;        &lt;link rel="stylesheet" href="/assets/css/main.css" /&gt;&#xA;        &lt;script src="/assets/js/bundle.js"&gt;&lt;/script&gt;&#xA;        &lt;title&gt;{@state.title}&lt;/title&gt;&#xA;      &lt;/head&gt;&#xA;      &lt;body&gt;&#xA;        &lt;div id="body-content"&gt;&#xA;          &lt;div id="main-container"&gt;&#xA;            &lt;Content path={@props.path} /&gt;&#xA;          &lt;/div&gt;&#xA;        &lt;/div&gt;&#xA;      &lt;/body&gt;&#xA;    &lt;/html&gt;&#xA;</code></pre>&#xA;&#xA;<p>And my Content component :</p>&#xA;&#xA;<pre class="lang-jsx prettyprint-override"><code>Content = React.createClass&#xA;  render: -&gt;&#xA;    &lt;Locations id="main" className="App" path={@props.path}&gt;&#xA;      &lt;Location path="/" handler={MainPage} /&gt;&#xA;      &lt;Location path="/users/:username" handler={UserPage} /&gt;&#xA;    &lt;/Locations&gt;&#xA;</code></pre>&#xA;
<p>to pass the title to your <code>App</code> component server side, you have to pass it the same way as you're passing the <code>path</code>, i.e. as <code>props</code> and not <code>state</code>.</p>&#xA;&#xA;<p>So first you'll need to change:</p>&#xA;&#xA;<pre><code>&lt;title&gt;{@state.title}&lt;/title&gt;&#xA;</code></pre>&#xA;&#xA;<p>To:</p>&#xA;&#xA;<pre><code>&lt;title&gt;{@props.title}&lt;/title&gt;&#xA;</code></pre>&#xA;&#xA;<p>Then in your backend pass the wanted title to the <code>App</code> component when instantiating it, like so:</p>&#xA;&#xA;<pre><code>var url = require('url');&#xA;var ReactAsync = require('react-async');&#xA;&#xA;var App = require('./path/to/your/root-component.jsx');&#xA;&#xA;// app = your express app:&#xA;app.get('*', function (req, res) {&#xA;  var path = url.parse(req.url).pathname;&#xA;  var title = getTitleFromPath(path); // Made up function to get title from a path..&#xA;  ReactAsync.renderComponentToStringWithAsyncState(&#xA;    App({path: path, title: title}),&#xA;    function (err, markup) {&#xA;      if (err) return res.send(500, err);&#xA;      res.send('&lt;!DOCTYPE html&gt;\n' + markup);&#xA;    }&#xA;  );&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>Hope that helps!</p>&#xA;&#xA;<p>As for setting the title client side I think your solution with setting the <code>document.title</code> probably is the best option.</p>&#xA;&#xA;<p><strong>Update</strong></p>&#xA;&#xA;<p>I've now tested the above and the title is set correctly, however React gets a different checksum for the server generated component and the client generated one, which is no good:</p>&#xA;&#xA;<pre><code>Uncaught Error: Invariant Violation: You're trying to render a component to the document using server rendering but the checksum was invalid&#xA;</code></pre>&#xA;&#xA;<p>So actually <strong>you shouldn't use this solution!</strong></p>&#xA;&#xA;<p>Will have to play around a little more...</p>&#xA;
<h3>Top-level React component</h3>&#xA;&#xA;<pre class="lang-js prettyprint-override"><code>var React = require('react');&#xA;var AppStore = require('../stores/AppStore');&#xA;&#xA;var Application = React.createClass({&#xA;&#xA;  propTypes: {&#xA;    path: React.PropTypes.string.isRequired,&#xA;    onSetTitle: React.PropTypes.func.isRequired&#xA;  },&#xA;&#xA;  render() {&#xA;    var page = AppStore.getPage(this.props.path);&#xA;    this.props.onSetTitle(page.title);&#xA;    return (&#xA;      &lt;div className="container"&gt;&#xA;        &lt;h1&gt;{page.title}&lt;/h1&gt;&#xA;        &lt;div return &lt;div dangerouslySetInnerHTML={{__html: page.body}}&gt;;&#xA;      &lt;/div&gt;&#xA;    );&#xA;  }&#xA;});&#xA;&#xA;module.exports = Application;&#xA;</code></pre>&#xA;&#xA;<h3>Client-side startup script (entry point)</h3>&#xA;&#xA;<pre class="lang-js prettyprint-override"><code>var React = require('react');&#xA;var Dispatcher = require('./core/Dispatcher');&#xA;var Application = require('./components/Application');&#xA;&#xA;Dispatcher.register((payload) =&gt; {&#xA;  var action = payload.action;&#xA;  if (action.actionType === ActionTypes.CHANGE_LOCATION) {&#xA;    app.setProps({path: action.path});&#xA;  }&#xA;});&#xA;&#xA;var app = React.createElement(Application, {&#xA;  path: window.location.pathname,&#xA;  onSetTitle: (title) =&gt; document.title = title&#xA;}));&#xA;app = React.render(app, document.body);&#xA;</code></pre>&#xA;&#xA;<p><strong>More info</strong>: <a href="https://gist.github.com/koistya/24715d295fbf710d1e24" rel="nofollow">https://gist.github.com/koistya/24715d295fbf710d1e24</a> <br>&#xA;<strong>Demo Project</strong>: <a href="https://github.com/kriasoft/react-starter-kit" rel="nofollow">https://github.com/kriasoft/react-starter-kit</a></p>&#xA;