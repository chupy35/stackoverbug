28958886
Invoke child component function
<pre class="lang-jsx prettyprint-override"><code>var popup = React.render(&#xA;              &lt;PopUp&gt;&#xA;                &lt;Countdown /&gt;&#xA;              &lt;/PopUp&gt;,&#xA;              document.getElementById('popup')&#xA;            );&#xA;</code></pre>&#xA;&#xA;<p>The Countdown component is rendered in the Popup component as {this.props.children}</p>&#xA;&#xA;<p>How can I call the Countdown component's <code>Stop</code> method?</p>&#xA;
<p>I think that what you should do it is to have another top-level component that handle all the state of your app and in your case have a callback function 'stop-countdown' that it is passed to your component Countdown like that:</p>&#xA;&#xA;<pre class="lang-jsx prettyprint-override"><code>var popup = React.render(&#xA;              &lt;PopUp&gt;&#xA;                &lt;Countdown handleStop={this.handleStop} /&gt;       &#xA;              &lt;/PopUp&gt;,&#xA;              document.getElementById('popup')&#xA;            );&#xA;</code></pre>&#xA;&#xA;<p>So now inside your Countdown component you call the <strong>handleStop</strong> function when it is time.</p>&#xA;
<p>You can pass in a prop <code>stopped</code>, which will allow the countdown to continue when false.</p>&#xA;&#xA;<pre><code>var stopped = true; // set value of stopped however you want&#xA;var popup = React.render(&#xA;  &lt;PopUp&gt;&#xA;    &lt;Countdown stopped={stopped} /&gt;       &#xA;  &lt;/PopUp&gt;,&#xA;  document.getElementById('popup')&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>within <code>Countdown</code>, you can check the value of stopped within the <code>componentWillReceiveProps</code> method:</p>&#xA;&#xA;<pre><code>var Countdown = React.createClass({&#xA;    componentWillRecieveProps: function(nextProps){&#xA;      if (this.props.stopped == nextProps.stopped){&#xA;        return; // do nothing if the value has not changed&#xA;      }&#xA;      if (nextProps.stopped){&#xA;        //call stop timer here&#xA;      }&#xA;      else {&#xA;        //start the timer here&#xA;      }&#xA;    },&#xA;    //getInitialState, render, and other methods&#xA;});&#xA;</code></pre>&#xA;