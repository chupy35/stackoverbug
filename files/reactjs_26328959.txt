26328959
React error message missing
<p>I have a very simple React case where I have an error in the render function and nothing gets logged when the state gets updated to contain a bad value. </p>&#xA;&#xA;<p>The error is that after the state is updated to contain a 'stuff' value that is not an array, which means that calling join(", ") on the 'stuff' value should fail, but nothing happens. React only keeps the data previously set in the getInitialState-function. </p>&#xA;&#xA;<p>Am I doing something wrong here to loose errors messages or is this just how React works?</p>&#xA;&#xA;<pre><code>var someComp = React.createClass({&#xA;&#xA;    getInitialState: function () {&#xA;        return {persons: [&#xA;            {name: "Jane", stuff: ["a", "b"]},&#xA;            {name: "Jim", stuff: ["c", "d"]}&#xA;        ]}&#xA;    },&#xA;&#xA;    componentDidMount: function () {&#xA;        superagent.get('/api/tags')&#xA;            .end(function (res) {&#xA;&#xA;                // The res.body contains a stuff-value that is not an array.&#xA;                this.setState({persons: res.body});&#xA;            }.bind(this));&#xA;    },&#xA;&#xA;    render: function () {&#xA;        return R.table({}, [&#xA;            R.thead({},&#xA;                R.tr({}, [&#xA;                    R.th({}, "Name"),&#xA;                    R.th({}, "List of stuff")&#xA;                ])),&#xA;            R.tbody({},&#xA;                this.state.persons.map(function (person) {&#xA;                    return R.tr({}, [&#xA;                        R.td({}, person.name),&#xA;                        // If person.stuff is not an array, then no error is logged..!&#xA;                        R.td({}, person.stuff.join(", "))]);&#xA;                }))&#xA;        ])&#xA;    }&#xA;});&#xA;</code></pre>&#xA;
<p>In my experience with React, it logs much more useful error messages if you build things step-by-step. Do that <code>R.td({}, person.stuff.join(", "))]</code> before the return statement, then use that result later on. If <code>person.stuff</code> isn't an array you'll get a better error message then.</p>&#xA;&#xA;<p>More to the point, why do you want React to throw an error? If it's for development purposes, there are easier ways to check than waiting for error messages from React. Otherwise, shouldn't you be including a check to see if <code>person.stuff</code> is an array <em>before</em> attempting to use it as one?</p>&#xA;