26580673
How can I compare this.props.children with nextprops.children
<p>In componentWillReceiveProps I need to compare this.props.children with the children in nextprops. I can iterate over either structure with React.Children.forEach but I haven't found any sanctioned mechanism to index either "opaque" structure.</p>&#xA;
<p>ComponentWillReceiveProps isn't called after the first render: <a href="http://facebook.github.io/react/tips/componentWillReceiveProps-not-triggered-after-mounting.html" rel="nofollow">http://facebook.github.io/react/tips/componentWillReceiveProps-not-triggered-after-mounting.html</a> You need to do what the other comment says, use shouldComponentUpdate.</p>&#xA;
<p>The documentation provides utilities for dealing with the this.props.children opaque data structure:</p>&#xA;&#xA;<p><a href="http://facebook.github.io/react/docs/top-level-api.html#react.children" rel="nofollow">http://facebook.github.io/react/docs/top-level-api.html#react.children</a></p>&#xA;&#xA;<p>You can index this.props.children either with <code>React.Children.map</code> or <code>React.Children.forEach</code>:</p>&#xA;&#xA;<blockquote>&#xA;<pre><code>object React.Children.map(object children, function fn [, object context])&#xA;</code></pre>&#xA;  &#xA;  <p>Invoke fn on every immediate child contained within children with this&#xA;  set to context. If children is a nested object or array it will be&#xA;  traversed: fn will never be passed the container objects. If children&#xA;  is null or undefined returns null or undefined rather than an empty&#xA;  object.</p>&#xA;&#xA;<pre><code>React.Children.forEach(object children, function fn [, object context])&#xA;</code></pre>&#xA;  &#xA;  <p>Like React.Children.map() but does not return an object.</p>&#xA;</blockquote>&#xA;