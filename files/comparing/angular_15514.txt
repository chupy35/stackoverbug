b'fix(ngAnimate): correctly animate transcluded clones with `templateUrl`'
b"**What kind of change does this PR introduce? (Bug fix, feature, docs update, ...)**\r\nBug fix.\r\n\r\n\r\n**What is the current behavior? (You can also link to an open issue here)**\r\n`$animate` decides whether an animation should be cancelled based on some assumption that don't hold in specific cases (e.g. when animating transcluded clones with `templateUrl` directives on them for the first time). As a result, the entering elements will not be animated in such cases. This affects commonly used, structural built-in directives (`ngIf`, `ngRepeat`, `ngSwitch` etc).\r\nSee also #15510.\r\n\r\n\r\n**What is the new behavior (if this is a feature change)?**\r\nAll entering animations work as expected (from the first time).\r\n\r\n\r\n**Does this PR introduce a breaking change?**\r\nNo.\r\n\r\n\r\n**Please check if the PR fulfills these requirements**\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] ~~Docs have been added / updated (for bug fixes / features)~~\r\n\r\n**Other information**:\r\nBTW, I believe this is a side effect of lazily compiling transcluded content.\r\n\r\nIn addition to the last `fix` commit that fixes the bug, this PR also includes several `refactor` commits that simplify `$animate` internally, mainly by removing unnecessary wrapping/unwrapping of DOM nodes in `jqLite`/`jQuery` collections. This changes may also positively affect performance, especially in animation-heavy apps (~~although I haven't benchmarked it - yet~~ it does indeed :wink:).\r\n(It is probably easier to review one commit at a time.)\r\n\r\nParty addresses #14074 and #14124.\r\n\r\nFixes #15510.\r\n"