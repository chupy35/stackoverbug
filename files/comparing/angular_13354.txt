b'fix(ngRequired): set valid to false if select value is required (value is not in options)'
b"This pull request solve Issue 13172\nhttps://github.com/angular/angular.js/issues/13172\n\ni validate that the view value should be one of the select option\nso i overrideng ModelCtrl.$validators.required function in ngOptionsDirective\n\n```\nngModelCtrl.$validators.required = function(modelValue, viewValue) {\n\n      if (!attr.required) {\n        return true;\n      } else if (ngModelCtrl.$isEmpty(viewValue)) {\n        return false;\n      }\n\n      var isValidOption = true;\n      var viewOptions = [];\n      // Get all option and add them to viewOptions array\n      angular.forEach(options.items, function(item) {\n        viewOptions.push(options.getViewValueFromOption(item));\n      });\n\n      // In case of multiple view model is an array so validate all view values\n      // if one of them doesn't match set isValidOption to false\n      if (multiple) {\n        for (var i = 0, length = viewValue.length; i < length; i++) {\n          if (viewOptions.indexOf(viewValue[i]) === -1) {\n            isValidOption = false;\n             break;\n          }\n        }\n      } else {\n        if (viewOptions.indexOf(viewValue) === -1) {\n          isValidOption = false;\n        }\n      }\n\n      return isValidOption;\n    };\n```\n\nwe have the following cases\n\n 1 - case  attr.required is false i return true\n\n 2 - case $isEmpty(viewValue) return false\n\n 3 - case is required and not empty now we need to validate that value is one of the options\n and in this case we have two subcases\n\n  a - select in multiple and value is an array\n  we check that all the values of the array must be in of the select options to return true\n\n  b - select is a single value so this value must be one of the select options to return true\n\ni think this will solve the problem,\n"