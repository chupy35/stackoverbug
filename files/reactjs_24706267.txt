24706267
Cannot read property 'map' of undefined
<p>I'm following the reactjs tutorial, and I keep running into an issue when passing the value from the state of one component into another component. The error 'Cannot read property 'map' of undefined' is thrown when the map function in the CommentList component is executed. What would cause the prop to become undefined when passing from the CommentBox into the CommentList? </p>&#xA;&#xA;<pre><code>  var CommentList = React.createClass({&#xA;    render: function() {&#xA;      var commentNodes = this.props.data.map(function (comment){&#xA;        return (&#xA;          &lt;div&gt;&#xA;            &lt;h1&gt;{comment.author} &lt;/h1&gt;&#xA;          &lt;/div&gt;&#xA;        );&#xA;      });&#xA;      return (&#xA;        &lt;div className="commentList"&gt;&#xA;          {commentNodes}&#xA;        &lt;/div&gt;&#xA;      );&#xA;    }&#xA;  });&#xA;&#xA;  var CommentBox = React.createClass({&#xA;    getInitialState: function(){&#xA;      return {data: []};&#xA;    },&#xA;    getComments: function(){&#xA;      $.ajax({&#xA;        url: this.props.url,&#xA;        dataType: 'json',&#xA;        success: function(data){&#xA;          this.setState({data: data});&#xA;        }.bind(this),&#xA;        error: function(xhr, status, err){&#xA;          console.error(url, status, err.toString());&#xA;        }.bind(this)&#xA;      });&#xA;    },&#xA;    componentWillMount: function(){&#xA;      this.getComments()&#xA;    },&#xA;    render: function(){&#xA;      return (&#xA;        &lt;div className="commentBox"&gt;&#xA;          {/*this.state.data.comments*/}&#xA;          {&lt;CommentList data={this.state.data.comments}/&gt;}&#xA;        &lt;/div&gt;&#xA;      );&#xA;    }&#xA;  });&#xA;&#xA;  React.renderComponent(&#xA;    &lt;CommentBox url="comments.json" /&gt;,&#xA;    document.getElementById('content')&#xA;  );&#xA;</code></pre>&#xA;
<p>First of all, set more safe initial data:</p>&#xA;&#xA;<pre><code>getInitialState : function() {&#xA;    return {data: {comments:[]}};&#xA;},&#xA;</code></pre>&#xA;&#xA;<p>And ensure your ajax data.</p>&#xA;&#xA;<p>It should work if you follow above two instructions like <a href="http://jsbin.com/hozamejo/1/edit">Demo.</a></p>&#xA;&#xA;<p>Updated: you can just wrap the .map block with conditional statement.</p>&#xA;&#xA;<pre><code>if (this.props.data) {&#xA;  var commentNodes = this.props.data.map(function (comment){&#xA;      return (&#xA;        &lt;div&gt;&#xA;          &lt;h1&gt;{comment.author}&lt;/h1&gt;&#xA;        &lt;/div&gt;&#xA;      );&#xA;  });&#xA;}&#xA;</code></pre>&#xA;
<p>I think you forgot to change  </p>&#xA;&#xA;<pre><code>data={this.props.data}&#xA;</code></pre>&#xA;&#xA;<p>to</p>&#xA;&#xA;<pre><code>data={this.state.data}&#xA;</code></pre>&#xA;&#xA;<p>in the render function of CommentBox. I did the same mistake when I was following the tutorial. Thus the whole render function should look like</p>&#xA;&#xA;<pre><code>render: function() {&#xA;  return (&#xA;    &lt;div className="commentBox"&gt;&#xA;      &lt;h1&gt;Comments&lt;/h1&gt;&#xA;      &lt;CommentList data={this.state.data} /&gt;&#xA;      &lt;CommentForm /&gt;&#xA;    &lt;/div&gt;&#xA;  );&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>instead of </p>&#xA;&#xA;<pre><code>render: function() {&#xA;  return (&#xA;    &lt;div className="commentBox"&gt;&#xA;      &lt;h1&gt;Comments&lt;/h1&gt;&#xA;      &lt;CommentList data={this.props.data} /&gt;&#xA;      &lt;CommentForm /&gt;&#xA;    &lt;/div&gt;&#xA;  );&#xA;</code></pre>&#xA;
<p>You need to put the data before render</p>&#xA;&#xA;<p>Should be like this: </p>&#xA;&#xA;<pre><code>var data = [&#xA;  {author: "Pete Hunt", text: "This is one comment"},&#xA;  {author: "Jordan Walke", text: "This is *another* comment"}&#xA;];&#xA;&#xA;React.render(&#xA;  &lt;CommentBox data={data}/&gt;,&#xA;  document.getElementById('content')&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>Instead of this:</p>&#xA;&#xA;<pre><code>React.render(&#xA;  &lt;CommentBox data={data}/&gt;,&#xA;  document.getElementById('content')&#xA;);&#xA;&#xA;var data = [&#xA;  {author: "Pete Hunt", text: "This is one comment"},&#xA;  {author: "Jordan Walke", text: "This is *another* comment"}&#xA;];&#xA;</code></pre>&#xA;