24335218
onClick event isn't firing on React Component
<p>I'm working on a component stub where I have a grid of tiles, each that require a click handler, and also a specific "new" tile that has a different click handler. I'm trying to get the click handlers working correctly, but the event never seems to fire.</p>&#xA;&#xA;<p>Any ideas?</p>&#xA;&#xA;<pre><code>var grid = React.createClass({&#xA;    onCreateNew: function () {&#xA;        console.log("onCreateNew");&#xA;    },&#xA;    render: function () {&#xA;        var tiles = [];&#xA;        if (this.props.items) {&#xA;            tiles = this.props.items.map(function (item, index) {&#xA;                //create a tile for each item&#xA;            });&#xA;        }&#xA;        //always append "new" tile for the last one&#xA;        tiles.push(React.DOM.div({&#xA;            onClick: this.onCreateNew, className: "tile new_tile"&#xA;        },&#xA;            React.DOM.div({ className: "plus", onClick: this.onCreateNew }, "+")&#xA;        ));            &#xA;        return React.DOM.div({ id: "flowsheetPane" }, tiles);&#xA;    }&#xA;});&#xA;</code></pre>&#xA;
<p>As commenters have mentioned, your code appears to work as expected in isolation.</p>&#xA;&#xA;<p>React delegates to event handlers with a single event listener at the root of the DOM, so events need to propagate all the way to the top in order for React to call your function.</p>&#xA;&#xA;<p>Could you have added some event listeners somewhere in the component hierarchy that are calling <code>event.stopPropagation()</code>?  If you did this outside of React (e.g. natively or with jquery), it would cause the events to never reach the top of the DOM, and React would never have a chance to delegate out to your methods.</p>&#xA;