24746457
React CCSTransitionGroup animation not applying enter/leave classes
<p>I'm trying to write a simple page slider. Here, when I click a page, it creates a new Page with random content, and re-renders the App component. On App render(), instead of the TransitionGroup holding both state.pages until animation completes, it just switches out the pages, never attaching the enter-leave classes and not performing the css animation. I'm sure I'm messing something up in the LifeCycle, but can't think of it.</p>&#xA;&#xA;<p>Thanks for looking!</p>&#xA;&#xA;<pre><code>var Page = React.createClass({&#xA;  handleClick: function(){&#xA;    var pgs = ['page-one','page-two','page-three','page-four']&#xA;    currentIdx = Math.floor(Math.random() * pgs.length);&#xA;    var pg = pgs[ currentIdx ];&#xA;    var newPg = &lt;Page html={pg} title={'Title for ' + pg} /&gt;;&#xA;    React.renderComponent(&lt;App newPage={newPg} /&gt;, document.body)&#xA;  },&#xA;  render: function(){&#xA;    return (&lt;div className="content" style={{paddingTop: 44}} onClick={this.handleClick}&gt;{this.props.html}&lt;/div&gt;);&#xA;  }&#xA;})&#xA;&#xA;var ReactCSSTransitionGroup = React.addons.CSSTransitionGroup;&#xA;&#xA;var App = React.createClass({&#xA;  getInitialState: function() {&#xA;    return {pages: [&lt;Page html="initial page" title="initial title" /&gt;]};&#xA;  },&#xA;  componentWillMount: function(){&#xA;    this.setState({pages: [this.props.newPage]})&#xA;  },&#xA;  componentWillReceiveProps: function(nextProps) {&#xA;      this.setState({pages: [nextProps.newPage]});&#xA;    },&#xA;  render: function() {&#xA;    var title = this.state.pages.length ? this.state.pages[ this.state.pages.length - 1 ].props.title : 'none';&#xA;    return (&#xA;      &lt;div id="body"&gt;&#xA;        &lt;TitleBar title={title} /&gt;&#xA;        &lt;ReactCSSTransitionGroup transitionName="pg" id="transdiv" component={React.DOM.div}&gt;&#xA;          {this.state.pages}&#xA;        &lt;/ReactCSSTransitionGroup&gt;&#xA;      &lt;/div&gt;&#xA;    );&#xA;  }&#xA;});&#xA;</code></pre>&#xA;
<p>The problem was that I was setting the Page keys in Page.render() (not shown above), and not in App.render() I'm not sure why you can't set keys in the child/owned component as long as they're unique, but this fixed my problem.</p>&#xA;&#xA;<pre><code>var App = React.createClass({&#xA;&#xA;    // other methods are same&#xA;&#xA;    render: function(){&#xA;        var title = 'Title';&#xA;        var pgs = this.state.pages.map(function(pg){&#xA;&#xA;            // SET KEY HERE&#xA;            pg.props.key = pg.props.title;&#xA;            return pg;&#xA;        }&#xA;        return (&#xA;            &lt;div id="body"&gt;&#xA;                &lt;TitleBar title={title} /&gt;&#xA;                &lt;ReactCSSTransitionGroup transitionName="pg" id="transdiv" component={React.DOM.div}&gt;&#xA;                    {pgs}&#xA;                &lt;/ReactCSSTransitionGroup&gt;&#xA;            &lt;/div&gt;&#xA;        );&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Also, if anyone can tell me the correct way to set props on unmounted components, please tell me. Setting them directly works, but it doesn't feel right.</p>&#xA;