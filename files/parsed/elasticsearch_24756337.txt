24756337 how insert data to Elasticsearch without id

I insert data to Elasticsearch with id 123

    
    
    localhost:9200/index/type/123
    

but I do not know what will next id inserted

how insert data to Elasticsearch without id in localhost:9200/index/type?

The index operation can be executed without specifying the id. In such a case,
an id will be generated automatically. In addition, the op_type will
automatically be set to create. Here is an example (note the POST used instead
of PUT):

    
    
    $ curl -XPOST 'http://localhost:9200/twitter/tweet/' -d '{
        "user" : "kimchy",
        "post_date" : "2009-11-15T14:12:12",
        "message" : "trying out Elasticsearch"
    }'
    

It's possible to leave the ID field blank and elasticsearch will assign it
one. For example a _bulk insert will look like

    
    
    {"create":{"_index":"products","_type":"product"}}\n
    {JSON document 1}\n
    {"create":{"_index":"products","_type":"product"}}\n
    {JSON document 2}\n
    {"create":{"_index":"products","_type":"product"}}\n
    {JSON document 3}\n
    ...and so on
    

The IDs will look something like 'AUvGyJMOOA8IPUB04vbF'

You can use `POST` request to create a new document or data object without
specifying `id` property in the path.

    
    
    curl -XPOST 'http://localhost:9200/stackoverflow/question' -d '
    {
      title: "How to insert data to elasticsearch without id in the path?"
    }
    

In my case, using nodejs and the elasticsearch package I did it this way using
the client:

> client.index ()

    
    
    var elasticsearch = require ('elasticsearch');
    let client = new elasticsearch.Client ({
        host: '127.0.0.1: 9200'
    });
    
    client.index ({
        index: 'myindex'
        type: 'mytype',
        body: {
            properti1: 'val 1',
            properti2: ['y', 'z'],
            properti3: true,
        }
    }, function (error, response) {
        if (error) {
            console.log("error: ", error);
        } else {
            console.log("response: ", response);
        }
    });
    

if an **id** is not specified, elasticsearch will generate one automatically

If our data doesnâ€™t have a natural ID, we can let Elasticsearch autogenerate
one for us. The structure of the request changes: instead of using the PUT
verb ("store this document at this URL"), we use the POST verb ("store this
document under this URL"). The URL now contains just the `_index` and the
`_type`:

    
    
    curl -X POST "localhost:9200/website/blog/" -H 'Content-Type: application/json' -d'
    {
      "title": "My second blog entry",
      "text":  "Still trying this out...",
      "date":  "2014/01/01"
    }
    '
    

The response is similar to what we saw before, except that the _id field has
been generated for us:

    
    
    {
       "_index":    "website",
       "_type":     "blog",
       "_id":       "AVFgSgVHUP18jI2wRx0w",
       "_version":  1,
       "created":   true
    }
    

Autogenerated IDs are 20 character long, URL-safe, Base64-encoded GUID
strings. These GUIDs are generated from a modified FlakeID scheme which allows
multiple nodes to be generating unique IDs in parallel with essentially zero
chance of collision.

<https://www.elastic.co/guide/en/elasticsearch/guide/current/index-doc.html>

