24413849 Difference between multi field and copy-to in Elastic Search?

I use multi-fields in a lot of my mappings. In the doc of Elastic Search there
is an indication that multi-fields should be replaced with the "fields"
parameter. See
<http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/_multi_fields.html#_multi_fields>

This works fine. However, to access a multi-field as a single field the
documentation recommends to specify the copy_to parameter instead of the path
parameter (see
<http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/mapping-
core-types.html#_accessing_fields>)

Can somebody provide an example of such a mapping definition (thus using the
"fields" parameter combined with "copy_to").

I have the impression that if you use the fields parameter you still need to
specify the path parameter. And if you use copy_to, you no longer need to use
a multi-fields approach; the fields just become separate fields and data of
one field is copied to another at index time.

Hope somebody can help.

thx Marc

I think that the `copy_to` option can be viewed as a cleaner variant of the
Multi-fields feature (that is, the `fields` option). Both of these are easy to
use when you want to "copy" values of a field to one or more other fields (to
apply different mapping rules). However, if you need to "copy" values from
multiple fields to the same field (that is, when you want a [custom `_all`
field](https://www.elastic.co/guide/en/elasticsearch/guide/current/custom-
all.html)), you must add the `path` option to the mapping, if you're using
Multi-fields. On the other hand, with the `copy_to` option, you can simply
point multiple source fields to the same destination field.

See this:
<https://www.elastic.co/guide/en/elasticsearch/reference/1.6/_multi_fields.html>

copy_to would allow you to merge different fields like first_name and
last_name into full_name

while multi field is used when you want to define several ways to index your
field. For example

    
    
    // Document mapping
    {
      "properties": {
        "name": {
          "fields": {
            "name_metaphone": {
              "type": "string", 
              "analyzer": "mf_analyzer"
            }, 
            "name_exact": {
              "index": "not_analyzed", 
              "type": "string"
            }
          }, 
          "type": "multi_field"
        }
      }
    }
    

