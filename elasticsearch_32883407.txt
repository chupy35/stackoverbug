32883407
How can I query an elastic search autocomplete field, and return only certain results?
<p>Given the following mapping:</p>&#xA;&#xA;<pre><code>{&#xA;      "tags": {&#xA;        "aliases": {},&#xA;        "mappings": {&#xA;          "tag": {&#xA;            "properties": {&#xA;              "_users": {&#xA;                "type": "string"&#xA;              },&#xA;              "child": {&#xA;                "type": "string"&#xA;              },&#xA;              "level": {&#xA;                "type": "double"&#xA;              },&#xA;              "name": {&#xA;                "type": "string",&#xA;                "fields": {&#xA;                  "suggest": {&#xA;                    "type": "completion",&#xA;                    "analyzer": "simple",&#xA;                    "payloads": true,&#xA;                    "preserve_separators": true,&#xA;                    "preserve_position_increments": true,&#xA;                    "max_input_length": 50&#xA;                  }&#xA;                }&#xA;              },&#xA;              "parent": {&#xA;                "type": "string"&#xA;              },&#xA;              "root": {&#xA;                "type": "boolean"&#xA;              }&#xA;            }&#xA;          }&#xA;        },&#xA;        "settings": {&#xA;          "index": {&#xA;            "creation_date": "1443688314495",&#xA;            "number_of_shards": "5",&#xA;            "number_of_replicas": "1",&#xA;            "version": {&#xA;              "created": "1070299"&#xA;            },&#xA;            "uuid": "iH0QRRm_QF6pXEZ5sJI4yA"&#xA;          }&#xA;        },&#xA;        "warmers": {}&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>Also, <code>_users</code> is an array of strings.</p>&#xA;&#xA;<p>How do I query for a tag name suggestion and return ONLY documents where the 'id' I query with is in the <code>_users</code> array?</p>&#xA;&#xA;<p>Here is a sample tag:</p>&#xA;&#xA;<pre><code>{&#xA;  "_index": "tags",&#xA;  "_type": "tag",&#xA;  "_id": "560b25d8276a6504d808d703",&#xA;  "_score": 1.0,&#xA;  "_source": {&#xA;    "name": "elastic indexed?",&#xA;    "child": [],&#xA;    "_users": ["foobar", "someMongoObjectID", "hellothere"],&#xA;    "_id": "560b25d8276a6504d808d703"&#xA;  }&#xA;}&#xA;</code></pre>&#xA;
<p>See if the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/1.4/suggester-context.html" rel="nofollow">Context Suggester</a> will do what you need. </p>&#xA;
<p>Peter, thank you for the idea.  Here is a solution based on it.</p>&#xA;&#xA;<p>The mapping:</p>&#xA;&#xA;<pre><code> {&#xA;  "tags": {&#xA;    "aliases": {},&#xA;    "mappings": {&#xA;      "tag": {&#xA;        "properties": {&#xA;          "_users": {&#xA;            "type": "string"&#xA;          },&#xA;          "child": {&#xA;            "type": "string"&#xA;          },&#xA;          "level": {&#xA;            "type": "double"&#xA;          },&#xA;          "name": {&#xA;            "type": "string",&#xA;            "fields": {&#xA;              "suggest": {&#xA;                "type": "completion",&#xA;                "analyzer": "simple",&#xA;                "payloads": true,&#xA;                "preserve_separators": true,&#xA;                "preserve_position_increments": true,&#xA;                "max_input_length": 50,&#xA;                "context": {&#xA;                  "_users": {&#xA;                    "type": "category",&#xA;                    "path": "_users",&#xA;                    "default": 'public' // documents with no `_users` or where &#xA;                                        //_users.length  === 0 should be passed &#xA;                                        //'public' as context in the query.&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          },&#xA;          "parent": {&#xA;            "type": "string"&#xA;          },&#xA;          "root": {&#xA;            "type": "boolean"&#xA;          }&#xA;        }&#xA;      }&#xA;    },&#xA;    "settings": {&#xA;      "index": {&#xA;        "creation_date": "1443757145827",&#xA;        "number_of_shards": "5",&#xA;        "number_of_replicas": "1",&#xA;        "version": {&#xA;          "created": "1070299"&#xA;        },&#xA;        "uuid": "Uzb7Rc3sQIafgYD73CSp3g"&#xA;      }&#xA;    },&#xA;    "warmers": {}&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The query:</p>&#xA;&#xA;<pre><code> /_suggest&#xA;{&#xA;    "tag-suggest": {&#xA;        "text": "foo",&#xA;        "completion": {&#xA;            "field": "name.suggest",&#xA;            "fuzzy": {},&#xA;            "context": {&#xA;                "_users": "someuserID" // or `public` for tags that are not&#xA;                                       // associated with at least one user&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;