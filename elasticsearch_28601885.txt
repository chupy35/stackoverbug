28601885
Cluster hanging on node failure
<p>Hello all of you bright people,</p>&#xA;&#xA;<p>We’re currently running a smallish 300 GB cluster in production on 5 nodes with around 30 mil docs. Everything works flawlessly except when a node really goes down (I mean like network or HW failure).</p>&#xA;&#xA;<p>Generally when we lose a node the cluster becomes more or less completely unresponsive for a few minutes. Both regarding indexing and querying. This is of course, less than ideal as we have load 24/7.</p>&#xA;&#xA;<p>I would really appreciate some help with understanding best practice settings to have robust cluster. </p>&#xA;&#xA;<p>First goal for us is for the cluster to not become unresponsive in the event of a node crash. After reading everything I could find on the web I can't really understand if ES is designed to be unresponsive for ping_retries*ping_timeout seconds or if the cluster will continue to server query requests even during this time. Could anyone help me shed light on this?</p>&#xA;&#xA;<p>Secondly in the event of a even worse failure where the cluster goes into red state, would it be possible to allow the cluster to still serve read/query requests? </p>&#xA;&#xA;<p>I would be ever so grateful for anyone willing to help me understand how this works or what we would need to change to make our ES installation more robust.</p>&#xA;&#xA;<p>I’ve included our config here:</p>&#xA;&#xA;<pre><code>cluster.name: clustername&#xA;node.name: nodename&#xA;path.data: /data&#xA;node.master: true&#xA;node.data: true&#xA;discovery.zen.minimum_master_nodes: 2&#xA;discovery.zen.ping.multicast.enabled: false&#xA;discovery.zen.ping.multicast.ping.enabled: false&#xA;discovery.zen.ping.unicast.enabled: true&#xA;discovery.zen.ping.unicast.hosts: ["host1","host2","host3"]&#xA;bootstrap.mlockall: true&#xA;http.cors.enabled: true&#xA;index.number_of_shards: 10&#xA;action.disable_delete_all_indices: true&#xA;marvel.agent.exporter.es.hosts: ["marvel:9200"]&#xA;</code></pre>&#xA;
<p>Cluster hangs on failure because of the <code>fault detection timeout</code> value:</p>&#xA;&#xA;<pre><code>discovery.zen.fd.ping_interval: 1s -&gt; default 1s&#xA;discovery.zen.fd.ping_timeout: 2s -&gt; default 30 secs&#xA;discovery.zen.fd.ping_retries: 3 -&gt; default 3 secs&#xA;</code></pre>&#xA;&#xA;<p>There are two fault detection processes running. </p>&#xA;&#xA;<p><strong>The first</strong> is by the master, pings all the other nodes in the cluster and verify that they are alive. </p>&#xA;&#xA;<p><strong>Second</strong>, each node pings to master to verify if its still alive or an election process needs to be initiated.</p>&#xA;&#xA;<p>With above Configuration: &#xA;If a node fails, Master will retries 3 times with timeout of 2 seconds (sum=6secs hang) instead of 90s wait(hang).</p>&#xA;&#xA;<p>Please note I'm running cluster on local network with &lt;1ms and 1Gbps connectivity, Depending on your environment you should adjust accordingly.&#xA;I'm on elasticsearch 5.1.1, you should refer to your version documentation for exact syntax.</p>&#xA;