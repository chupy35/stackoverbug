30425057
Elasticsearch histogram, multiple interval types?
<p>Using Elasticsearch histogram functionality, i can put various 'ranges' of data into a bucket by specifying an interval. In this case '50':</p>&#xA;&#xA;<p>Price:&#xA;0-50&#xA;50-100&#xA;100-150&#xA;150-200&#xA;200-250&#xA;etc</p>&#xA;&#xA;<p>This works fine, but this returns an awfully long list of buckets. What I'd prefer is:</p>&#xA;&#xA;<p>0-50&#xA;50-100&#xA;100-200&#xA;200-400&#xA;400-1000&#xA;1000+</p>&#xA;&#xA;<p>Or something of the likes. Is it possible to tell ES what intervals (/ranges) it should return?</p>&#xA;
<p>Documentation explicitly says about <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-histogram-aggregation.html" rel="nofollow">histogram aggregation</a> that </p>&#xA;&#xA;<blockquote>&#xA;  <p>It dynamically builds <strong>fixed</strong> size (a.k.a. interval) buckets over the values.</p>&#xA;</blockquote>&#xA;&#xA;<p>What I can think of is that in order to reduce number of buckets you may apply logarithmic scale (or any other non-linear scale, e.g. square root, that will give enough granularity for your particular dataset) to values using script option:</p>&#xA;&#xA;<pre><code>{&#xA;    "aggs": {&#xA;        "prices": {&#xA;            "histogram": {&#xA;                "field": "price",&#xA;                "script": "Math.log10(_value)",&#xA;                "interval": 1&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This will give buckets with keys 1, 2, 3,&#8230; that stand for original values within intervals [0;10), [10;100), [100;1000),&#8230;</p>&#xA;&#xA;<p>By applying reverse function (10<sup>x</sup> in this case) to the keys on client side you can restore original scale.</p>&#xA;
<p>You need to use the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-range-aggregation.html" rel="nofollow"><code>numeric range</code></a> aggregation, which allows you to specify exactly which intervals you want, such as this:</p>&#xA;&#xA;<pre><code>{&#xA;    "aggs" : {&#xA;        "price_ranges" : {&#xA;            "range" : {&#xA;                "field" : "price",&#xA;                "ranges" : [&#xA;                    { "to" : 50 },&#xA;                    { "from" : 50, "to" : 100 },&#xA;                    { "from" : 100, "to": 200 },&#xA;                    { "from" : 200, "to": 400 },&#xA;                    { "from" : 400, "to": 1000 },&#xA;                    { "from" : 1000 }&#xA;                ]&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This should give you exactly what you expect.</p>&#xA;