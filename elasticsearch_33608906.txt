33608906
Elasticsearch indexing with elisions
<p>How would I index words, such as <em>L'Oréal</em> in Elasticsearch?</p>&#xA;&#xA;<p>User might type in couple of ways:</p>&#xA;&#xA;<ol>&#xA;<li>Loreal</li>&#xA;<li>L'Oreal</li>&#xA;<li>L'Oréal</li>&#xA;</ol>&#xA;&#xA;<p>Ideally, I'd like all of them to output loreal. I wouldn't like to do this manually for each <em>exceptional keyword</em>.</p>&#xA;&#xA;<p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/1.4/analysis-elision-tokenfilter.html" rel="nofollow">Elision Token Filter</a> seems to be useful, but it would work only for 2nd and 3rd cases.</p>&#xA;&#xA;<p>Any ideas how I'd make all of these keywords to output same token <code>loreal</code>?</p>&#xA;
<p>The elision token filter will actually remove the specified articles, so you'll never have <code>loreal</code> in your token, i.e. the first <code>l</code> will never make it.</p>&#xA;&#xA;<p>What I suggest is the following using a combination of <code>asciifolding</code> and <code>lowercase</code>:</p>&#xA;&#xA;<pre><code>PUT test_index&#xA;{&#xA;   "settings": {&#xA;      "analysis": {&#xA;         "analyzer": {&#xA;            "my_analyzer": {&#xA;               "tokenizer": "standard",&#xA;               "filter": [&#xA;                  "standard",&#xA;                  "asciifolding",&#xA;                  "lowercase"&#xA;               ],&#xA;               "char_filter": [&#xA;                  "apostrophe"&#xA;               ]&#xA;            }&#xA;         },&#xA;         "char_filter": {&#xA;            "apostrophe": {&#xA;               "type": "mapping",&#xA;               "mappings": [&#xA;                  "'=&gt;"&#xA;               ]&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>With <code>my_analyzer</code>, all the input strings you've specified will be transformed into the <code>loreal</code> token.</p>&#xA;&#xA;<pre><code>curl -XGET 'localhost:9200/test_index/_analyze?analyzer=my_analyzer&amp;pretty' -d "Loreal"&#xA;=&gt; loreal&#xA;&#xA;curl -XGET 'localhost:9200/test_index/_analyze?analyzer=my_analyzer&amp;pretty' -d "L'Oreal"&#xA;=&gt; loreal&#xA;&#xA;curl -XGET 'localhost:9200/test_index/_analyze?analyzer=my_analyzer&amp;pretty' -d "L'Oréal"&#xA;=&gt; loreal&#xA;</code></pre>&#xA;