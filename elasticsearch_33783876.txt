33783876
how to normalizing the score in ElasticSearch and run custom sorting afterwards
<p>I have a filter query which varies in the boost and no of terms that are passed for filtering.</p>&#xA;&#xA;<p>So basically the final score varies a lot. Ranging from 0.1923(something) to anywhere between 100-200.</p>&#xA;&#xA;<p>I would like to sort the documents based on the score calculated by ES and a particular field value.</p>&#xA;&#xA;<pre><code>"script" : "_score + doc['my_numeric_field'].value"&#xA;&#xA;# Where my_numeric_field value ranges from 1 -10&#xA;</code></pre>&#xA;&#xA;<p>But if i don't normalize the score then, whenever default _score are high they will be the dominating factor in getting the final score. And whenever the _score is low, 'my_numeric_field' will be the dominating factor in sorting.</p>&#xA;&#xA;<p>So how can i first normalize the _score value to some standard scale so i can have 70, 30 % on final score contributed by _score and my_numeric_field respectively.</p>&#xA;&#xA;<p>One way to solve this would be if i know the max score i get in the sorting script. If i know that value then i can use that for normalizing the score of each document. Is there a way to do that?</p>&#xA;