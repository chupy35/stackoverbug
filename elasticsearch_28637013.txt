28637013
Can I ignore these query exceptions in my ElasticSearch log?
<p>I have a large number of indices in my ES instance, and I have noticed that the log files are growing rather large. The ElasticSearch Chef cookbook by default sets the log level to DEBUG and this has resulted in millions of error messages being written into the log. Please see this one as an example:</p>&#xA;&#xA;<pre><code>[2015-02-20 18:42:28,858][DEBUG][action.search.type       ] [SEARCHNODE] [child_index][4], node[xxxx], [P], s[STARTED]: Failed to execute [org.elasticsearch.action.search.SearchRequest@1a9a62ad] lastShard [true]&#xA;org.elasticsearch.search.SearchParseException: [ichild_index][4]: from[0],size[105]: Parse Failure [Failed to parse source [{"from":0,"size":105,"sort":{"lastmodified":{"order":"desc","missing":"_last"}},"query":{"indices":{"indices":["main_index"],"query":{"filtered":{"query":{"bool":{"must":[{"match_all":{}}]}},"filter":{"and":{"filters":[{"term":{"isclosed":false}},{"or":[{"and":[{"type":{"value":"type_name"}}]}]},{"term":{"planid":1454}},{"bool":{"should":[{"terms":{"roles":[173,935,934,937,930,938,936]}},{"missing":{"field":"roles"}}]}}]}}}},"no_match_query":"none"}},"fields":"[]"}]]&#xA;        at org.elasticsearch.search.SearchService.parseSource(SearchService.java:660)&#xA;        at org.elasticsearch.search.SearchService.createContext(SearchService.java:516)&#xA;        at org.elasticsearch.search.SearchService.createAndPutContext(SearchService.java:488)&#xA;        at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:257)&#xA;        at org.elasticsearch.search.action.SearchServiceTransportAction$5.call(SearchServiceTransportAction.java:206)&#xA;        at org.elasticsearch.search.action.SearchServiceTransportAction$5.call(SearchServiceTransportAction.java:203)&#xA;        at org.elasticsearch.search.action.SearchServiceTransportAction$23.run(SearchServiceTransportAction.java:517)&#xA;        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)&#xA;        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)&#xA;        at java.lang.Thread.run(Thread.java:745)&#xA;Caused by: org.elasticsearch.search.SearchParseException: [child_index][4]: from[0],size[105]: Parse Failure [No mapping found for [lastmodified] in order to sort on]&#xA;        at org.elasticsearch.search.sort.SortParseElement.addSortField(SortParseElement.java:198)&#xA;        at org.elasticsearch.search.sort.SortParseElement.addCompoundSortField(SortParseElement.java:172)&#xA;        at org.elasticsearch.search.sort.SortParseElement.parse(SortParseElement.java:90)&#xA;        at org.elasticsearch.search.SearchService.parseSource(SearchService.java:644)&#xA;</code></pre>&#xA;&#xA;<p>The query in the error message contains this fragment:</p>&#xA;&#xA;<pre><code>... {"indices":{"indices":["main_index"] ...&#xA;</code></pre>&#xA;&#xA;<p>However, the error actually originates from child_index. I'm not sure why my instance would even consider child_index to execute the query on as we clearly don't want to consider that index as per the query.</p>&#xA;&#xA;<p>The query above is actually executed successfully. Results are returned correctly, we don't log anything on the web application that indicates a problem. Presumably the query is at some point run against main_index as well and the results are correctly returned to the web app.</p>&#xA;&#xA;<p>My instance is under a moderate workload and this file can comfortably grow to 5gb in a given 12 hour period. I know that the solution to that problem is simple: decrease the log level to WARN and the errors will go away. However, I'm worried that we might have a hitherto undiagnosed problem with the instance that could bite us later.</p>&#xA;
<p>Of all the errors to ignore, <code>org.elasticsearch.search.SearchParseException</code> is probably the one you should <strong>never</strong> ignore. It means that ES was unable to parse your search JSON as it expects to be able to (as far as I can tell).</p>&#xA;&#xA;<p>I took a look at your JSON, and although it lints it appears your "fields" array is actually <code>"fields": "[]"</code> which could be what's causing the issue. Can you try without the quotes and see what happens? </p>&#xA;&#xA;<p>Theory, but it's possible it fails to parse that section and so just ignores it (which should result in the same thing as if it were parsed in this case).</p>&#xA;