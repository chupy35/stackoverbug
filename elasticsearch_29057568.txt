29057568
Elasticsearch: bulk update multiple documents saved in a Java String?
<p>I can create the following string saved in a Java String object called updates.</p>&#xA;&#xA;<pre><code>{ "update":{ "_index":"myindex", "_type":"order", "_id":"1"} }&#xA;{ "doc":{"field1" : "aaa", "field2" : "value2" }}&#xA;{ "update":{ "_index":"myindex", "_type":"order", "_id":"2"} }&#xA;{ "doc":{"field1" : "bbb", "field2" : "value2" }}&#xA;{ "update":{ "_index":"myindex", "_type":"order", "_id":"3"} }&#xA;{ "doc":{"field1" : "ccc", "field2" : "value2" }}&#xA;</code></pre>&#xA;&#xA;<p>Now I want to do bullk update within a Java program:</p>&#xA;&#xA;<pre><code>Client client = getClient(); //TransportClient&#xA;&#xA;BulkRequestBuilder bulkRequest = client.prepareBulk();&#xA;//?? how to attach updates variable to bulkRequest?&#xA;&#xA;BulkResponse bulkResponse = bulkRequest.execute().actionGet();&#xA;</code></pre>&#xA;&#xA;<p>I am unable to find a way to attach the above updates variable to bulkRequest before execute. </p>&#xA;&#xA;<p>I notice that I am able to add UpdateRequest object to bulkRequest, but it seems to add only one document one time. As indicated above, I have multiple to-be-updated document in one string.</p>&#xA;&#xA;<p>Can someone enlighten me on this? I have a gut feel that I may do things wrong way. </p>&#xA;&#xA;<p>Thanks and regards.</p>&#xA;
<p>The following code should work fine for you.&#xA;For each document updation , you need to create a separate update request as below and keep on adding it to the bulk requests.&#xA;Once the bulk requests is ready , execute a get on it. </p>&#xA;&#xA;<pre><code>JSONObject obj = new JSONObject();&#xA;obj.put("field1" , "value1");&#xA;obj.put("field2" , "value2");&#xA;UpdateRequest updateRequest = new UpdateRequest(index, indexType, id1).doc(obj.toString());&#xA;BulkRequestBuilder bulkRequest = client.prepareBulk();&#xA;bulkRequest.add(updateRequest);&#xA;&#xA;&#xA;obj = new JSONObject();&#xA;obj.put("fieldX" , "value1");&#xA;obj.put("fieldY" , "value2");&#xA;updateRequest = new UpdateRequest(index, indexType, id2).doc(obj.toString());&#xA;bulkRequest = client.prepareBulk();&#xA;bulkRequest.add(updateRequest);&#xA;&#xA;&#xA;bulkRequest.execute().actionGet();&#xA;</code></pre>&#xA;
<p>I ran into the same problem where only 1 document get updated in my program. Then I found the following way which worked perfectly fine. This uses spring java client. I have also listed the the dependencies I used in the code.</p>&#xA;&#xA;<pre><code>import org.elasticsearch.action.update.UpdateRequest;&#xA;&#xA;import org.elasticsearch.index.query.QueryBuilder;&#xA;&#xA;import org.springframework.data.elasticsearch.core.query.UpdateQuery;&#xA;&#xA;import org.springframework.data.elasticsearch.core.query.UpdateQueryBuilder;&#xA;&#xA;private UpdateQuery updateExistingDocument(String Id) {&#xA;    // Add updatedDateTime, CreatedDateTime, CreateBy, UpdatedBy field in existing documents in Elastic Search Engine&#xA;    UpdateRequest updateRequest = new UpdateRequest().doc("UpdatedDateTime", new Date(), "CreatedDateTime", new Date(), "CreatedBy", "admin", "UpdatedBy", "admin");&#xA;&#xA;    // Create updateQuery&#xA;    UpdateQuery updateQuery = new UpdateQueryBuilder().withId(Id).withClass(ElasticSearchDocument.class).build();&#xA;    updateQuery.setUpdateRequest(updateRequest);&#xA;&#xA;    // Execute update&#xA;     elasticsearchTemplate.update(updateQuery);&#xA;}&#xA;</code></pre>&#xA;