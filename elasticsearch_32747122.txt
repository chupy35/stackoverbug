32747122
Query only for increase scoring in ElasticSearch?
<p>I want to write a query in elasticsearch only for scoring can anybody please tell me how can i do that my query is given below also "minimum_should_match": 0 is not working with should, if any query matches both area2 and area1 then i want to boost the score of the result now how can i achieve that can anybody tel me the final query which i should write ??</p>&#xA;&#xA;<pre><code>query: {&#xA;                    bool: {&#xA;                      must: [&#xA;                          {&#xA;                            query_string: {&#xA;                              query: shop_search,&#xA;                              fields: ['shop_name'],&#xA;                              boost: 30.0&#xA;                            }&#xA;                          },&#xA;                          {&#xA;                            bool: {&#xA;                              should: [&#xA;                                {&#xA;                                  term : { 'address.area2' : search_area2 },&#xA;                                  term : { "address.area1" : search_area1 }                                  &#xA;                                },&#xA;                                "minimum_should_match" : 0,&#xA;                              ],&#xA;                            }&#xA;                          }&#xA;                      ] &#xA;                    }&#xA;</code></pre>&#xA;
<p>Do you want to get all records that match the shop search and boost the results where the the address.area1 and/or address.area2 field values match the area searches?</p>&#xA;&#xA;<p>The syntax you are using for the <code>bool</code> is off.  The match clause needs to be fixed up to fit Elasticsearch's expectations and the extra nested <code>bool</code> should not be necessary.  See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-bool-query.html" rel="nofollow">Elasticsearch Bool Query</a>.  </p>&#xA;&#xA;<pre><code>{&#xA;    "query" : {&#xA;        "bool" : {&#xA;            "must" : {&#xA;                "query_string" : {&#xA;                    "query" : &lt;SHOP_SEARCH&gt;,&#xA;                    "fields" : ['shop_name']&#xA;                }&#xA;            },&#xA;            "should" : [&#xA;                {&#xA;                    "match" : {&#xA;                        "address.area1" : {&#xA;                            "query" : &lt;SEARCH_AREA1&gt;,&#xA;                            "operator" : "and",&#xA;                            "boost" : &lt;CUSTOM_BOOST1&gt;&#xA;                        }&#xA;                    }&#xA;                },&#xA;                {&#xA;                    "match" : {&#xA;                        "address.area2" : {&#xA;                            "query" : &lt;SEARCH_AREA2&gt;,&#xA;                            "operator" : "and",&#xA;                            "boost" : &lt;CUSTOM_BOOST2&gt;&#xA;                        }&#xA;                    }&#xA;                }&#xA;            ]&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I think with that query, you can expect the the following:</p>&#xA;&#xA;<ul>&#xA;<li>only results that match the shop search</li>&#xA;<li>results that do not match on the area fields but do match the shop search - this is due to the presence of the match clause</li>&#xA;<li>order of the results will generally be results that match both areas first, followed by results that match one of the areas, followed by results that match neither of the areas - but no guarantees.  Learn more about Elasticsearch scoring  </li>&#xA;</ul>&#xA;&#xA;<p>You might want to review everything you are getting with <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html" rel="nofollow"><code>query_string</code></a>.  </p>&#xA;