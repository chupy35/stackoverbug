34033417
ElasticSearch - Query to match any part of path (path_hierarchy tokenizer)
<p>Apologies if this is an easy one but I wasn't able to come up with a query myself or find an answer online.</p>&#xA;&#xA;<p>If I have a field 'category' in my elasticsearch index that uses the path_hierarchy tokenizer to store the taxonomy structure, is there a way to query and match on ANY word in that path?</p>&#xA;&#xA;<pre><code>PUT /stuff&#xA;{&#xA;  "settings": {&#xA;    "analysis": {&#xA;      "analyzer": {&#xA;        "categories": { &#xA;          "tokenizer": "path_hierarchy"&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;PUT /stuff/_mapping/item&#xA;{&#xA;  "properties": {&#xA;    "name": { &#xA;      "type":  "string",&#xA;      "index": "not_analyzed"&#xA;    },&#xA;    "category": { &#xA;      "type":  "string",&#xA;      "index": "not_analyzed",&#xA;      "fields": {&#xA;        "tree": { &#xA;          "type":     "string",&#xA;          "analyzer": "categories"&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And then I put in a couple of items:</p>&#xA;&#xA;<pre><code>PUT /stuff/item/1 {"name": "The Killer Books", "category": "Entertainment/Movie/Horror"}&#xA;PUT /stuff/item/2 {"name": "The Adventure", "category": "Entertainment/Books And Stories/Fantasy"}&#xA;</code></pre>&#xA;&#xA;<p>Then I have a user search for 'Books'. It's just free form text, and I don't have any additional parameters that could help pinpoint the category. I want to get the movie titled "The Killer Books", but then also get the document under "Entertainment/Books And Stories".</p>&#xA;&#xA;<p>If a user searches for just 'Stories', I also want to return the second document.</p>&#xA;&#xA;<p>The problem I have is, I can't easily tell from just the search term alone where in the path structure the term might fall in. Is there a way to properly query this? I've tried queries like the following with no success:</p>&#xA;&#xA;<pre><code>GET /stuff/item/_search&#xA;{&#xA;  "query":{&#xA;     "multi_match":{ &#xA;        "query":"Books",&#xA;        "fields":["title", "category"]&#xA;      }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;
<p>I am not sure why are you using <code>path_hierarchy tokenizer</code>. For your given query to work, you could map your fields with <code>standard analyzer</code> like this</p>&#xA;&#xA;<pre><code>PUT /stuff/_mapping/item&#xA;{&#xA;  "properties": {&#xA;    "name": { &#xA;      "type":  "string" &lt;--- using default standard analyzer&#xA;    },&#xA;    "category": { &#xA;      "type":  "string" &lt;---- using default standard analyzer&#xA;      "fields": {&#xA;        "tree": { &#xA;          "type":     "string",&#xA;          "analyzer": "categories"&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now your query</p>&#xA;&#xA;<pre><code>GET /stuff/item/_search&#xA;    {&#xA;      "query":{&#xA;         "multi_match":{ &#xA;            "query":"Books",&#xA;            "fields":["name", "category"]&#xA;          }&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>will give you both the documents. I removed <code>"index" : "not_analyzed"</code> becuase It will index the string as it is so <em>The Killer Books</em> will be indexed as it is but with <code>standard analyzer</code> it will generate three tokens <em>the, killer , books</em> and hence your query will work. </p>&#xA;&#xA;<p>Make use of <a href="https://www.elastic.co/guide/en/elasticsearch/reference/2.1/indices-analyze.html" rel="nofollow">analyze endpoint</a> to see how your data is indexed and it will be easy to write queries.</p>&#xA;&#xA;<p>I hope this helps.</p>&#xA;