30648146
ElasticSearch: Migrate from 0.20.5 to 1.5.2 - single node - suggested steps?
<p>We have been sooooo happy with our ES rig, we haven't thought to upgrade it... but now we need to.</p>&#xA;&#xA;<p>We run 0.20 on CentOs. Single, stand alone ES system.</p>&#xA;&#xA;<p>We see the code related changes from 0.9 to 1.x, and those we have under control.</p>&#xA;&#xA;<p>What are the best steps to get this rig current? (We could set up a 2nd server alongside, if that makes the process cleaner.)</p>&#xA;
<p>You're still running 0.20, wow!! If you're happy with the performance and capabilities of 0.20, you'll be uber-delighted with 1.5.2, for sure!</p>&#xA;&#xA;<p>Before actually jumping into the upgrade, make sure to check the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/breaking-changes-1.0.html" rel="nofollow">breaking changes</a> pages. A lot of things changed in the 1.0 version and you need to make sure that all your current assets (queries, client-side code, etc) are adapted first. Also note that starting with ES 1.2, dynamic scripting was <a href="https://www.elastic.co/blog/scripting-security" rel="nofollow">disabled by default</a> so if you used dynamic scripts you'll need to take that into account and include <code>script.disable_dynamic: false</code> in your configuration, but 0.20 is so far away that you might not have to care about that.</p>&#xA;&#xA;<p>Then, if you check the official <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-upgrade.html" rel="nofollow">upgrade guide</a>, you'll see that jumping that many versions in one step, you'll need to go through a cluster restart, but since you have a single node it means your service will be unavailable during the upgrade. Note that bringing up a second node won't be possible because pre-1.0 and post-1.0 versions are not compatible.</p>&#xA;&#xA;<p>Once you're ready, i.e. you've been through the breaking changes and adapted whatever you need to, make sure to <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-upgrade.html#_0_90_x_and_earlier" rel="nofollow">back up your data</a> just before diving into the upgrade.</p>&#xA;&#xA;<p>Also make sure to upgrade your JDK to at least the latest Java 7, ideally Java 8 if that's possible, or ES 1.5.2 simply won't start.</p>&#xA;&#xA;<p>Then you can shutdown your node with <code>curl -XPOST 'http://localhost:9200/_shutdown'</code>, upgrade your ES installation to 1.5.2 and restart your node.</p>&#xA;&#xA;<p>After the node has recovered and is fully started, you can <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-upgrade.html" rel="nofollow">upgrade your indice files</a> to the latest Lucene format using <code>curl -XPOST 'http://localhost:9200/_upgrade'</code>.</p>&#xA;&#xA;<p>Disclaimer: Note that there are so many things that changed between 0.2 and 1.5.2 that I might have missed some, but the points above should be enough to get you started. If you can train in a staging environment you might be able to figure it all out and and a smooth upgrade.</p>&#xA;
<p>I would strongly suggest to create a new cluster from scratch and to re-index all the data.</p>&#xA;&#xA;<p>The single and the most important argument in favor of this is that, since 1.3, <a href="https://www.elastic.co/guide/en/elasticsearch/resiliency/current/index.html" rel="nofollow">Elasticsearch has checksums added</a>. Meaning, things that move over the wire (network) are actually checked for correctness of transfer.</p>&#xA;&#xA;<p>I am assuming "single, standalone" means one node. The checksum stuff doesn't make much sense for one node, but if you have more than one node there are chances something is corrupted.</p>&#xA;&#xA;<p>Also, there are some settings that are saved together with the index itself (one thing that comes to mind is the precision step for range queries). To have a clean, updated index, I strongly recommend to re-index the data in the new 1.5 cluster.</p>&#xA;