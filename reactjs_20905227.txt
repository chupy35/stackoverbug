20905227
Reactjs: Unexpected token '<' Error
<p>i am just starting with Reactjs and was writing a simple component to display &#xA;<br />&#xA;<code>li</code> tag and came across this error: </p>&#xA;&#xA;<blockquote>&#xA;  <p>Unexpected token '&lt;'</p>&#xA;</blockquote>&#xA;&#xA;<p>I have put the example at jsbin below&#xA;<a href="http://jsbin.com/UWOquRA/1/edit?html,js,console,output">http://jsbin.com/UWOquRA/1/edit?html,js,console,output</a></p>&#xA;&#xA;<p>Please let me know what i am doing wrong.</p>&#xA;
<p>You need to either transpile/compile that JSX code to javascript or use the in-browser transformator</p>&#xA;&#xA;<p>Look at <a href="http://facebook.github.io/react/docs/getting-started.html">http://facebook.github.io/react/docs/getting-started.html</a> and take note of the <code>&lt;script&gt;</code> tags, you need those included for JSX to work in the browser.</p>&#xA;
<p><strong>UPDATE:</strong> In React 0.12+, the JSX pragma is no longer necessary.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>Make sure include the JSX pragma at the top of your files:</p>&#xA;&#xA;<pre><code>/** @jsx React.DOM */&#xA;</code></pre>&#xA;&#xA;<p>Without this line, the <code>jsx</code> binary and in-browser transformer will leave your files unchanged.</p>&#xA;
<p>Here is a working example from your jsbin:</p>&#xA;&#xA;<p>HTML:</p>&#xA;&#xA;<pre><code>&lt;!DOCTYPE html&gt;&#xA;&lt;html&gt;&#xA;&lt;head&gt;&#xA;&lt;script src="//fb.me/react-with-addons-0.9.0.js"&gt;&lt;/script&gt;&#xA;&lt;meta charset=utf-8 /&gt;&#xA;&lt;title&gt;JS Bin&lt;/title&gt;&#xA;&lt;/head&gt;&#xA;&lt;body&gt;&#xA;  &lt;div id="main-content"&gt;&lt;/div&gt;&#xA;&lt;/body&gt;&#xA;&lt;/html&gt;&#xA;</code></pre>&#xA;&#xA;<p>jsx:</p>&#xA;&#xA;<pre><code>&lt;script type="text/jsx"&gt;&#xA;/** @jsx React.DOM */&#xA;var LikeOrNot = React.createClass({&#xA;    render: function () {&#xA;      return (&#xA;        &lt;p&gt;Like&lt;/p&gt;&#xA;      );&#xA;    }&#xA;});&#xA;&#xA;React.renderComponent(&lt;LikeOrNot /&gt;, document.getElementById('main-content'));&#xA;&lt;/script&gt;&#xA;</code></pre>&#xA;&#xA;<p>Run this code from a single file and your it should work.</p>&#xA;
<p>in my case, i had failed to include the type attribute on my script tag.</p>&#xA;&#xA;<pre><code>&lt;script type="text/jsx"&gt;&#xA;</code></pre>&#xA;
<p>I solved it using <strong>type = "text/babel"</strong></p>&#xA;&#xA;<pre><code>&lt;script src="js/reactjs/main.js" type = "text/babel"&gt;&lt;/script&gt;&#xA;</code></pre>&#xA;
<p>The issue <strong>Unexpected token '&lt;'</strong> is because of missing the babel preset.</p>&#xA;&#xA;<p>Solution : You have to configure your webpack configuration as follows</p>&#xA;&#xA;<pre><code>          {&#xA;            test   :/\.jsx?$/,&#xA;            exclude:/(node_modules|bower_components)/,&#xA;            loader :'babel',&#xA;            query  :{&#xA;                presets:['react','es2015']&#xA;            }&#xA;        }&#xA;</code></pre>&#xA;&#xA;<p>here .jsx checks both .js and .jsx formats.</p>&#xA;&#xA;<p>you can simply install the babel dependency using node as follows</p>&#xA;&#xA;<pre><code>npm install babel-preset-react&#xA;</code></pre>&#xA;&#xA;<p>Thank you</p>&#xA;
<p>For correct tag parsing you'll need to use this babel version : <a href="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.24/browser.js" rel="nofollow">https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.24/browser.js</a>  and attribute "type='text/babel'" in the script. Besides, your custom script should be within   "body" tags.  </p>&#xA;
<p>You can use code like this:</p>&#xA;&#xA;<pre><code>import React from 'react';&#xA;import ReactDOM from 'react-dom';&#xA;&#xA;var LikeOrNot = React.createClass({&#xA;    displayName: 'Like',&#xA;    render: function () {&#xA;      return (&#xA;        React.createElement("li", null, "Like")&#xA;      );&#xA;    }&#xA;});&#xA;ReactDOM.render(&lt;LikeOrNot /&gt;, document.getElementById('main-content'));&#xA;</code></pre>&#xA;&#xA;<p>And don't forget add <code>&lt;div id='main-content'&gt;&lt;/div&gt;</code> into the <code>body</code> in your <code>html</code></p>&#xA;&#xA;<p>But in your package.json file you should use this dependencies:</p>&#xA;&#xA;<pre><code>  "dependencies": {&#xA;...&#xA;    "babel-core": "^6.18.2",&#xA;    "babel-preset-react": "^6.16.0",&#xA;...&#xA;}&#xA;"devDependencies": {&#xA;...   &#xA;    "babel": "^6.5.2",&#xA;    "babel-loader": "^6.2.7",&#xA;    "babel-preset-es2015": "^6.18.0",&#xA;    "jsx-loader": "^0.13.2",&#xA;...&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It's work for me but i used webpack also, with this options (into webpack.config.js):</p>&#xA;&#xA;<pre><code>  module: {&#xA;    loaders: [&#xA;      { &#xA;        test: /\.jsx?$/,         // Match both .js and .jsx files&#xA;        exclude: /node_modules/, &#xA;        loader: "babel-loader", &#xA;        query:&#xA;        {&#xA;          presets: ['es2015', 'react']&#xA;        }&#xA;      }&#xA;    ]&#xA;  }&#xA;</code></pre>&#xA;
<p>In my case, besides the <code>babel</code> presets, I also had to add this to my <code>.eslintrc</code>:</p>&#xA;&#xA;<pre><code>{&#xA;  "extends": "react-app",&#xA;  ...&#xA;}&#xA;</code></pre>&#xA;
<p>if we consider your real site configuration, than you need to run ReactJS in the head</p>&#xA;&#xA;<pre><code>&lt;!-- Babel ECMAScript 6 injunction --&gt;  &#xA;&lt;script src="https://unpkg.com/babel-standalone@6/babel.min.js"&gt;&lt;/script&gt;&#xA;</code></pre>&#xA;&#xA;<p>and add attribute to your js file - type="text/babel" like</p>&#xA;&#xA;<pre><code>&lt;script src="../js/r1HeadBabel.js" type="text/babel"&gt;&lt;/script&gt;&#xA;</code></pre>&#xA;&#xA;<p>then the below code example will work:</p>&#xA;&#xA;<pre><code>ReactDOM.render(&#xA;  &lt;h1&gt;Hello, world!&lt;/h1&gt;,&#xA;  document.getElementById('root')&#xA;); &#xA;</code></pre>&#xA;
<p>Use the following code. I have added reference to React and React DOM. Use ES6/Babel to transform you JS code into vanilla JavaScript. Note that Render method comes from ReactDOM and make sure that render method has a target specified in the DOM.&#xA;Sometimes you might face an issue that the render() method can't find the target element. This happens because the react code is executed before the DOM renders. To counter this use jQuery ready() to call the render() method of React. This way you will be sure about DOM being rendered first. You can also use defer attribute on your app script.</p>&#xA;&#xA;<p>HTML code:</p>&#xA;&#xA;<pre><code>&lt;!DOCTYPE html&gt;&#xA;&lt;html&gt;&#xA;&lt;head&gt;&#xA;&lt;meta charset=utf-8 /&gt;&#xA;&lt;title&gt;JS Bin&lt;/title&gt;&#xA;&lt;/head&gt;&#xA;&lt;body&gt;&#xA;  &lt;div id='main-content'&gt;&lt;/div&gt;&#xA;&lt;script src="CDN link to/react-15.1.0.js"&gt;&lt;/script&gt;&#xA;&lt;script src="CDN link to/react-dom-15.1.0.js"&gt;&lt;/script&gt;&#xA;&#xA;&lt;/body&gt;&#xA;&lt;/html&gt;&#xA;</code></pre>&#xA;&#xA;<p>JS code:</p>&#xA;&#xA;<pre><code>var LikeOrNot = React.createClass({&#xA;    render: function () {&#xA;      return (&#xA;        &lt;li&gt;Like&lt;/li&gt;&#xA;      );&#xA;    }&#xA;});&#xA;&#xA;ReactDOM.render(&lt;LikeOrNot /&gt;,&#xA;                document.getElementById('main-content'));&#xA;</code></pre>&#xA;&#xA;<p>Hope this solves your issue. :-)</p>&#xA;
<p>I have this error and could not solve this for two days.So the fix of error is very simple.&#xA;In body ,where you connect your <code>script</code>, add <code>type="text/jsx"</code> and this`ll resolve the problem.</p>&#xA;
<p>If you're like me and prone to silly mistakes, also check your package.json if it contains your babel preset:</p>&#xA;&#xA;<pre><code>  "babel": {&#xA;    "presets": [&#xA;      "env",&#xA;      "react",&#xA;      "stage-2"&#xA;    ]&#xA;  },&#xA;</code></pre>&#xA;