33851694
Nesting relationship with ElasticSearch
<p>I am trying to find revenue per actor in a movie. It is pretty straightforward, but here's an example of what I have now:</p>&#xA;&#xA;<pre><code>// without actor&#xA;{&#xA;    "ID": 1,&#xA;    "Timestamp": "2014-01-01 00:02:12",&#xA;    "Title": "Great White Shark",&#xA;    "Amount": 4.99&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It is not an issue if I have, for example, 100M entries in financials and I ask for the aggregate where the title=GreatWhiteShark.</p>&#xA;&#xA;<p>However, when I add in an Actor, the structure becomes extremely verbose, and probably increases my storage size by 10x --</p>&#xA;&#xA;<pre><code>{&#xA;    "ID": 1,&#xA;    "Timestamp": "2014-01-01 00:02:12",&#xA;    "Title": "Great White Shark",&#xA;    "Amount": 4.99,&#xA;    "Actors": [Christopher Plummer,Andrew Garfield,Heath Ledger,&#xA;               Lily Cole,Jude Law,Verne Troyer,Johnny Depp,&#xA;               Tom Waits,George MacKay,Tom Holland,Saoirse Ronan,&#xA;               Seymour Cassel,Sofia Milos]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is so I can ask a question such as "How much money did movies with Christopher Plummer make in 2011?".</p>&#xA;&#xA;<p>Is there a better way to do the above structure? My main concern is performance, and secondary would be storage size.</p>&#xA;
<p>Performance should be very good, Elasticsearch will build an inverted index for actors array anyway. Querying an actor will return all associated movies instantly.</p>&#xA;&#xA;<p>As for space reduction, you can try encoding each actor name to an integer id instead of actor slug. But you should try slug variant first as this does not destroy readability and integrations to Kibana, etc.</p>&#xA;&#xA;<p>Your proposed structure is perfectly suited for Elasticsearch by all means.</p>&#xA;