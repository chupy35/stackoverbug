30136051
Elasticsearch multi term search
<p>I am using Elasticsearch to allow a user to type in a term to search. I have the following property 'name' I'd like to search, for instance:</p>&#xA;&#xA;<p><code>'name': 'The car is black'</code></p>&#xA;&#xA;<p>I'd like to have this document returned if the following is used to search <code>black car</code> or <code>car black</code>.</p>&#xA;&#xA;<p>I've tried doing a bool must and doing multiple terms <code>['black', 'car']</code> but it seems like it only works if the entire string is a match.</p>&#xA;&#xA;<p>So what I'd really like to do is more of a, does the term contain both words in any order.</p>&#xA;&#xA;<p>Can someone please get me on the right track? I've been banging my head on this one for a while.</p>&#xA;
<p>If it seems like it only works if the entire string is a match, first make sure that in index mapping your string property <code>name</code> is analysed, i.e. mapping for this property <em>doesn't contain</em> <code>"index": "not_analyzed"</code>. If it isn't so, you'll need to reindex your index in order to be able to search for tokens rather than for the whole phrase only.</p>&#xA;&#xA;<p>Once you're sure your strings are analysed you can use:</p>&#xA;&#xA;<ol>&#xA;<li>Terms query with <code>"minimum_should_match"</code> parameter equalling to the number of words entered.</li>&#xA;<li>Bool query with must clause containing term queries per each word.</li>&#xA;<li><a href="http://www.elastic.co/guide/en/elasticsearch/reference/1.5/query-dsl-common-terms-query.html" rel="nofollow">Common terms query</a> which has a nice clean syntax for this purpose (you don't need to break down input string and construct more complex query structure in your app like with previous two) in addition to taking a smarter approach to stopwords analysing.</li>&#xA;</ol>&#xA;