29414730
How to use ElasticSearch to bucket historical data from midnight to now?
<p>So I have an index with timestamps in the following format:</p>&#xA;&#xA;<pre><code>2015-03-20T12:00:00+0500&#xA;</code></pre>&#xA;&#xA;<p>What I would like to do in the SQL equivalent is the following:</p>&#xA;&#xA;<pre><code>select date(timestamp), sum(orders)&#xA;from data&#xA;where time(timestamp) &lt; time(now)&#xA;group  by date(timestamp)&#xA;</code></pre>&#xA;&#xA;<p>I know I need an aggregation but, for now, I've tried a basic search query below but I'm getting a malformed error:</p>&#xA;&#xA;<pre><code>{&#xA;    "size": 0,&#xA;    "query":&#xA;    {&#xA;        "filtered":&#xA;        {&#xA;            "query":&#xA;            {&#xA;                "match_all" : {}&#xA;            },&#xA;            "filter":&#xA;            {&#xA;                "range":&#xA;                {&#xA;                   "@timestamp":&#xA;                   {&#xA;                     "from": "00:00:01.000",&#xA;                     "to": "15:00:00.000"&#xA;                   }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;
<p>You do indeed want an aggregation, specifically the <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-daterange-aggregation.html" rel="nofollow">date histogram</a> aggregation. Something like</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {"match_all": {}},&#xA;  "aggs": {&#xA;    "by_date": {&#xA;      "date_histogram": {&#xA;        "field": "timestamp",&#xA;        "interval": "day"&#xA;      },&#xA;      "aggs": {&#xA;        "order_sum": {&#xA;          "sum": {"field": "foo"}&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>First you have a bucketing aggregation that groups your documents by date, then inside that a metric aggregation that computes a value (in this case a sum) for each bucket</p>&#xA;&#xA;<p>which would return data of the form</p>&#xA;&#xA;<pre><code>{&#xA;   ...&#xA;&#xA;   "aggregations": {&#xA;      "by_date": {&#xA;         "buckets": [&#xA;            {&#xA;               "key_as_string": "2015-03-01T00:00:00.000Z",&#xA;               "key": 1425168000000,&#xA;               "doc_count": 8644,&#xA;               "order_sum": {&#xA;                 "value": 1234&#xA;               }&#xA;            },&#xA;            {&#xA;               "key_as_string": "2015-03-02T00:00:00.000Z",&#xA;               "key": 1425254400000,&#xA;               "doc_count": 8819,&#xA;               "order_sum": {&#xA;                 "value": 45678&#xA;               }&#xA;            }, &#xA;            ...&#xA;          ]&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>There is a good intro to aggregations on the elasticsearch blog (<a href="https://www.elastic.co/blog/intro-to-aggregations" rel="nofollow">part 1</a> and <a href="https://www.elastic.co/blog/intro-to-aggregations-pt-2-sub-aggregations" rel="nofollow">part 2</a>) if you want to do some more reading.</p>&#xA;