33855392
Elastic search versioning using last updated timestamp?
<p>Our data model doesn't have version field separately. One of the ways we versioned the data model is by the id and the last updated timestamp, the version will be incremented when a new record with same id but latest last updated timestamp is received. </p>&#xA;&#xA;<p>However in elastic search, there is no way to derive the value of _id field. Multi fields cannot applied to _id field.</p>&#xA;&#xA;<p>Our system is reactive and message driven, so can't rely on the order in which we receive the message.</p>&#xA;&#xA;<p>is there anyways we can solve versioning in a performant way?</p>&#xA;
<p>The _version field in elasticsearch is not for versioning. It's to ensure you are working on the expected document (e.g. you read a doc and decide to delete it, than it would be wise to add the version-number of the read doc to the delete command).</p>&#xA;&#xA;<p>You can set the _id field to "[your_id]_[timestamp]" and add two additional fields "my_id" and "timestamp".</p>&#xA;&#xA;<p>How to set the _id to "[your_id]_[timestamp]"? If you use logstash than you can use the mutate filter:</p>&#xA;&#xA;<pre><code>mutate { add_field =&gt; ["id", "%{your_id}", "_", "%{timestamp}"] }&#xA;</code></pre>&#xA;&#xA;<p>should work. If you don't use logstash, you have to create the id-field similar.</p>&#xA;