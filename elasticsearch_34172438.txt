34172438
python code fails to create correct mapping
<p>The following curl command works as expected. It returns the correct mapping but python code returns blank.</p>&#xA;&#xA;<pre><code>curl -X PUT localhost:9200/geotest/&#xA;curl -X PUT localhost:9200/geotest/geotest/_mapping -d '{&#xA;    "geotest": {&#xA;        "properties": {&#xA;            "location": {&#xA;                "type": "geo_point",&#xA;                "lat_lon": true,&#xA;                "geohash": true&#xA;            }&#xA;        }&#xA;    }&#xA;}'&#xA;&#xA;curl -XGET localhost:9200/geotest/_mapping&#xA;{"geotest":{"mappings":{"geotest":{"properties":{"location":{"type":"geo_point","lat_lon":true,"geohash":true}}}}}}&#xA;</code></pre>&#xA;&#xA;<p>I expect this python code to be same as above...</p>&#xA;&#xA;<pre><code>import elasticsearch&#xA;es = elasticsearch.Elasticsearch('http://some_site.com:9200/')&#xA;&#xA;mymapping={"geotest":{"properties":{"location":{"type":"geo_point","lat_lon":True,"geohash":True}}}}&#xA;&#xA;es.indices.delete(index = 'geotest')&#xA;es.indices.create(index = 'geotest', body = mymapping)&#xA;&#xA;curl -XGET localhost:9200/geotest/_mapping&#xA;{"geotest":{"mappings":{}}}&#xA;</code></pre>&#xA;&#xA;<p>Why does python code does not create correct mapping the way curl does?</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>Update:</p>&#xA;&#xA;<p>Using the put_mapping method I am not able to create wikipedia content index.</p>&#xA;&#xA;<pre><code>import urllib2&#xA;myfile=urllib2.urlopen('https://en.wikipedia.org/w/api.php?action=cirrus-mapping-dump&amp;format=json').read()&#xA;&#xA;import ast&#xA;myfile1=ast.literal_eval(myfile)['content']['page']['properties']&#xA;&#xA;import elasticsearch&#xA;es = elasticsearch.Elasticsearch('http://some_site.com:9200/')&#xA;&#xA;es.indices.delete(index ='enwiki_todel')&#xA;es.indices.create(index ='enwiki_todel')&#xA;es.indices.put_mapping(index ='enwiki_todel', doc_type='page', body = myfile1)&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<p>update 2</p>&#xA;&#xA;<p>I tried to keep only content using ast module. And still getting mapper parsing exception.</p>&#xA;&#xA;<pre><code>import urllib2&#xA;myfile=urllib2.urlopen('https://en.wikipedia.org/w/api.php?action=cirrus-mapping-dump&amp;format=json').read()&#xA;&#xA;import ast&#xA;myfile1=ast.literal_eval(myfile)['content']&#xA;&#xA;import elasticsearch&#xA;es = elasticsearch.Elasticsearch('http://ec2-52-91-179-95.compute-1.amazonaws.com:9200/')&#xA;&#xA;&#xA;es.indices.delete(index ='enwiki_todel')&#xA;es.indices.create(index ='enwiki_todel')&#xA;es.indices.put_mapping(index ='enwiki_todel', doc_type='page', body = myfile1)&#xA;</code></pre>&#xA;
<p>You're almost there. If you want to create an index with a mapping in one shot, you need to use the <code>"mappings": {}</code> structure in the body of your <code>create</code> index call. Like this:</p>&#xA;&#xA;<pre><code>import elasticsearch&#xA;es = elasticsearch.Elasticsearch('http://some_site.com:9200/')&#xA;&#xA;mymapping={"mappings": {"geotest":{"properties":{"location":{"type":"geo_point","lat_lon":True,"geohash":True}}}}}&#xA;              ^&#xA;              |&#xA; enclose your mapping in "mappings"&#xA;&#xA;es.indices.delete(index = 'geotest')&#xA;es.indices.create(index = 'geotest', body = mymapping)&#xA;</code></pre>&#xA;&#xA;<p>An alternate solution is to use <a href="https://elasticsearch-py.readthedocs.org/en/master/api.html#elasticsearch.client.IndicesClient.put_mapping" rel="nofollow">put_mapping</a> after the call to <code>create</code> and you'll be able to use the same structure you initially had, i.e. without the <code>"mappings: {}</code> structure.</p>&#xA;&#xA;<pre><code>import elasticsearch&#xA;es = elasticsearch.Elasticsearch('http://some_site.com:9200/')&#xA;&#xA;mymapping={"geotest":{"properties":{"location":{"type":"geo_point","lat_lon":True,"geohash":True}}}}&#xA;&#xA;es.indices.delete(index = 'geotest')&#xA;es.indices.create(index = 'geotest')&#xA;es.indices.put_mapping(index = 'geotest', body = mymapping)&#xA;</code></pre>&#xA;