32581978
Incorrect sum while aggregating in elasticsearch for one particular index
<p>I am currently trying to aggregate a field in Elasticsearch. When i am doing the same query for other indexes, it gives me the correct sum but for one it's exceedingly high and incorrect.</p>&#xA;&#xA;<p>Following is the Elasticsearch query:</p>&#xA;&#xA;<pre><code>{&#xA;    "size": 0,&#xA;    "query": {&#xA;        "filtered": {&#xA;            "query": {&#xA;                "query_string": {&#xA;                    "query": "*"&#xA;                }&#xA;            },&#xA;            "filter": {&#xA;                "and": [&#xA;            {&#xA;                "range": {&#xA;                    "start_timestamp": {&#xA;                        "from": start_date,&#xA;                        "to": end_date&#xA;                    }&#xA;                }&#xA;            },&#xA;            {&#xA;                "term": { "id" : ad_id }&#xA;            }&#xA;&#xA;                ]&#xA;            }&#xA;        }&#xA;    },&#xA;    "aggs": {&#xA;        "type1": {&#xA;            "terms": {&#xA;                "field": "type_a",&#xA;                "size": 0,&#xA;                "order": {&#xA;                    "revenue": "desc"&#xA;                }&#xA;            },&#xA;                "revenue": {&#xA;                    "sum": {&#xA;                        "field": "revenue"&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I tried checking by downloading all fields and summing them up in python and its giving me the correct number which leds me to believe that it might be related to my query? I checked the mapping for the field "revenue" and it's  "double". </p>&#xA;&#xA;<p>Is it some kind of overflow problem? </p>&#xA;&#xA;<p>Thanks!</p>&#xA;&#xA;<p><strong>Solution</strong> which worked for me : Post linked in the comments below</p>&#xA;
<p>So was able to find the answer to it on elasticsearch discussion forum. According to Elasticsearch developer this happens due to dynamic mapping.</p>&#xA;&#xA;<blockquote>&#xA;  <p>This happens only rarely (hence why you only see it on one of your&#xA;  indices) when two shards dynamically map the same field as different&#xA;  types at the same time (one shard may see a double value and map the&#xA;  field to a double whilst the other sees a long value and maps the&#xA;  field to a long). This is a known bug in 1.x and will be fixed in the&#xA;  upcoming 2.0 release (the beta for this release is available now but&#xA;  DO NOT use this in production). To work around this bug you will need&#xA;  to re-index your data into an index with explicit mappings for your&#xA;  fields (especially your numeric fields).</p>&#xA;</blockquote>&#xA;&#xA;<p>There is also a python module to reindex your mapping. I did it manually in my python</p>&#xA;&#xA;<p>Following is the link of python helper:</p>&#xA;&#xA;<p><a href="http://elasticsearch-py.readthedocs.org/en/latest/helpers.html" rel="nofollow">http://elasticsearch-py.readthedocs.org/en/latest/helpers.html</a></p>&#xA;