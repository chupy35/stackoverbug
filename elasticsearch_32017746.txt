32017746
Query Elastic Search where word indexed has space
<p>I recently tried to use Elastic search. However, I am struggling to query for the following scenario:&#xA;I have my index set up with this:</p>&#xA;&#xA;<pre><code>"analysis": {&#xA;    "index_analyzer": {&#xA;        "my_index_analyzer": {&#xA;            "type": "custom",&#xA;            "tokenizer": "standard",&#xA;            "filter": ["standard", "lowercase", "nGram"],&#xA;            "char-filter": ["my_pattern"]&#xA;        }&#xA;    },&#xA;    "search_analyzer": {&#xA;        "my_search_analyzer": {&#xA;            "type": "custom",&#xA;            "tokenizer": "standard",&#xA;            "filter": ["standard", "lowercase", "nGram"],&#xA;            "char-filter": ["my_pattern"]&#xA;        }&#xA;    },&#xA;    "filter": {&#xA;        "nGram": {&#xA;            "type": "nGram",&#xA;            "min_gram": 3,&#xA;            "max_gram": 40&#xA;        }&#xA;    },&#xA;    "char_filter" : {&#xA;        "my_pattern":{&#xA;            "type":"pattern_replace",&#xA;            "pattern":"\u0020",&#xA;            "replacement":""&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>And the documents that are indexed are :</p>&#xA;&#xA;<pre><code>{&#xA;   name:'My self'&#xA;},&#xA;{&#xA;   name:'Hell o'&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If I search for Myself, I am expecting it to return the first JSON object, however this is not happening..</p>&#xA;&#xA;<p>I am searching using this (where term is just the string being searched):</p>&#xA;&#xA;<pre><code>var query = {&#xA;            match: {&#xA;                location: term&#xA;&#xA;            }&#xA;        };&#xA;client.search({&#xA;            index: 'requests',&#xA;            analyzer:'my_search_analyzer',&#xA;            body: {&#xA;                query:query&#xA;            }&#xA;         })&#xA;</code></pre>&#xA;&#xA;<p>I would really appreciate some guidance on this!</p>&#xA;&#xA;<p>Kind Regards&#xA;JB</p>&#xA;
<p>You are almost there, your index definition only has some small issues and typos which we will fix:</p>&#xA;&#xA;<ol>&#xA;<li>You don't need <code>index_analyzer</code> and <code>search_analyzer</code> simply define <code>my_index_analyzer</code> and <code>my_search_analyzer</code> directly under the <code>analyzer</code> element.</li>&#xA;<li><code>char-filter</code> should read <code>char_filter</code> (with underscore)</li>&#xA;<li>your space pattern needs an additional backslash</li>&#xA;</ol>&#xA;&#xA;<p>This is the corrected settings/mappings that I used:</p>&#xA;&#xA;<pre><code>{&#xA;  "settings": {&#xA;    "analysis": {&#xA;      "analyzer": {&#xA;        "my_index_analyzer": {         &lt;--- 1. directly under analyzer&#xA;          "type": "custom",&#xA;          "tokenizer": "standard",&#xA;          "filter": [&#xA;            "standard",&#xA;            "lowercase",&#xA;            "nGram"&#xA;          ],&#xA;          "char_filter": [             &lt;--- 2. underscore&#xA;            "my_pattern"&#xA;          ]&#xA;        },&#xA;        "my_search_analyzer": {        &lt;--- 1. directly under analyzer&#xA;          "type": "custom",&#xA;          "tokenizer": "standard",&#xA;          "filter": [&#xA;            "standard",&#xA;            "lowercase",&#xA;            "nGram"&#xA;          ],&#xA;          "char_filter": [             &lt;--- 2. underscore&#xA;            "my_pattern"&#xA;          ]&#xA;        }&#xA;      },&#xA;      "filter": {&#xA;        "nGram": {&#xA;          "type": "nGram",&#xA;          "min_gram": 3,&#xA;          "max_gram": 40&#xA;        }&#xA;      },&#xA;      "char_filter": {&#xA;        "my_pattern": {&#xA;          "type": "pattern_replace",&#xA;          "pattern": "\\u0020",        &lt;--- 3. additional backslash&#xA;          "replacement": ""&#xA;        }&#xA;      }&#xA;    }&#xA;  },&#xA;  "mappings": {&#xA;    "request": {&#xA;      "properties": {&#xA;        "location": {&#xA;          "type": "string",&#xA;          "index_analyzer": "my_index_analyzer"&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then you can index your two sample documents:</p>&#xA;&#xA;<pre><code>curl -XPUT localhost:9200/requests/request/1 -d '{"location":"My self"}'&#xA;curl -XPUT localhost:9200/requests/request/2 -d '{"location":"Hell o"}'&#xA;</code></pre>&#xA;&#xA;<p>And you'll get what you expect:</p>&#xA;&#xA;<pre><code>curl -XPOST localhost:9200/requests/request/_search -d '{&#xA;  "query": {&#xA;    "match": {&#xA;      "location": "Myself"&#xA;    }&#xA;  }&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>will return the document with <code>My self</code></p>&#xA;