33789479
How to setup Elasticsearch client nodes?
<p>I have couple of Elasticsearch questions regarding client node:</p>&#xA;&#xA;<ol>&#xA;<li><p>Can I say: any nodes as long as they are opening HTTP port, I can treat them as "client" nodes, because we can do search/index through this node.</p></li>&#xA;<li><p>Actually we treat the node as client node when the <code>cluster=false</code> and <code>data=false</code>, if I set up 10 client nodes, do I need to route in my client side, I mean if I specify <em>clientOne:9200</em> in my code as ES portal, then would <em>clientOne</em> forward other HTTP requests to other client nodes, otherwise, <em>clientOne</em> would be under very high pressure. i.e do they communicate with each other between client nodes?</p></li>&#xA;<li><p>When I specify client nodes in ES cluster, should I close other nodes' HTTP port? Because we can only query client nodes.</p></li>&#xA;<li><p>Do you think it's necessary to set up both data node and client node in the same machine, or just setup data node acts as client node as well, anyways it's  in the same machine?</p></li>&#xA;<li><p>If the ES cluster would be heavily/frequently indexed while less searched, then I don't have to set up client node, because client node good for gathering data, right please?</p></li>&#xA;<li><p>For general search/index purpose should I use http port or tcp port, what's the difference in clients perspective please?</p></li>&#xA;</ol>&#xA;
<ol>&#xA;<li><p>Yes, you can send queries via http to any node that has port 9200 open.</p></li>&#xA;<li><p>With node.data: false and node.master: false, you get a "<a href="https://www.elastic.co/guide/en/elasticsearch/reference/1.4/modules-node.html" rel="noreferrer">client node</a>".  These are useful for offloading indexing and search traffic from your data nodes.  If you have 10 of them, you would want to put a load balancer in front of them.</p></li>&#xA;<li><p>Closing the data node's http port (http.enabled: false) would keep them from serving client requests (probably good), though it would also prevent you from curl'ing them directly for stats, etc.</p></li>&#xA;<li><p>Client nodes are useful (see #2), so I wouldn't route traffic directly to your data nodes.  Whether you run both a client and data node on the same piece of hardware would be dependent on the config of that machine (do you have sufficient RAM, etc).</p></li>&#xA;<li><p>Client node are also useful for indexing, because they know which data node should receive the data for storage.  If you sent an indexing request to a random data node instead, the odds would be high that it would have to redirect that request to another node.  That's a waste of time and resources, if you can create client nodes.</p></li>&#xA;<li><p>Having your clients join the cluster might give them access to more information about the cluster, but using http gives them a more generic "black box" interface.  With http, you also don't have to keep your clients at the same version as your ES nodes.</p></li>&#xA;</ol>&#xA;&#xA;<p>Hope that helps.</p>&#xA;