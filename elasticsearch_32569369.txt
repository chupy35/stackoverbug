32569369
Elasticsearch how to remove leading zeros from string
<p>I am trying to remove leading zeros from data inserted into Elasticsearch, but the data needs to be handled as string and not as number. For example, "<em>1234</em>", "<em>01234</em>" and "<em>01234test</em>" should all be handled. In this example, searching for "1234" should return 2 results.How can I achieve this? Is there a <em>filter</em> or <em>char_filter</em> I can use in the following mapping script?</p>&#xA;&#xA;<pre><code>{  &#xA;   "settings":{  &#xA;      "analysis":{  &#xA;         "analyzer":{&#xA;            "diacritical":{  &#xA;               "type":"custom",&#xA;               "tokenizer":"standard",&#xA;               "filter":[  &#xA;                  "standard",&#xA;                  "lowercase",&#xA;                  "asciifolding",&#xA;                  "nfd_normalizer"&#xA;               ]&#xA;            }&#xA;         },&#xA;         "filter":{  &#xA;            "nfd_normalizer":{  &#xA;               "type":"icu_normalizer",&#xA;               "name":"nfc"&#xA;            }&#xA;         }&#xA;      }&#xA;   },&#xA;   "mappings":{  &#xA;      "testType":{  &#xA;         "_timestamp":{  &#xA;            "enabled":"true",&#xA;            "store":"yes"&#xA;         },&#xA;         "properties":{  &#xA;            "mynumber":{  &#xA;               "store":"yes",&#xA;               "type":"string",&#xA;               "index":"analyzed",&#xA;               "analyzer":"diacritical"&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;
<p>one approach would be to construct a <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-pattern_replace-tokenfilter.html" rel="nofollow">pattern replace filter</a> which works on the tokens from standard tokenizer.</p>&#xA;&#xA;<p>Something on these lines should work for the example in OP:</p>&#xA;&#xA;<pre><code>"leading_zero_trim":{&#xA;    "type":"pattern_replace",&#xA;    "pattern":"^0+(.*)",&#xA;    "replacement":"$1"&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Example Settings:</p>&#xA;&#xA;<pre><code>{&#xA;   "settings": {&#xA;      "analysis": {&#xA;         "analyzer": {&#xA;            "diacritical": {&#xA;               "type": "custom",&#xA;               "tokenizer": "standard",&#xA;               "filter": [&#xA;                  "standard",&#xA;                  "lowercase",&#xA;                  "asciifolding",&#xA;                  "nfd_normalizer",&#xA;                  "leading_zero_trim",&#xA;                  "trim_zero_length"&#xA;               ]&#xA;            }&#xA;         },&#xA;         "filter": {&#xA;            "nfd_normalizer": {&#xA;               "type": "icu_normalizer",&#xA;               "name": "nfc"&#xA;            },&#xA;            "leading_zero_trim": {&#xA;               "type": "pattern_replace",&#xA;               "pattern": "^0+(.*)",&#xA;               "replacement": "$1"&#xA;            },&#xA;            "trim_zero_length": {&#xA;               "type": "length",&#xA;               "min": 1&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Test Analyzer:</p>&#xA;&#xA;<pre><code>get &lt;index_name&gt;/_analyze?analyzer=diacritical&amp;text=hello omarta 01234 12340 123404 0001 000 0123test&#xA;</code></pre>&#xA;