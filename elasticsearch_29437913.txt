29437913
Setting codec/searching Elasticsearch for unicode values from Python
<p>This issue is probably due to my noobishness to ELK, Python, and Unicode.</p>&#xA;&#xA;<p>I have an index containing logstash-digested logs, including a field 'host_req', which contains a host name. Using Elasticsearch-py, I'm pulling that host name out of the record, and using it to search in another index.&#xA;However, if the hostname contains multibyte characters, it fails with a UnicodeDecodeError. Exactly the same query works fine when I enter it from the command line with 'curl -XGET'. The unicode character is a lowercase 'a' with a diaeresis (two dots). The UTF-8 value is C3 A4, and the unicode code point seems to be 00E4 (the language is Swedish).</p>&#xA;&#xA;<p>These curl commands work just fine from the command line:</p>&#xA;&#xA;<pre><code> curl -XGET 'http://localhost:9200/logstash-2015.01.30/logs/_search?pretty=1' -d ' { "query" : {"match" :{"req_host" : "www.utkl\u00E4dningskl\u00E4derna.se" }}}'&#xA; curl -XGET 'http://localhost:9200/logstash-2015.01.30/logs/_search?pretty=1' -d ' { "query" : {"match" :{"req_host" : "www.utklädningskläderna.se" }}}'&#xA;</code></pre>&#xA;&#xA;<p>They find and return the record</p>&#xA;&#xA;<p>(the second line shows how the hostname appears in the log I pull it from, showing the lowercase 'a' with a diaersis, in two places)</p>&#xA;&#xA;<p>I've written a very short Python script to show the problem: It uses hardwired queries, printing them and their type, then trying to use them&#xA;in a search.</p>&#xA;&#xA;<pre><code> #!/usr/bin/python&#xA; # -*- coding: utf-8 -*-&#xA;&#xA; import json&#xA; import elasticsearch&#xA;&#xA; es = elasticsearch.Elasticsearch()&#xA;&#xA; if __name__=="__main__":&#xA;   #uq = u'{ "query": { "match": { "req_host": "www.utklädningskläderna.se" }}}'           # raw utf-8 characters. does not work&#xA;   #uq = u'{ "query": { "match": { "req_host": "www.utkl\u00E4dningskl\u00E4derna.se" }}}' # quoted unicode characters. does not work&#xA;   #uq = u'{ "query": { "match": { "req_host": "www.utkl\uC3A4dningskl\uC3A4derna.se" }}}' # quoted utf-8 characters. does not work&#xA;   uq = u'{ "query": { "match": { "req_host": "www.facebook.com" }}}'                     # non-unicode. works fine&#xA;   print "uq", type(uq), uq&#xA;   result = es.search(index="logstash-2015.01.30",doc_type="logs",timeout=1000,body=uq);&#xA;   if result["hits"]["total"] == 0:&#xA;     print "nothing found"&#xA;   else:&#xA;     print "found some"&#xA;</code></pre>&#xA;&#xA;<p>If I run it as shown, with the 'facebook' query, it's fine - the output is:</p>&#xA;&#xA;<pre><code>$python testutf8b.py&#xA;uq &lt;type 'unicode'&gt; { "query": { "match": { "req_host": "www.facebook.com" }}}&#xA;found some&#xA;</code></pre>&#xA;&#xA;<p>Note that the query string 'uq' is unicode.</p>&#xA;&#xA;<p>But if I use  the other three strings, which include the Unicode characters, it blows up. For example, with the second line, I get:</p>&#xA;&#xA;<pre><code>$python testutf8b.py&#xA;uq &lt;type 'unicode'&gt; { "query": { "match": { "req_host": "www.utklädningskläderna.se" }}}&#xA;Traceback (most recent call last):&#xA;   File "testutf8b.py", line 15, in &lt;module&gt;&#xA;    result = es.search(index="logstash-2015.01.30",doc_type="logs",timeout=1000,body=uq);&#xA;  File "build/bdist.linux-x86_64/egg/elasticsearch/client/utils.py", line 68, in _wrapped&#xA;  File "build/bdist.linux-x86_64/egg/elasticsearch/client/__init__.py", line 497, in search&#xA;  File "build/bdist.linux-x86_64/egg/elasticsearch/transport.py", line 307, in perform_request&#xA;  File "build/bdist.linux-x86_64/egg/elasticsearch/connection/http_urllib3.py", line 82, in perform_request&#xA;elasticsearch.exceptions.ConnectionError: ConnectionError('ascii' codec can't decode byte 0xc3 in position 45: ordinal not in range(128)) caused by: UnicodeDecodeError('ascii' codec can't decode byte 0xc3 in position 45: ordinal not in range(128))&#xA;$&#xA;</code></pre>&#xA;&#xA;<p>Again, note that the query string is a unicode string (yes, the source code line is the one with the <code>\u00E4</code> characters).</p>&#xA;&#xA;<p>I'd really like to resolve this. I've tried various combinations of <code>uq = uq.encode("utf=8")</code> and <code>uq = uq.decode("utf=8")</code>, but it doesn't seem to help. I'm starting to wonder if there's an issue in the <code>elasticsearch-py</code> library.</p>&#xA;&#xA;<p>thanks!</p>&#xA;&#xA;<p>pt</p>&#xA;&#xA;<p>PS: This is under Centos 7, using ES 1.5.0. The logs were digested into ES under a slightly older version, using logstash-1.4.2</p>&#xA;
<p>Basically, you dont need to pass <code>body</code> as string. Use native python datastructures. Or transform them on the fly. Give a try, pls:</p>&#xA;&#xA;<pre><code>&gt;&gt;&gt; import elasticsearch&#xA;&gt;&gt;&gt; es = elasticsearch.Elasticsearch()&#xA;&gt;&gt;&gt; es.index(index='unicode-index', body={'host': u'www.utklädningskläderna.se'}, doc_type='log')&#xA;&#xA;{u'_id': u'AUyGJuFMy0qdfghJ6KwJ',&#xA; u'_index': u'unicode-index',&#xA; u'_type': u'log',&#xA; u'_version': 1,&#xA; u'created': True}&#xA;&#xA;&gt;&gt;&gt; es.search(index='unicode-index', body={}, doc_type='log')&#xA;&#xA;{u'_shards': {u'failed': 0, u'successful': 5, u'total': 5},&#xA; u'hits': {u'hits': [{u'_id': u'AUyBTz5CsiBSSvubLioQ',&#xA;    u'_index': u'unicode-index',&#xA;    u'_score': 1.0,&#xA;    u'_source': {u'host': u'www.utkl\xe4dningskl\xe4derna.se'},&#xA;    u'_type': u'log'}],&#xA;  u'max_score': 1.0,&#xA;  u'total': 1},&#xA; u'timed_out': False,&#xA; u'took': 5}&#xA;&#xA;&gt;&gt;&gt; es.search(index='unicode-index', body={'query': {'match': {'host': u'www.utklädningskläderna.se'}}}, doc_type='log')&#xA;&#xA;{u'_shards': {u'failed': 0, u'successful': 5, u'total': 5},&#xA; u'hits': {u'hits': [{u'_id': u'AUyBTz5CsiBSSvubLioQ',&#xA;    u'_index': u'unicode-index',&#xA;    u'_score': 0.30685282,&#xA;    u'_source': {u'host': u'www.utkl\xe4dningskl\xe4derna.se'},&#xA;    u'_type': u'log'}],&#xA;  u'max_score': 0.30685282,&#xA;  u'total': 1},&#xA; u'timed_out': False,&#xA; u'took': 122}&#xA;&#xA;&gt;&gt;&gt; import json&#xA;&#xA;&gt;&gt;&gt; body={'query': {'match': {'host': u'www.utklädningskläderna.se'}}}&#xA;&#xA;&gt;&gt;&gt; es.search(index='unicode-index', body=body, doc_type='log')&#xA;&#xA;{u'_shards': {u'failed': 0, u'successful': 5, u'total': 5},&#xA; u'hits': {u'hits': [{u'_id': u'AUyBTz5CsiBSSvubLioQ',&#xA;    u'_index': u'unicode-index',&#xA;    u'_score': 0.30685282,&#xA;    u'_source': {u'host': u'www.utkl\xe4dningskl\xe4derna.se'},&#xA;    u'_type': u'log'}],&#xA;  u'max_score': 0.30685282,&#xA;  u'total': 1},&#xA; u'timed_out': False,&#xA; u'took': 4}&#xA;&#xA;&gt;&gt;&gt; es.search(index='unicode-index', body=json.dumps(body), doc_type='log')&#xA;&#xA;{u'_shards': {u'failed': 0, u'successful': 5, u'total': 5},&#xA; u'hits': {u'hits': [{u'_id': u'AUyBTz5CsiBSSvubLioQ',&#xA;    u'_index': u'unicode-index',&#xA;    u'_score': 0.30685282,&#xA;    u'_source': {u'host': u'www.utkl\xe4dningskl\xe4derna.se'},&#xA;    u'_type': u'log'}],&#xA;  u'max_score': 0.30685282,&#xA;  u'total': 1},&#xA; u'timed_out': False,&#xA; u'took': 5}&#xA;&#xA;&gt;&gt;&gt; json.dumps(body)&#xA;'{"query": {"match": {"host": "www.utkl\\u00e4dningskl\\u00e4derna.se"}}}'&#xA;</code></pre>&#xA;