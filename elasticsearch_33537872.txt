33537872
minimum_number_should_match with nested must bool
<p>I have some documents in elasticsearch that have a list of key-value pairs. Here are some examples.</p>&#xA;&#xA;<pre><code>document 1:&#xA;{&#xA;    data: [&#xA;        {&#xA;            key: key1,&#xA;            value: value1&#xA;        },&#xA;        {&#xA;            key: key1,&#xA;            value: value2&#xA;        },&#xA;    ]&#xA;}&#xA;&#xA;document 2:&#xA;{&#xA;    data: [&#xA;        {&#xA;            key: key2,&#xA;            value: blah&#xA;        },&#xA;        {&#xA;            key: key1,&#xA;            value: value2&#xA;        },&#xA;    ]&#xA;}&#xA;&#xA;document 3:&#xA;{&#xA;    data: [&#xA;        {&#xA;            key: key1,&#xA;            value: value3&#xA;        },&#xA;        {&#xA;            key: key1,&#xA;            value: value2&#xA;        },&#xA;        {&#xA;            key: key1,&#xA;            value: somevalue&#xA;        }&#xA;    ]&#xA;}&#xA;&#xA;document 4:&#xA;{&#xA;    data: [&#xA;        {&#xA;            key: key3,&#xA;            value: blah&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now I want all document that have <strong>at least 2</strong> of the values <code>[value1, value2, value3]</code> with key <code>key1</code>.&#xA;So from the example, I need documents <strong>1 and 3</strong> but <strong>not 2 or 4</strong>.</p>&#xA;&#xA;<p>So far my query looks like this:</p>&#xA;&#xA;<pre><code>"query": {&#xA;    "nested": {&#xA;        "path": "data",&#xA;        "query": {&#xA;            "bool": {&#xA;                "should": [&#xA;                    {&#xA;                        "bool": {&#xA;                            "must": [&#xA;                                {&#xA;                                    "term": {&#xA;                                        "key": key1&#xA;                                    }&#xA;                                },&#xA;                                {&#xA;                                    "term": {&#xA;                                        "value": {&#xA;                                            "value": "value1",&#xA;                                        }&#xA;                                    }&#xA;                                }&#xA;                            ]&#xA;                        }&#xA;                    },&#xA;                    {&#xA;                        "bool": {&#xA;                            "must": [&#xA;                                {&#xA;                                    "term": {&#xA;                                        "key": key1&#xA;                                    }&#xA;                                },&#xA;                                {&#xA;                                    "term": {&#xA;                                        "value": {&#xA;                                            "value": "value2",&#xA;                                        }&#xA;                                    }&#xA;                                }&#xA;                            ]&#xA;                        }&#xA;                    },&#xA;                    {&#xA;                        "bool": {&#xA;                            "must": [&#xA;                                {&#xA;                                    "term": {&#xA;                                        "key": key1&#xA;                                    }&#xA;                                },&#xA;                                {&#xA;                                    "term": {&#xA;                                        "value": {&#xA;                                            "value": "value3",&#xA;                                        }&#xA;                                    }&#xA;                                }&#xA;                            ]&#xA;                        }&#xA;                    }&#xA;                ],&#xA;                "minimum_number_should_match": 2&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But it doesn't return any matches at all. &#xA;From what I understand, <code>minimum_number_should_match</code> just ensures that a document will only be returned if it matches at least the given minimum <code>should</code> occurences in the <code>bool query</code>.</p>&#xA;&#xA;<ul>&#xA;<li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-minimum-should-match.html" rel="nofollow">Minimum Should Match Documentation</a></li>&#xA;<li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-minimum-should-match.html" rel="nofollow">Bool Query Documentation</a></li>&#xA;</ul>&#xA;&#xA;<p>But it seems like I don't fully understand how it works.&#xA;How exactly do I get <code>minimum_number_should_match</code> to work with a nested bool query, or is there another way to do this?</p>&#xA;
<p>This query should work for you. The only place where I doubt it will go wrong is to use keyword "value" as a field. You can try that. Here is the query:</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "nested": {&#xA;      "path": "data",&#xA;      "query": {&#xA;        "bool": {&#xA;          "must": [&#xA;            {&#xA;              "term": {&#xA;                "key": {&#xA;                  "value": "key1"&#xA;                }&#xA;              }&#xA;            }&#xA;          ],"should": [&#xA;            {&#xA;              "term": {&#xA;                "value": {&#xA;                  "value": "value1"&#xA;                }&#xA;              }&#xA;            },{&#xA;              "term": {&#xA;                "value": {&#xA;                  "value": "value2"&#xA;                }&#xA;              }&#xA;            },{&#xA;              "term": {&#xA;                "value": {&#xA;                  "value": "value3"&#xA;                }&#xA;              }&#xA;            },{&#xA;              "term": {&#xA;                "value": {&#xA;                  "value": "value4"&#xA;                }&#xA;              }&#xA;            }&#xA;          ],"minimum_number_should_match": 2&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>As to how minimum_number_should_match works, you are right. It tries to match the minimum possible queries which come under "should" part of bool query.</p>&#xA;
<p>The problem was that the nested query goes into each <code>data</code> object and looks at a single <em>key, value</em> pair. &#xA;Thus it's impossible for it to match on more than one value (each <em>key, value</em> pair only has one value).</p>&#xA;&#xA;<p>I had to split each value match into it's own nested query:</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "bool": {&#xA;      "should": [&#xA;        {&#xA;          "nested": {&#xA;            "path": "data",&#xA;            "query": {&#xA;              "bool": {&#xA;                "must": [&#xA;                  {&#xA;                    "term": {&#xA;                      "key": "key1"&#xA;                    }&#xA;                  },&#xA;                  {&#xA;                    "term": {&#xA;                      "value": {&#xA;                        "value": "value1"&#xA;                      }&#xA;                    }&#xA;                  }&#xA;                ]&#xA;              }&#xA;            }&#xA;          }&#xA;        },&#xA;        {&#xA;          "nested": {&#xA;            "path": "data",&#xA;            "query": {&#xA;              "bool": {&#xA;                "must": [&#xA;                  {&#xA;                    "term": {&#xA;                      "key": "key1"&#xA;                    }&#xA;                  },&#xA;                  {&#xA;                    "term": {&#xA;                      "value": {&#xA;                        "value": "value2"&#xA;                      }&#xA;                    }&#xA;                  }&#xA;                ]&#xA;              }&#xA;            }&#xA;          }&#xA;        },&#xA;        {&#xA;          "nested": {&#xA;            "path": "data",&#xA;            "bool": {&#xA;              "must": [&#xA;                {&#xA;                  "term": {&#xA;                    "key": "key1"&#xA;                  }&#xA;                },&#xA;                {&#xA;                  "term": {&#xA;                    "value": {&#xA;                      "value": "value3"&#xA;                    }&#xA;                  }&#xA;                }&#xA;              ]&#xA;            }&#xA;          }&#xA;        }&#xA;      ],&#xA;      "minimum_should_match": 2&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This means the query can match on multiple of the <code>data</code> fields, and if 2 of the should queries match, then the document matches the entire query.</p>&#xA;