33130753
_mget and _search differences on ElasticSearch
<p>I've indexed 2 documents:</p>&#xA;&#xA;<p>As you can see, after having indexed those ones, I can see them in a search result:</p>&#xA;&#xA;<pre><code>[root@centos7 ~]# curl 'http://ESNode01:9201/living/fuas/_search?pretty'&#xA;{&#xA;  "took" : 20,&#xA;  "timed_out" : false,&#xA;  "_shards" : {&#xA;    "total" : 5,&#xA;    "successful" : 5,&#xA;    "failed" : 0&#xA;  },&#xA;  "hits" : {&#xA;    "total" : 2,     &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&#xA;    "max_score" : 1.0,&#xA;    "hits" : [ {&#xA;      "_index" : "living",&#xA;      "_type" : "fuas",&#xA;      "_id" : "idFuaMerge1",   &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&#xA;      "_score" : 1.0,&#xA;      "_source":{"timestamp":"2015-10-14T16:13:49.004Z","matter":"null","comment":"null","status":"open","backlogStatus":"unknown","metainfos":[],"resources":[{"resourceId":"idResourceMerge1","noteId":"null"},{"resourceId":"idResourceMerge2","noteId":null}]}&#xA;    }, {&#xA;      "_index" : "living",&#xA;      "_type" : "fuas",&#xA;      "_id" : "idFuaMerge2",      &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&#xA;      "_score" : 1.0,&#xA;      "_source":{"timestamp":"2015-10-14T16:13:49.004Z","matter":"null","comment":"null","status":"open","backlogStatus":"unknown","metainfos":[],"resources":[{"resourceId":"idResourceMerge3","noteId":null}]}&#xA;    } ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>After that, I perform a multiget request setting the document ids:</p>&#xA;&#xA;<pre><code>[root@centos7 ~]# curl 'http://ESNode01:9201/living/fuas/_mget?pretty' -d '&#xA;{&#xA;  "ids": ["idFuaMerge1", "idFuaMerge2"]&#xA;}&#xA;'&#xA;{&#xA;  "docs" : [ {&#xA;    "_index" : "living",&#xA;    "_type" : "fuas",&#xA;    "_id" : "idFuaMerge1",&#xA;    "found" : false        &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;!!!!!!!!!!!!!!&#xA;  }, {&#xA;    "_index" : "living",&#xA;    "_type" : "fuas",&#xA;    "_id" : "idFuaMerge2",&#xA;    "_version" : 4,&#xA;    "found" : true,          &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;!!!!!!!!!!!!!!!!!&#xA;    "_source":{"timestamp":"2015-10-14T16:13:49.004Z","matter":"null","comment":"null","status":"open","backlogStatus":"unknown","metainfos":[],"resources":[{"resourceId":"idResourceMerge3","noteId":null}]}&#xA;  } ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How on earth, on a multiget request, the first document is <strong>NOT</strong> found and the other one does?</p>&#xA;
<p>This can only happen if you have used routing key to index your document. Or even parent child relation can also imply the same.</p>&#xA;&#xA;<p>When a document is given for indexing , that document is mapped to a unique shard using the mechanism of routing. In this mechanism the docID is converted to a hash and modulas operation of that hash is taken to determine to which shard the document should go. &#xA;So in short </p>&#xA;&#xA;<p>for documentA by default the shard might be 1. Default shard is computed based on routing key.</p>&#xA;&#xA;<p>But then because you applied the routing key yourself , this document is mapped to a different shard , tell 0.</p>&#xA;&#xA;<p>Now when you try to get the document without the routing key , it expects the document to be in shard 1 and not shard 0 and hence your multi get fails as it directly looks in shard 1 to get the document.</p>&#xA;&#xA;<p>The search works because search operation happens across all shards/</p>&#xA;