32504094
elastic search, dealing with many sub aggs who can be null
<p>I need to query elastic to get aggs with sub aggs.</p>&#xA;&#xA;<p>My working* query :</p>&#xA;&#xA;<pre><code>  {&#xA;    "_source" : false,&#xA;    "size" : 0,&#xA;    "aggs" : {&#xA;        "level1" : {&#xA;            "terms" : {&#xA;                "field" : "level1",&#xA;                "size" : 10&#xA;            },&#xA;            "aggs" : {&#xA;                "level2" : {&#xA;                    "terms" : {&#xA;                        "field" : "level2",&#xA;                        "size" : 10&#xA;                    },&#xA;                    "aggs" : {&#xA;                        "level3" : {&#xA;                            "terms" : {&#xA;                                "field" : "level3",&#xA;                                "size" : 10&#xA;                            },&#xA;                            "aggs" : {&#xA;                                "level4" : {&#xA;                                    "terms" : {&#xA;                                        "field" : "level4"",&#xA;                                        "size" : 10&#xA;                                    }&#xA;                                }&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>This work perfectly where each "levelX" is filled in elastic.&#xA;BUT sometimes the value of a "levelX" can be null ( data not informed yet for example) but the sub level are not null and i need to get them all, but elastic return aggs only when "levelX" is not null. </p>&#xA;&#xA;<p>Example of data injected in elastic : </p>&#xA;&#xA;<pre><code>  [&#xA;    { "level1" : "level1" ,  "level2" : null , "level3" : "level3" , "level4" : "level4 a" },&#xA;    { "level1" : "level1" ,  "level2" : null , "level3" : "level3" , "level4" : "level4 b" } &#xA; ]&#xA;</code></pre>&#xA;&#xA;<p>What i want :</p>&#xA;&#xA;<pre><code>"aggregations": {&#xA;    "level1": {&#xA;        "buckets": [&#xA;            {&#xA;                "key": "level1",&#xA;                "doc_count": 2,&#xA;                "level2": {&#xA;                    "buckets": [&#xA;                        {&#xA;                            "key": "", // "" or null or anythink&#xA;                            "doc_count": 2,&#xA;                            "level3": {&#xA;                                "buckets": [&#xA;                                    {&#xA;                                        "key": "level3",&#xA;                                        "doc_count": 2,&#xA;                                        "level4": {&#xA;                                            "buckets": [&#xA;                                               {  "key": "level4 a", "doc_count": 1 },&#xA;                                               {  "key": "level4 a", "doc_count": 1 }&#xA;                                            ]&#xA;                                        }&#xA;                                    }&#xA;]}}]}}]}}&#xA;</code></pre>&#xA;&#xA;<p>What i get : </p>&#xA;&#xA;<pre><code>"aggregations": {&#xA;    "level1": {&#xA;        "buckets": [&#xA;            {&#xA;                "key": "level1",&#xA;                "doc_count": 2,&#xA;                "level2": {&#xA;                    "buckets": []&#xA;}}]}}]}}&#xA;</code></pre>&#xA;&#xA;<p>How can i do that or what is the type of this kind of query ?</p>&#xA;&#xA;<p>EDIT 1 : the "missing" option is maybe what i need but i can have up to 10 sub levels, putting it in all the levels or making a "missing_levelX" is maybe not the best solution</p>&#xA;
<p>In your mapping, you could specify the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-core-types.html#string" rel="nofollow"><code>null_value</code> property</a> for your <code>string</code> fields.</p>&#xA;&#xA;<pre><code>{&#xA;  "your_type": {&#xA;    "properties": {&#xA;      "level1": {&#xA;        "type": "string",&#xA;        "index": "not_analyzed",&#xA;        "null_value": "&lt;null&gt;",            &lt;--- pick whatever makes sense for you&#xA;      },&#xA;      ...&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If you don't specify <code>null_value</code> and your field has a null value, ES will ignore the field, whereas if you specify <code>null_value</code> it will store the specified value instead.</p>&#xA;