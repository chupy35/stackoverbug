29415284
Querying lists in Elasticsearch
<p>I have a collection of documents in Elasticsearch.  Each document has a "categories" field, which is an ordered list, from most general to most specific, of the names of the categories that this document is in.  The category hierarchy is a taxonomy (each category has only one parent) but names of the categories overlap.  The full category chain, from the root, is the only sure way to identify the category that a document is in.</p>&#xA;&#xA;<p>For example, one document could have a categories field:</p>&#xA;&#xA;<pre><code>["Science", "Biology", "Journal"]&#xA;</code></pre>&#xA;&#xA;<p>And another could have:</p>&#xA;&#xA;<pre><code>["Science", "Astronomy", "Journal"]&#xA;</code></pre>&#xA;&#xA;<p>The questions:</p>&#xA;&#xA;<p>1) How can I aggregate documents into their unique categories?  I have the "categories" field mapped as not-analyzed, but still, a simple term aggregation will group both of the documents above together in the "Journal" bucket. Is there a way to aggregate by position in a list, or aggregate only terms in a particular position in a list?</p>&#xA;&#xA;<p>2) Given a unique category, as identified by its path, how do I filter documents in the category?  Is there a way to filter according to position in list?</p>&#xA;
<p>No you can't. See <a href="http://www.elastic.co/guide/en/elasticsearch/guide/current/complex-core-fields.html#_multivalue_fields" rel="nofollow">multivalue fields</a></p>&#xA;&#xA;<blockquote>&#xA;  <p>However, arrays are indexed—made searchable—as multivalue fields, which are unordered. At search time, you can’t refer to “the first element” or “the last element.” Rather, think of an array as a bag of values.</p>&#xA;</blockquote>&#xA;&#xA;<p>What you can do, is using nested objects, or more simple just write the path down in one field, and index it analyzed and not analyzed.</p>&#xA;&#xA;<pre><code>{"categories":"Science Biology Journal"}&#xA;</code></pre>&#xA;&#xA;<p>Now you can search on it using a range of filters and queries. For example:</p>&#xA;&#xA;<ul>&#xA;<li>Term (not analyzed): if you want the exact path</li>&#xA;<li>String Query: if you want one or more categories</li>&#xA;<li>...</li>&#xA;</ul>&#xA;