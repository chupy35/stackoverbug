24776540
ReactJS fails with an error "Cannot read property 'map' of undefined`"
<p>Following react.js tutorial I've got an error: <code>Uncaught TypeError: Cannot read property 'map' of undefined</code>. </p>&#xA;&#xA;<p>I was following <a href="http://reactjs.net/getting-started/tutorial.html">the tutorial</a> strict but stuck at <strong>Fetching from the server</strong> part. The error appears when I feed commentBox with url data instead of the hardcoded JSON data.</p>&#xA;&#xA;<pre><code>/** @jsx React.DOM */&#xA;&#xA;var converter = new Showdown.converter();&#xA;&#xA;var data = [&#xA;  { Author: "Daniel Lo Nigro", Text: "Hello ReactJS.NET World!" },&#xA;  { Author: "Pete Hunt", Text: "This is one comment" },&#xA;  { Author: "Jordan Walke", Text: "This is *another* comment" }&#xA;];&#xA;&#xA;var Comment = React.createClass({&#xA;  render: function() {&#xA;  var rawMarkup = converter.makeHtml(this.props.children.toString());&#xA;    return (&#xA;      &lt;div className="comment"&gt;&#xA;        &lt;h2 className="commentAuthor"&gt;&#xA;          {this.props.author}&#xA;        &lt;/h2&gt;&#xA;        &lt;span dangerouslySetInnerHTML={{__html: rawMarkup}} /&gt;&#xA;      &lt;/div&gt;&#xA;    );&#xA;  }&#xA;});&#xA;&#xA;var CommentList = React.createClass({&#xA;  render: function() {&#xA;&#xA;    var commentNodes = this.props.data.map(function (comment) {&#xA;      return &lt;Comment author={comment.Author}&gt;{comment.Text}&lt;/Comment&gt;;&#xA;    });&#xA;&#xA;    return (&#xA;      &lt;div className="commentList"&gt;&#xA;        {commentNodes}&#xA;      &lt;/div&gt;&#xA;    );&#xA;  }&#xA;});&#xA;&#xA;var CommentForm = React.createClass({&#xA;  render: function() {&#xA;    return (&#xA;      &lt;div className="commentForm"&gt;&#xA;        Hello, world! I am a CommentForm.&#xA;      &lt;/div&gt;&#xA;    );&#xA;  }&#xA;});&#xA;&#xA;var CommentBox = React.createClass({&#xA;  render: function() {&#xA;    return (&#xA;      &lt;div className="commentBox"&gt;&#xA;        &lt;h1&gt;Comments&lt;/h1&gt;&#xA;&#xA;        &lt;CommentList data={this.props.data} /&gt;&#xA;&#xA;        &lt;CommentForm /&gt;&#xA;      &lt;/div&gt;&#xA;    );&#xA;  }&#xA;});&#xA;&#xA;React.renderComponent(&#xA;  //&lt;CommentBox data={data}/&gt;,            //this works fine&#xA;  &lt;CommentBox url="/comments" /&gt;,         //Changing data feet to url produces an error&#xA;  document.getElementById('content')&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>The request at <code>http://localhost:52581/comments</code> is working and returns a JSON data:</p>&#xA;&#xA;<pre><code>[{"Author":"Daniel Lo Nigro","Text":"Hello ReactJS.NET World!"},{"Author":"Pete Hunt","Text":"This is one comment"},{"Author":"Jordan Walke","Text":"This is *another* comment"}]&#xA;</code></pre>&#xA;&#xA;<p>Any advice would be a big help for me. Thanks.</p>&#xA;
<p>This one works.</p>&#xA;&#xA;<pre><code>/** @jsx React.DOM */&#xA;&#xA;var converter = new Showdown.converter();&#xA;&#xA;var data = [&#xA;  { Author: "Daniel Lo Nigro 2", Text: "Hello ReactJS.NET World! 2" },&#xA;  { Author: "Pete Hunt 2", Text: "This is one comment 2" },&#xA;  { Author: "Jordan Walke 2", Text: "This is *another* comment 2" }&#xA;];&#xA;&#xA;var Comment = React.createClass({&#xA;  render: function() {&#xA;  var rawMarkup = converter.makeHtml(this.props.children.toString());&#xA;    return (&#xA;      &lt;div className="comment"&gt;&#xA;        &lt;h2 className="commentAuthor"&gt;&#xA;          {this.props.author}&#xA;        &lt;/h2&gt;&#xA;        &lt;span dangerouslySetInnerHTML={{__html: rawMarkup}} /&gt;&#xA;      &lt;/div&gt;&#xA;    );&#xA;  }&#xA;});&#xA;&#xA;var CommentList = React.createClass({&#xA;  render: function() {&#xA;&#xA;    var commentNodes = this.props.data.map(function (comment) {&#xA;      return &lt;Comment author={comment.Author}&gt;{comment.Text}&lt;/Comment&gt;;&#xA;    });&#xA;&#xA;    return (&#xA;      &lt;div className="commentList"&gt;&#xA;        {commentNodes}&#xA;      &lt;/div&gt;&#xA;    );&#xA;  }&#xA;});&#xA;&#xA;var CommentForm = React.createClass({&#xA;  render: function() {&#xA;    return (&#xA;      &lt;div className="commentForm"&gt;&#xA;        Hello, world! I am a CommentForm.&#xA;      &lt;/div&gt;&#xA;    );&#xA;  }&#xA;});&#xA;&#xA;var CommentBox = React.createClass({&#xA;  getInitialState: function() {&#xA;    return {data: []};&#xA;  },&#xA;  componentWillMount: function() {&#xA;    var xhr = new XMLHttpRequest();&#xA;    xhr.open('get', this.props.url, true);&#xA;    xhr.onload = function() {&#xA;      var data = JSON.parse(xhr.responseText);&#xA;      this.setState({ data: data });&#xA;    }.bind(this);&#xA;    xhr.send();&#xA;  },&#xA;  render: function() {&#xA;    return (&#xA;      &lt;div className="commentBox"&gt;&#xA;        &lt;h1&gt;Comments&lt;/h1&gt;&#xA;&#xA;        &lt;CommentList data={this.state.data} /&gt;&#xA;&#xA;        &lt;CommentForm /&gt;&#xA;      &lt;/div&gt;&#xA;    );&#xA;  }&#xA;});&#xA;&#xA;React.renderComponent(&#xA;  //&lt;CommentBox data={data}/&gt;,&#xA;  &lt;CommentBox url="/comments" /&gt;,&#xA;  document.getElementById('content')&#xA;);&#xA;</code></pre>&#xA;
<p>In CommentBox, this line is the problem: <code>&lt;CommentList data={this.props.data} /&gt;</code></p>&#xA;&#xA;<p>You no longer have <code>props.data</code> since you are passing a URL in instead of a JS object.</p>&#xA;&#xA;<p>Your 2nd one works because you use state and default the value to an empty array, which can still have map run on it.</p>&#xA;
<p>This error can also happen because you're trying to embed a react component as if it was a rendered result, and not a component itself.</p>&#xA;&#xA;<p>e.g.</p>&#xA;&#xA;<pre><code>var SampleClass = React.createClass({&#xA;...&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>and later on you try and use it like so</p>&#xA;&#xA;<pre><code>&lt;div&gt;&#xA;  {SampleClass}&#xA;&lt;/div&gt;&#xA;</code></pre>&#xA;&#xA;<p>when in fact, you should be doing something like this</p>&#xA;&#xA;<pre><code>&lt;div&gt;&#xA;  &lt;SampleClass/&gt;&#xA;&lt;/div&gt;&#xA;</code></pre>&#xA;&#xA;<p>I was getting a similar error, "Cannot read property 'ref' of undefined", and this was the issue.</p>&#xA;
<p>I also had this exact problem - the tutorial doesn't make it clear at this point, but I don't think the app is actually supposed to be properly loading the data at this point. If you continue working through the tutorial it has you build an ajax call using this.props.url which loads the data. Just FYI for anyone else who might be confused, just keep pressing on, all is good!</p>&#xA;