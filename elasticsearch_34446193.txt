34446193
can terms lookup mechanism query be nested
<p>I want to know can I nest a terms lookup mechanism query in anther terms lookup mechanism.&#xA;For instance:</p>&#xA;&#xA;<pre><code>curl -XPUT localhost:9200/users/user/2 -d '{&#xA;   "tweets" : ["1", "3"]&#xA;}'&#xA;&#xA;curl -XPUT localhost:9200/tweets/tweet/1 -d '{&#xA;   "uuid" : "1",&#xA;   "comments":["1","2","3"]&#xA;}'&#xA;&#xA;curl -XPUT localhost:9200/comments/comment/1 -d '{&#xA;   "uuid" : "1"&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>As you know, we can use a terms lookup mechanism query to get tweets which belong to the user:</p>&#xA;&#xA;<pre><code>curl -XGET localhost:9200/tweets/tweet/_search -d'{&#xA;  "query" : {&#xA;    "terms" : {&#xA;      "uuid" : {&#xA;        "index" : "users",&#xA;        "type" : "user",&#xA;        "id" : "2",&#xA;        "path" : "tweets"&#xA;      }&#xA;    }&#xA;  }&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>But if i want to get comments, i must do anther query. &#xA;However my documents is so many, it is not a good method.&#xA;So i want to nest terms lookup query in order to get comments in only one query by user's id, can i?&#xA;I will so appreciate it, if you can give me some help. Thank you! :)</p>&#xA;
<p>At the moment, this is not possible as far as I know, because you expect data from three different indices to be returned in one query, which would equate to a JOIN. The terms lookup query sort of implements JOINs between two indices "only" (which is already quite cool considering the fact that ES does not want to support JOINs in the first place).</p>&#xA;&#xA;<p>One way out of this would be to refactor your data model to get rid of the <code>comments</code> index and use either parent/child and/or nested relationships within the <code>tweet</code> mapping type. Since a comment can only belong to a single tweet and there aren't usually hundreds of comments on a tweet (I'm pretty confortable with the idea that 99% of the time there are less than half a dozen comments per tweet, if any at all), you could add comments either as a <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-parent-field.html#_parent_child_restrictions?q=child" rel="nofollow">child documents</a> or as a <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/nested.html" rel="nofollow">nested document</a> (my preference), instead of just storing their ids in the <code>comments</code> array. That way you'd get your comments right away with your existing query, without the need for a second query.</p>&#xA;&#xA;<pre><code>curl -XPUT localhost:9200/tweets/tweet/1 -d '{&#xA;   "uuid" : "1",&#xA;   "comments":[{&#xA;      "id": 1,&#xA;      "content": "Nice tweet!"&#xA;   },{&#xA;      "id": 2,&#xA;      "content": "Way to go!"&#xA;   },{&#xA;      "id": 3,&#xA;      "content": "Sucks!"&#xA;   }]&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>Or you can wait for <a href="https://github.com/elastic/elasticsearch/pull/3278" rel="nofollow">this pull request (#3278)</a> (Terms Lookup by Query/Filter (aka. Join Filter)) to be merged, which will effectively allow to do what you're asking for, but that PR has been created more than 2 years ago and there still are conflicts to be resolved.</p>&#xA;