24923004
react.js component: can't get keyDown events if component inside another one
<p>JS Bin <a href="http://jsbin.com/wozut/1/watch?html,js,console,output" rel="nofollow">Available here</a></p>&#xA;&#xA;<p>I have a component called ComponentB for which I want to get key down events:</p>&#xA;&#xA;<pre><code>var ComponentB = React.createClass({&#xA;&#xA;  render: function() {&#xA;    return (&#xA;       &lt;div &#xA;           contentEditable &#xA;           onKeyDown={this.handleKeyDown}&gt;{this.props.data}&lt;/div&gt;&#xA;    );&#xA;  },&#xA;  handleKeyDown: function(e) {&#xA;     console.log("B: " + e.type +"-" + e.which);&#xA;  }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>I can get those events if this ComponentB is directly under the main/App component.</p>&#xA;&#xA;<p>If I try to embed this component inside another component (componentA) I don't receive those events anymore (<code>this.props.lines</code> is an array of 3 strings) :</p>&#xA;&#xA;<pre><code>var ComponentA = React.createClass({&#xA;    render: function(){&#xA;        return (&#xA;          &lt;div&#xA;            contentEditable&gt;&#xA;            { &#xA;              this.props.lines.map(function(line,i) {&#xA;                return &lt;ComponentB key={i} data={line} /&gt;  &#xA;              })&#xA;            }             &#xA;          &lt;/div&gt;&#xA;          );&#xA;    }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>The associated <a href="http://jsbin.com/wozut/1/watch?html,js,console,output" rel="nofollow">JS BIN</a> shows this behavior : if you try to edit the lines in the component A section. no event will be emitted but they will if you edit the sinbgle instance of componentB below...</p>&#xA;&#xA;<p>Looks to me like a bug in react.js but wanted to check here first.</p>&#xA;
<p>As <strong>@ssorallen</strong> said in a comment, you can't have nested contentEditable elements, with or without react.</p>&#xA;&#xA;<blockquote>&#xA;  <blockquote>&#xA;    <p>It seems to be a problem with nested contentEditable elements. Remove contentEditable from ComponentA, and it works as you expect.</p>&#xA;  </blockquote>&#xA;</blockquote>&#xA;&#xA;<p>One of the reasons this doesn't work, is because React doesn't <em>really</em> support contentEditable.  Basically it sets the attribute, but it can't sensibly render into the contentEditable because when it tries to update it... the DOM has changed without its knowledge (which throws an error).  </p>&#xA;&#xA;<p>Rather you should treat contentEditable elements like an input element, which doesn't have children.  Instead you update the innerHTML (see renderComponentToString and dangerouslySetInnerHTML) and listen to onInput events to get changes.  See <a href="https://stackoverflow.com/a/22678516/1074592">Stack Overflow: onChange event for contentEditable</a> for details on how this works.</p>&#xA;&#xA;<p>A proper handling of contentEditable has been <a href="https://github.com/facebook/react/issues/1466" rel="nofollow noreferrer">discussed briefly</a>, but no solution was arrived at.  Feel free to suggest good ways to handle it.</p>&#xA;