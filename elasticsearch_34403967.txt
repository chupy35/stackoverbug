34403967
elasticsearch 2.1.1 - cannot establish cluster
<p>I am having a problem with ES 2.1.1 where every node that I start up, starts as master and I cannot establish an actual cluster. Basically, I end up with 3 clusters of one node each, instead of one 3-node cluster. This is not an issue if I start up ES 1.4.2 with the same configuration files.</p>&#xA;&#xA;<p>Thinking I was suffering a split-brain problem, I started up 3 nodes, and even had </p>&#xA;&#xA;<pre><code>discovery.zen.minimum_master_nodes: 2&#xA;</code></pre>&#xA;&#xA;<p>in my config, but it did not make a difference. None of the nodes are aware of any other nodes and no master is ever elected. It does wait for other nodes and doesn't elect itself as master, but it never discovers any other nodes joining in. I'm assuming the pings aren't being sent out at all.</p>&#xA;&#xA;<p>Every node has the same config file, with "node.name" being unique to each node and it all works just fine on ES 1.4.2. Not sure what to do to get it working on ES 2.1.1.</p>&#xA;&#xA;<p>The full config file looks like this:</p>&#xA;&#xA;<pre><code>cluster.name: my_test_cluster&#xA;node.name: "my_node1" (diff for each node)&#xA;discovery.zen.ping.timeout: 30s&#xA;network.host: _non_loopback:ipv4_&#xA;discovery.zen.minimum_master_nodes: 2&#xA;discovery.zen.ping.multicast.enabled: true&#xA;</code></pre>&#xA;&#xA;<p>(The last two lines added as an attempt to eliminate split-brain as one of the reasons this wasn't working.)</p>&#xA;&#xA;<p>The logs don't show anything wrong other than a "MasterNotDiscoveredException[waited for [30s]]" when I execute a CURL query to check the status/health of the cluster. Which is expected.</p>&#xA;&#xA;<p>Anyone have any thoughts on why the difference in behavior between the two and how to get 2.1.1. working?</p>&#xA;&#xA;<p>As per suggestion below i have included an entry for node.host in the config files, but the behavior has not changed.</p>&#xA;
<p>You also need to set <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-network.html" rel="nofollow"><code>network.host</code> for each node</a> starting with Elasticsearch 2.0.</p>&#xA;&#xA;<p>I would suggest using either <code>_non_loopback:ipv4_</code> or <code>_non_loopback:ipv6_</code>. If you're running in AWS, then <a href="https://www.elastic.co/guide/en/elasticsearch/plugins/2.1/cloud-aws-discovery.html#cloud-aws-discovery-network-host" rel="nofollow">the <code>discovery-ec2</code> plugin has separate options that are specific to that environment</a>.</p>&#xA;&#xA;<p>Without setting this, it defaults to only using <code>_local_</code>, which (as the documentation notes) sets it to loopback addresses such as <code>127.0.0.1</code>, <code>::1</code>.</p>&#xA;&#xA;<p>Based on your comment, it looks like the nodes are on a different machine, so you also need to specify the list of hosts (a subset of them anyway, but for 3 it's okay to specify all of them):</p>&#xA;&#xA;<pre><code>discovery.zen.ping.unicast.hosts: ["host1", "host2"]&#xA;</code></pre>&#xA;&#xA;<p>Starting with ES 2.x, multicast is disabled by default, so it will no longer discover other nodes on the network.</p>&#xA;