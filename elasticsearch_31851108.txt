31851108
Terms filter doesn't works with bool query
<p>I have mapped on elasticsearch a type called <code>measure</code>, which contains both <code>variableName</code> and <code>sensorId</code> as string.</p>&#xA;&#xA;<p>Mapping.</p>&#xA;&#xA;<pre><code>{&#xA;    "measures": {&#xA;        "mappings": {&#xA;            "summarizedmeasure": {&#xA;                "properties": {&#xA;                    "id": {&#xA;                        "type": "long"&#xA;                    },&#xA;                    "location": {&#xA;                        "type": "boolean"&#xA;                    },&#xA;                    "rawValue": {&#xA;                        "type": "string"&#xA;                    },&#xA;                    "sensorId": {&#xA;                        "type": "string"&#xA;                    },&#xA;                    "summaryTimeUnit": {&#xA;                        "type": "string"&#xA;                    },&#xA;                    "timestamp": {&#xA;                        "type": "date",&#xA;                        "format": "dateOptionalTime"&#xA;                    },&#xA;                    "value": {&#xA;                        "type": "string"&#xA;                    },&#xA;                    "variableName": {&#xA;                        "type": "string"&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When I execute this query it works properly and return all measures for all sensors whose <code>variableName</code> is <code>FORWARD_FLOW</code>.</p>&#xA;&#xA;<pre><code>{&#xA;  "query" : { &#xA;     "bool": {&#xA;        "must": {&#xA;           "match": { "variableName":  "FORWARD_FLOW" }&#xA;        }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Query result.</p>&#xA;&#xA;<pre><code>{&#xA;    "took": 8,&#xA;    "timed_out": false,&#xA;    "_shards": {&#xA;        "total": 5,&#xA;        "successful": 5,&#xA;        "failed": 0&#xA;    },&#xA;    "hits": {&#xA;        "total": 294409,&#xA;        "max_score": 1.0059962,&#xA;        "hits": [&#xA;            {&#xA;                "_index": "measures",&#xA;                "_type": "summarizedmeasure",&#xA;                "_id": "AU4fKBWcMpd7AZtvgiuS",&#xA;                "_score": 1.0059962,&#xA;                "_source": {&#xA;                    "id": null,&#xA;                    "sensorId": "13LA062753",&#xA;                    "variableName": "FORWARD_FLOW",&#xA;                    "rawValue": "0.01",&#xA;                    "value": "0.01",&#xA;                    "timestamp": 1434060000000,&#xA;                    "summaryTimeUnit": "DAYS"&#xA;                }&#xA;            },&#xA;            {&#xA;                "_index": "measures",&#xA;                "_type": "summarizedmeasure",&#xA;                "_id": "AU4fKAtqMpd7AZtvgitp",&#xA;                "_score": 1.0059962,&#xA;                "_source": {&#xA;                    "id": null,&#xA;                    "sensorId": "13LA062744",&#xA;                    "variableName": "FORWARD_FLOW",&#xA;                    "rawValue": "0.44",&#xA;                    "value": "0.44",&#xA;                    "timestamp": 1433973600000,&#xA;                    "summaryTimeUnit": "DAYS"&#xA;                }&#xA;            }.....&#xA;</code></pre>&#xA;&#xA;<p>However, when I use <code>terms</code> filter to search only for measures which pertains to specific sensors, it returns no measures. </p>&#xA;&#xA;<pre><code>{&#xA;   "query":{            &#xA;     "filtered":{&#xA;        "query" : { &#xA;          "bool": {&#xA;            "must": {&#xA;               "match": { "variableName":  "FORWARD_FLOW" }&#xA;            }&#xA;          }&#xA;        }, &#xA;        "filter": {"terms":{ "sensorId":["13LA062753","14VD021810"]}}&#xA;      }        &#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>What am I doing wrong?</p>&#xA;&#xA;<p>Thanks you.</p>&#xA;
<p>You need to set the <code>sensorId</code> <code>"index": "not_analyzed"</code> like this:</p>&#xA;&#xA;<pre><code>"sensorId": {&#xA;    "type": "string",&#xA;    "index": "not_analyzed"&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This value defaults to <code>analyzed</code> and term filters do exact check (the terms are not being ran through an analyzer).</p>&#xA;&#xA;<p>Please refer to <a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/_finding_exact_values.html" rel="nofollow">finding exact values</a> for a fuller description why you need to do this.</p>&#xA;&#xA;<p>Either this or you can change the analyzer or lowercase your terms. The problem is that that field is being processed by the default analyzer which lowercases the values. That's why this query would work with your mapping:</p>&#xA;&#xA;<pre><code>{&#xA;   "query":{            &#xA;     "filtered":{&#xA;        "query" : { &#xA;          "bool": {&#xA;            "must": {&#xA;               "match": { "variableName":  "FORWARD_FLOW" }&#xA;            }&#xA;          }&#xA;        }, &#xA;        "filter": {"terms":{ "sensorId":["13la062753","14vd021810"]}}&#xA;      }        &#xA;   }&#xA;}&#xA;</code></pre>&#xA;