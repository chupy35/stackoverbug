30837818
ElasticSearch - Configuration to Analyse a document on Indexing
<p>In a single request, I want to retrieve documents from a SOR, store them in ElasticSearch, and then search those documents using the ES search API.</p>&#xA;&#xA;<p>There seems to be some lag from the time the document is indexed and the time it is analyzed and ready to be searched.</p>&#xA;&#xA;<p>Is there any way to configure ES to not return from the request to index a document until the analyzer has analyzed it and so that it can immediately be searched?</p>&#xA;
<p>Elasticsearch is <a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/near-real-time.html" rel="nofollow">"near real-time"</a> by nature, i.e. all indices are refreshed every second (by default). While it may seem enough in a majority of cases, it might not, such as in your case.</p>&#xA;&#xA;<p>If you need your documents to be available immediately, you need to <a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/near-real-time.html#refresh-api" rel="nofollow">refresh your indices</a> explicitly by calling</p>&#xA;&#xA;<pre><code>POST /_refresh&#xA;</code></pre>&#xA;&#xA;<p>or if you only want to refresh one index</p>&#xA;&#xA;<pre><code>POST /my_index/_refresh&#xA;</code></pre>&#xA;&#xA;<p>The refresh needs to happen after the indexing call returned and before the search call is sent off. </p>&#xA;&#xA;<p>Note that doing this on every document indexing will hurt the performance of your system. It might be better to make your application aware of the near real-time nature of ES and handle this on the client-side.</p>&#xA;
<p>The refresh API, as suggested in the accepted answer, is heavy in nature and you may not want to call this API after every index operation, if you are going to do a significant number of indexing operations. </p>&#xA;&#xA;<p>What happens under the hood is that the translog maintained by elasticsearch is written to the in memory segment which elasticsearch maintains. This operations is best left to the discretion of elasticsearch, however, there are some configuration parameters you can play around with. </p>&#xA;&#xA;<p>There is an alternative approach you can take, it may or may not suit your specific use case, but here it goes. </p>&#xA;&#xA;<p>Query the index/_stats/refresh api and retrieve the status of refresh from there, index your document and then keep performing the same stats query again. If the version has increased since your indexing time, it means you are good for searching your document.</p>&#xA;&#xA;<pre><code>https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-stats.html&#xA;</code></pre>&#xA;