33699552
Upgrade Elasticsearch 1.4.1 to 2.0 same config fails
<p>I upgraded and copied my old config dir to the new version. I don't care about the old indexes so started fresh. The only things I had changed from default config were the host ip and cluster name.</p>&#xA;&#xA;<pre><code>network.host: 127.0.0.1&#xA;cluster.name: elasticsearch_pat&#xA;</code></pre>&#xA;&#xA;<p>I was running a single node on my dev machine with a custom cluster name so I'd have no conflict. Now when I launch ES I get continuous cluster/nodes/info error which throw a java.lang.IllegalStateException.</p>&#xA;&#xA;<pre><code>[2015-11-13 10:13:59,347][WARN ][transport.netty          ] [Entropic Man] exception caught on transport layer [[id: 0x6c3170dc, /127.0.0.1:61104 =&gt; /127.0.0.1:9300]], closing connection&#xA;java.lang.IllegalStateException: Message not fully read (request) for requestId [109], action [cluster/nodes/info], readerIndex [39] vs expected [57]; resetting&#xA;    at org.elasticsearch.transport.netty.MessageChannelHandler.messageReceived(MessageChannelHandler.java:120)&#xA;    at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)&#xA;    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)&#xA;    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)&#xA;    at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)&#xA;    at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:462)&#xA;    at org.jboss.netty.handler.codec.frame.FrameDecoder.callDecode(FrameDecoder.java:443)&#xA;    at org.jboss.netty.handler.codec.frame.FrameDecoder.messageReceived(FrameDecoder.java:303)&#xA;    at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)&#xA;    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)&#xA;    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)&#xA;    at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:75)&#xA;    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)&#xA;    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)&#xA;    at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)&#xA;    at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)&#xA;    at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)&#xA;    at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)&#xA;    at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)&#xA;    at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)&#xA;    at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)&#xA;    at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)&#xA;    at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)&#xA;    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)&#xA;    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)&#xA;    at java.lang.Thread.run(Thread.java:745)&#xA;</code></pre>&#xA;&#xA;<p>When I check _health with Sense, it is green with one node and one data node, which is correct since I'm running on a dev machine on localhost.</p>&#xA;&#xA;<p>Does Elasticsearch now require authentication? Is this extremely simple config now somehow not sufficient?</p>&#xA;&#xA;<p><strong>Update:</strong> This error is coming because another process is trying to access Elasticsearch. When I stop the other process the error stops. The process may be using JDBC or some other driver that was provided before in 1.4.1 and is removed from the binary artifact in 2.0?????</p>&#xA;
<p>@Val is correct. When I did a upgrade from 1.7.3 to 2.0, there were still other client nodes connecting to this cluster. That was exact error log produced.</p>&#xA;&#xA;<p>For me it seems that you're running your application(looking at your port in localhost) , which still uses old elasticsearch API version and creates a 1.4.1 version client node and it conflicts with upgraded node, that's why you're getting error. </p>&#xA;