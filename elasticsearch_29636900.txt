29636900
If I store a date in elastic search using a timestamp (e.g. 1428956853627), can I still query that record by day, without the time value?
<p>For example, if I have a mapping with a date field like:</p>&#xA;&#xA;<pre><code>$ curl -XGET http://localhost:9200/testing/blog/_mapping&#xA;{"testing":{&#xA;  "mappings":{&#xA;    "blog":{&#xA;      "properties":{&#xA;         "posted":{&#xA;           "type":"date",&#xA;           "format":"dateOptionalTime"&#xA;         }, &#xA;         "title":{&#xA;           "type":"string"&#xA;         }&#xA;       }&#xA;     }&#xA;   }&#xA; }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and I then insert a record like:</p>&#xA;&#xA;<pre><code>$ curl -XPUT http://localhost:9200/testing/blog/1 -d &#xA;'{"title": "Elastic search", "posted": 1428956853627}'&#xA;{"_index":"testing","_type":"blog","_id":"1","_version":1,"created":true}&#xA;</code></pre>&#xA;&#xA;<p>using the timestamp corresponding to Mon Apr 13 15:27:33 CDT 2015, is there some way to query that back out by "plain old" date?  For instance, if I want to see posts that were posted on 4/13/15, I try:</p>&#xA;&#xA;<pre><code>$ curl -XGET http://localhost:9200/testing/blog/_search?pretty -d &#xA;'{"query":{"filtered": {"filter": {"term": {"posted": "2015-04-13"}}}}}'&#xA;</code></pre>&#xA;&#xA;<p>and get back no hits:</p>&#xA;&#xA;<pre><code>{&#xA;  "took" : 1,&#xA;  "timed_out" : false,&#xA;  "_shards" : {&#xA;    "total" : 5,&#xA;    "successful" : 5,&#xA;    "failed" : 0&#xA;  },&#xA;  "hits" : {&#xA;    "total" : 0,&#xA;    "max_score" : null,&#xA;    "hits" : [ ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Even if I <em>do</em> include the timestamp in the query, I still don't get back my record:</p>&#xA;&#xA;<pre><code>$ curl -XGET http://localhost:9200/testing/blog/_search?pretty -d &#xA;'{"query": {"filtered": {"filter": {"term": {"posted": "2015-04-13T15:27:33"}}}}}'&#xA;</code></pre>&#xA;&#xA;<p>I thought that at least, since the mapping declared "posted" as a date, I could retrieve it by range via:</p>&#xA;&#xA;<pre><code>$ curl -XGET http://localhost:9200/testing/blog/_search?pretty -d &#xA;'{"query": {"filtered": {"filter": {"range": {"posted": {"gt": "2014-04-13", "lt": "2014-04-15"}}}}}}'&#xA;</code></pre>&#xA;&#xA;<p>But even that doesn't work.  The only way I can seem to query back the entry by date is by using the exact same timestamp (long) value that I originally passed in:</p>&#xA;&#xA;<pre><code>$ curl -XGET http://localhost:9200/testing/blog/_search?pretty -d &#xA;'{"query": {"filtered": {"filter": {"term": {"posted": 1428956853627}}}}}'&#xA;</code></pre>&#xA;&#xA;<p>But that's not really that useful... do I have to convert all of my dates to strings before inserting them into elastic search?  Ideally I'd like to be able to save with higher fidelity, including the times in case I need them, but still search for 2014-04-13.  Can elasticsearch do that?</p>&#xA;
<p>The date range query is the way to go with.</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "filtered": {&#xA;      "filter": {&#xA;        "range": {&#xA;          "posted": {&#xA;            "gt": "2015-04-13",&#xA;            "lt": "2015-04-15"&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The date you provided is from year 2015 and not 2014 as you have done in your query. That is why the range query is not working.&#xA;Also ES is accepting this time format only because its been covered under the formats specified under dateOptionalTime.&#xA;Do check it if you need to see usable formats here.&#xA;If you need other formats to be accepted , you need to mention the additional ones in the mappings.</p>&#xA;