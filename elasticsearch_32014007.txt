32014007
Elasticsearch Service Running but Status "Not Running"
<p>I'm running Elasticsearch 1.4.4 on Ubuntu. When I attempt to start Elasticsearch as a service then check its status via <code>service elasticsearch status</code>, it appears that the service is "not running". However, when I check the cluster and various running processes, Elasticsearch appears to be up and running:</p>&#xA;&#xA;<pre><code>root     13353 36.7  1.9 3241608 315276 pts/1  Sl   10:30   0:09 /usr/bin/java -Xms256m -Xmx1g -Xss256k -Djava.awt.headless=true -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+HeapDumpOnOutOfMemoryError -XX:+DisableExplicitGC -Dfile.encoding=UTF-8 -Delasticsearch -Des.pidfile=-Des.config=/elasticsearch/config/elasticsearch.yml -Des.path.home=/elasticsearch -cp :/elasticsearch/lib/elasticsearch.jar:/elasticsearch/lib/*:/elasticsearch/lib/sigar/* -Des.path.home=/elasticsearch -Des.path.logs=/elasticsearch/logs -Des.path.data=/elasticsearch/data -Des.path.work= org.elasticsearch.bootstrap.Elasticsearch&#xA;</code></pre>&#xA;&#xA;<p>My init.d looks like this:</p>&#xA;&#xA;<pre><code>    PATH=/sbin:/usr/sbin:/bin:/usr/bin:/elasticsearch/bin&#xA;    DESC="Elasticsearch"&#xA;    NAME=elasticsearch&#xA;    ES_HOME=/elasticsearch&#xA;    ES_MIN_MEM=256m&#xA;    ES_MAX_MEM=2g&#xA;    DAEMON=$ES_HOME/bin/$NAME&#xA;    LOG_DIR=$ES_HOME/logs&#xA;    DATA_DIR=$ES_HOME/data&#xA;    CONFIG_FILE=$ES_HOME/config/elasticsearch.yml&#xA;    PIDFILE=/var/run/$NAME.pid&#xA;    SCRIPTNAME=/etc/init.d/$NAME&#xA;    DAEMON_ARGS="-p $PID_FILE -Des.config=$CONFIG_FILE -Des.path.home=$ES_HOME -Des.path.logs=$LOG_DIR -Des.path.data=$DATA_DIR -Des.path.work=$WORK_DIR -d"&#xA;&#xA;    # Exit if the package is not installed&#xA;    [ -x "$DAEMON" ] || exit 0&#xA;&#xA;    # Read configuration variable file if it is present&#xA;    [ -r /etc/default/$NAME ] &amp;&amp; . /etc/default/$NAME&#xA;&#xA;    # Load the VERBOSE setting and other rcS variables&#xA;    . /lib/init/vars.sh&#xA;&#xA;    # Define LSB log_* functions.&#xA;    # Depend on lsb-base (&gt;= 3.2-14) to ensure that this file is present&#xA;    # and status_of_proc is working.&#xA;    . /lib/lsb/init-functions&#xA;&#xA;    #&#xA;    # Function that starts the daemon/service&#xA;    #&#xA;    do_start()&#xA;    {&#xA;            # Return&#xA;            #   0 if daemon has been started&#xA;            #   1 if daemon was already running&#xA;            #   2 if daemon could not be started&#xA;            start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON --test &gt; /dev/null \&#xA;                    || return 1&#xA;            start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON \&#xA;                    -- $DAEMON_ARGS \&#xA;                    || return 2&#xA;            # Add code here, if necessary, that waits for the process to be ready&#xA;            # to handle requests from services started subsequently which depend&#xA;            # on this one.  As a last resort, sleep for some time.&#xA;    }&#xA;&#xA;    ...&#xA;&#xA;case "$1" in&#xA;  start)&#xA;        [ "$VERBOSE" != no ] &amp;&amp; log_daemon_msg "Starting $DESC" "$NAME"&#xA;        do_start&#xA;        case "$?" in&#xA;                0|1) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 0 ;;&#xA;                2) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 1 ;;&#xA;        esac&#xA;        ;;&#xA;  stop)&#xA;        [ "$VERBOSE" != no ] &amp;&amp; log_daemon_msg "Stopping $DESC" "$NAME"&#xA;        do_stop&#xA;        case "$?" in&#xA;                0|1) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 0 ;;&#xA;                2) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 1 ;;&#xA;        esac&#xA;        ;;&#xA;  status)&#xA;        status_of_proc "$DAEMON" "$NAME" &amp;&amp; exit 0 || exit $?&#xA;        ;;&#xA;  #reload|force-reload)&#xA;        #&#xA;        # If do_reload() is not implemented then leave this commented out&#xA;        # and leave 'force-reload' as an alias for 'restart'.&#xA;        #&#xA;        #log_daemon_msg "Reloading $DESC" "$NAME"&#xA;        #do_reload&#xA;        #log_end_msg $?&#xA;        #;;&#xA;  restart|force-reload)&#xA;        #&#xA;        # If the "reload" option is implemented then remove the&#xA;        # 'force-reload' alias&#xA;        #&#xA;        log_daemon_msg "Restarting $DESC" "$NAME"&#xA;        do_stop&#xA;        case "$?" in&#xA;          0|1)&#xA;                do_start&#xA;                case "$?" in&#xA;                        0) log_end_msg 0 ;;&#xA;                        1) log_end_msg 1 ;; # Old process is still running&#xA;                        *) log_end_msg 1 ;; # Failed to start&#xA;                esac&#xA;                ;;&#xA;          *)&#xA;                # Failed to stop&#xA;                log_end_msg 1&#xA;                ;;&#xA;        esac&#xA;        ;;&#xA;  *)&#xA;        #echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" &gt;&amp;2&#xA;        echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" &gt;&amp;2&#xA;        exit 3&#xA;        ;;&#xA;esac&#xA;:&#xA;</code></pre>&#xA;&#xA;<p>What am I doing wrong?</p>&#xA;