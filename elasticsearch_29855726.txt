29855726
How do I use Elasticsearch's geo_point and geo_shape types at the same time?
<p>Here is our <strong>document</strong>:</p>&#xA;&#xA;<pre><code>{&#xA;    "geometry" : {&#xA;        "type" : "Point",&#xA;        "coordinates" : [ -87.662682, 41.843014 ]&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>We'd like to do a <code>geo_shape</code> search with a <code>_geo_distance</code> sort, both against the same <code>geometry</code> field. The former requires<code>geo_shape</code> types while the latter requires <code>geo_point</code>.</p>&#xA;&#xA;<p>These two <strong>indexes</strong> succeed individually, but <em>not together</em>:</p>&#xA;&#xA;<pre><code>"geometry": {&#xA;    "type": "geo_shape"&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and</p>&#xA;&#xA;<pre><code>"geometry": {&#xA;    "properties": {&#xA;        "coordinates": {&#xA;            "type": "geo_point"&#xA;        }&#xA;    }&#xA;},&#xA;</code></pre>&#xA;&#xA;<p>So far we've tried these and <strong>failed</strong>:</p>&#xA;&#xA;<pre><code>"geometry": {&#xA;    "type": "geo_shape"&#xA;},&#xA;"geometry.coordinates": {&#xA;    "type": "geo_point"&#xA;},&#xA;</code></pre>&#xA;&#xA;<p>also</p>&#xA;&#xA;<pre><code>"geometry": {&#xA;    "copy_to": "geometryShape",&#xA;    "type": "geo_shape"&#xA;},&#xA;"geometryShape": {&#xA;    "properties": {&#xA;        "coordinates": {&#xA;            "type": "geo_point"&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>also </p>&#xA;&#xA;<pre><code>"geometry": {&#xA;    "copy_to": "geometryShape",&#xA;    "properties": {&#xA;        "coordinates": {&#xA;            "type": "geo_point"&#xA;        }&#xA;    }&#xA;},&#xA;"geometryShape": {&#xA;    "type": "geo_shape"&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Any ideas on how to create this index properly?</p>&#xA;
<p>I'd go with a <a href="http://www.elastic.co/guide/en/elasticsearch/guide/current/function-score-query.html" rel="nofollow">function_score_query</a> and your original mapping with just the geo_shape. Elasticsearch docs suggest that <a href="http://www.elastic.co/guide/en/elasticsearch/guide/current/sorting-by-distance.html#scoring-by-distance" rel="nofollow">scoring by distance</a> is usually better than sorting by distance.</p>&#xA;&#xA;<p>On another note, have you checked out using a geo_bounding_box with a geo_point? I'm not sure exactly what you're using the geo_shape type for but you may be able to replicate it using the bounding box. Check out an example <a href="http://www.elastic.co/guide/en/elasticsearch/guide/current/sorting-by-distance.html" rel="nofollow">here</a>.</p>&#xA;
<p>If scripting is enabled then you could achieve it via specifying <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-transform.html" rel="nofollow">transforms</a> in mapping</p>&#xA;&#xA;<p>would look something on these lines :</p>&#xA;&#xA;<pre><code>put test/test_type/_mapping&#xA;{&#xA;   "transform": {&#xA;      "script": "if (ctx._source['geometry']['coordinates']) ctx._source['test'] = ctx._source['geometry']['coordinates']",&#xA;      "lang": "groovy"&#xA;   },&#xA;   "properties": {&#xA;      "geometry": {&#xA;         "type": "geo_shape"&#xA;      },&#xA;      "coordinates": {&#xA;         "type": "geo_point"&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;