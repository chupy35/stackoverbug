31913808
How can I get total count of each words in elasticsearch document?
<p>I searched about the question but couldn't find any useful answer. I want to get the total count for each word in a document, for example I have some tweets in my indices and there is a tweet that says something like this “It is so boring here I want to go to my home sweet home”. The query should return the response like this:</p>&#xA;&#xA;<pre><code>It:1&#xA;is:1&#xA;so:1&#xA;boring:1&#xA;here:1&#xA;I:1&#xA;want:1&#xA;to:2&#xA;go:1&#xA;my:1&#xA;home:2&#xA;sweet:1&#xA;</code></pre>&#xA;&#xA;<p>Is it possible to do that?</p>&#xA;
<p>You're looking for <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-termvectors.html" rel="noreferrer"><code>term vectors</code></a>, which leverages analyzers. As as it do so, you can define any analyzer you need, i.e. stemming analyzer to transform words to root/normal form.&#xA;Take a look at <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis.html" rel="noreferrer">documentation</a> for further details.</p>&#xA;&#xA;<p>In:</p>&#xA;&#xA;<pre><code>POST so/_close&#xA;PUT so/_settings&#xA;{&#xA;  "settings": {&#xA;    "analysis":{ &#xA;      "analyzer": {&#xA;        "my_analyzer": {&#xA;          "type": "custom",&#xA;          "tokenizer": "standard",&#xA;          "filter": ["lowercase", "my_stemmer"]&#xA;        }&#xA;      },&#xA;      "filter": {&#xA;        "my_stemmer": {&#xA;          "type": "stemmer",&#xA;          "name": "english"&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;POST so/_open&#xA;PUT so/t1/_mapping&#xA;{&#xA;  "t1": {&#xA;    "properties": {&#xA;      "tweet": {&#xA;        "type": "string",&#xA;        "store": true,&#xA;        "index_analyzer": "my_analyzer"&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;POST so/t1/1&#xA;{"tweet": "It is so boring here I want to go to my home sweet home. So I'm bored"}&#xA;</code></pre>&#xA;&#xA;<p>Out:</p>&#xA;&#xA;<pre><code>{&#xA;   "_index": "so",&#xA;   "_type": "t1",&#xA;   "_id": "1",&#xA;   "_version": 2,&#xA;   "found": true,&#xA;   "term_vectors": {&#xA;      "tweet": {&#xA;         "field_statistics": {&#xA;            "sum_doc_freq": 13,&#xA;            "doc_count": 1,&#xA;            "sum_ttf": 17&#xA;         },&#xA;         "terms": {&#xA;            "bore": {&#xA;               "term_freq": 2,&#xA;               ...&#xA;            },&#xA;            "go": {&#xA;               "term_freq": 1,&#xA;               ...&#xA;            },&#xA;            "here": {&#xA;               "term_freq": 1,&#xA;               ...&#xA;            },&#xA;            "home": {&#xA;               "term_freq": 2,&#xA;               ...&#xA;            },&#xA;            "i": {&#xA;               "term_freq": 1,&#xA;               ...&#xA;            },&#xA;            "i'm": {&#xA;               "term_freq": 1,&#xA;               ...&#xA;            },&#xA;            "is": {&#xA;               "term_freq": 1,&#xA;               ...&#xA;            },&#xA;            "it": {&#xA;               "term_freq": 1,&#xA;               ...&#xA;            },&#xA;            "my": {&#xA;               "term_freq": 1,&#xA;               ...&#xA;            },&#xA;            "so": {&#xA;               "term_freq": 2,&#xA;               ...&#xA;            },&#xA;            "sweet": {&#xA;               "term_freq": 1,&#xA;               ...&#xA;            },&#xA;            "to": {&#xA;               "term_freq": 2,&#xA;               ...&#xA;            },&#xA;            "want": {&#xA;               "term_freq": 1,&#xA;               ...&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;