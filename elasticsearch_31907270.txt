31907270
Elastic Search : Difference between include & filter in aggregation query
<p>My gender data contains male,female,unknown</p>&#xA;&#xA;<p>I want to know the difference between the following query. How it is computed</p>&#xA;&#xA;<pre><code>{&#xA;"aggs" : {&#xA;    "data" : {&#xA;        "filter" : { "term": { "gender": "male" } },&#xA;        "aggs" : {&#xA;            "data_aggs" : { &#xA;                "terms" : { &#xA;                    "field" : "gender"&#xA;                } &#xA;            }&#xA;        }&#xA;    }&#xA;}}&#xA;</code></pre>&#xA;&#xA;<p>And </p>&#xA;&#xA;<pre><code>{&#xA;"aggs" :{&#xA;    "data" : {&#xA;        "terms" :{&#xA;            "field" :"gender",&#xA;            "include" : "male"&#xA;        }&#xA;    }&#xA;}}&#xA;</code></pre>&#xA;
<p>In your first aggregation, the filter will select only the subset of documents whose <code>gender</code> field is exactly <code>male</code>. Your <code>data</code> aggregation will then be run <strong>only</strong> on the selected documents.</p>&#xA;&#xA;<p>Your second aggregation will be run on <strong>all</strong> the documents matched by your query and then the <code>terms</code> aggregation will only return buckets whose key matches <code>male</code>.</p>&#xA;&#xA;<p>In the first case, the aggregation is <em>pre-filtering</em> the data <strong>before</strong> running. In the second case, the aggregation is filtering the data <em>on-the-fly</em>, but it will work on all documents since it has to retrieve the <code>gender</code> field in all document to know whether the gender value needs to be aggregated or not. It goes without saying that the first aggregation should be more performant than the second, especially if your document base is massive.</p>&#xA;