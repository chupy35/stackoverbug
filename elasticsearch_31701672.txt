31701672
Elasticsearch - Aggregation on nested documents, using filter with has_child
<p>My index documents looks somewhat like this;</p>&#xA;&#xA;<pre><code>- a - Parent doc&#xA; \- b - Nested doc (0 to many relation to a)&#xA; \- c - Child doc (0 to many relation to a)&#xA; \- d - Child doc (0 to many relation to a)&#xA;</code></pre>&#xA;&#xA;<p>Info in a and b is "never" changed. Info in c and d is frequently changed and parent-child relation seems to be a perfect match.</p>&#xA;&#xA;<p>Performing aggregation on b works just fine. Filter/query for a using c/d also works fine. When I try to combine "has_child" filter c/d and nested aggregation for b no aggregation is returned. Under _hits the correct number of parent a documents is returned (total).</p>&#xA;&#xA;<p>Is there a way to perform this type of aggregation, or is this a limitation?</p>&#xA;&#xA;<pre><code>/someindex/a/_search&#xA;{&#xA;   "size": 0,&#xA;   "filter": {&#xA;     "has_child": {&#xA;       "type": "c",&#xA;       "filter": {&#xA;          "term": { "someFieldInC": 123}&#xA;         }&#xA;       }&#xA;     }&#xA;   }, &#xA;  "aggregations" : {&#xA;     "details": {&#xA;        "nested": {&#xA;           "path": "b" &#xA;         },&#xA;         "aggregations" : {&#xA;           "details-filter" : {&#xA;              "filter" : {&#xA;                 "query" : {&#xA;                    "term": {"b.someFieldInB": 123}&#xA;                 }&#xA;              },&#xA;              "aggregations" : {&#xA;                "some_count" : { &#xA;                   "terms" : { &#xA;                      "field" : "b.someCountFieldInB"&#xA;                   } &#xA;                }&#xA;             }&#xA;           }&#xA;        }&#xA;     }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Giving</p>&#xA;&#xA;<pre><code>{&#xA;  "took":22,&#xA;  "timed_out":false,&#xA;  "_shards": {&#xA;     "total":5,&#xA;     "successful":5,&#xA;     "failed":0&#xA;  },&#xA;  "hits":{&#xA;     "total":20134,&#xA;     "max_score":0.0,&#xA;     "hits":[]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;
<p>You need to tell your filter it is navigating a nested document as well.  Modify your request as follows:</p>&#xA;&#xA;<pre><code>  "aggregations" : {&#xA;     "details": {&#xA;        "nested": {&#xA;           "path": "b" &#xA;         },&#xA;         "aggregations" : {&#xA;           "details-filter" : {&#xA;              "filter" : {&#xA;                 "nested": {&#xA;                    "path": "b",&#xA;                     "filter": {&#xA;                         "query" : {&#xA;                            "term": {"b.someFieldInB": 123}&#xA;                         }&#xA;                     }&#xA;                 }&#xA;              },&#xA;              "aggregations" : {&#xA;                "some_count" : { &#xA;                   "terms" : { &#xA;                      "field" : "b.someCountFieldInB"&#xA;                   } &#xA;                }&#xA;             }&#xA;           }&#xA;        }&#xA;     }&#xA;</code></pre>&#xA;
<p>After some digging I found the answere.</p>&#xA;&#xA;<p>Simply moved the child filter into the aggregations at the top before my nested aggregation;</p>&#xA;&#xA;<pre><code>"aggregations" : {&#xA;   "childfilter" : { &#xA;      "filter": {&#xA;         "has_child": {&#xA;            "type": "c",&#xA;            "query": {&#xA;               "match": {"someFieldInC": 123}&#xA;             }&#xA;         }&#xA;    },&#xA;    "aggregations" : {&#xA;       "details": {&#xA;          "nested": {&#xA;   . . . .&#xA;</code></pre>&#xA;