30770894
Elasticsearch AND Parens
<p>I'm attempting to do the following with the query dsl but I'll express it as SQL:</p>&#xA;&#xA;<pre><code>(matrices.matrix = 'Matrix1' AND matrices.count = 1) AND (matrices.matrix = 'Matrix2' AND matrices.count &gt;= 0)&#xA;</code></pre>&#xA;&#xA;<p>So, I need to get docs that have both of these nested docs with these values.</p>&#xA;&#xA;<p>This is the nested document it sits on the _source level</p>&#xA;&#xA;<pre><code>"matrices": [&#xA;              {&#xA;                 "terms": [],&#xA;                 "count": 0,&#xA;                 "matrix": "none"&#xA;              },&#xA;              {&#xA;                 "terms": [&#xA;                    "greater"&#xA;                 ],&#xA;                 "count": 1,&#xA;                 "matrix": "Matrix1"&#xA;              }&#xA;           ]&#xA;</code></pre>&#xA;&#xA;<p>And here is the mapping for the sub-doc:</p>&#xA;&#xA;<pre><code>"matrices": {&#xA;              "type": "nested",&#xA;              "include_in_parent": true,&#xA;              "properties": {&#xA;                 "count": {&#xA;                    "type": "long"&#xA;                 },&#xA;                 "matrix": {&#xA;                    "type": "string"&#xA;                 },&#xA;                 "terms": {&#xA;                    "type": "string"&#xA;                 }&#xA;              }&#xA;           }&#xA;</code></pre>&#xA;&#xA;<p>So, I need to generate a query that will allow me to get docs that match both (matrix = 'none' &amp;&amp; count=0) &amp;&amp; (matrix = 'Matrix' &amp;&amp; count = 1)</p>&#xA;&#xA;<p>Thanks, </p>&#xA;
<p>So basically you want to retrieve documents that MUST contain two nested documents with the following criteria:</p>&#xA;&#xA;<ol>&#xA;<li>one nested document with <code>matrices.count=0</code> AND <code>matrices.matrix=none</code></li>&#xA;<li>another nested document with <code>matrices.count=1</code> AND <code>matrices.matrix=Matrix</code></li>&#xA;</ol>&#xA;&#xA;<p>Then with the mapping you have, you can achieve that result using the following query. We use <code>bool/must</code> for two <code>nested</code> queries which in turn match the criteria each of the nested documents that must be retrieved.</p>&#xA;&#xA;<pre><code>curl -XPOST localhost:9200/_search -d '{&#xA;  "query": {&#xA;    "filtered": {&#xA;      "filter": {&#xA;        "bool": {&#xA;          "must": [&#xA;            {&#xA;              "nested": {&#xA;                "path": "matrices",&#xA;                "query": {&#xA;                  "bool": {&#xA;                    "must": [&#xA;                      {&#xA;                        "term": {&#xA;                          "matrices.count": 0&#xA;                        }&#xA;                      },&#xA;                      {&#xA;                        "term": {&#xA;                          "matrices.matrix": "none"&#xA;                        }&#xA;                      }&#xA;                    ]&#xA;                  }&#xA;                }&#xA;              }&#xA;            },&#xA;            {&#xA;              "nested": {&#xA;                "path": "matrices",&#xA;                "query": {&#xA;                  "bool": {&#xA;                    "must": [&#xA;                      {&#xA;                        "term": {&#xA;                          "matrices.count": 1&#xA;                        }&#xA;                      },&#xA;                      {&#xA;                        "term": {&#xA;                          "matrices.matrix": "matrix"&#xA;                        }&#xA;                      }&#xA;                    ]&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          ]&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;