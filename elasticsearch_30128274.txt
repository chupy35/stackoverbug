30128274
Elastic Search - Find Data Common To Multiple Queries
<p>In Elastic Search I have an index that contains users and the URLs that they've visited. I want to be able to search multiple users and find the <strong>common</strong> URLs that they've visited.</p>&#xA;&#xA;<p>I can grab the URLs for a single user:</p>&#xA;&#xA;<pre><code>{&#xA;    "size": 0,&#xA;    "query": {&#xA;        "filtered": {&#xA;            "query": {&#xA;                "query_string": {&#xA;                    "query": "user:bob"&#xA;                }&#xA;            },&#xA;            "filter": {&#xA;                "bool": {&#xA;                    "must": [{&#xA;                            "range": {&#xA;                                "@timestamp": {&#xA;                                    "gte": 1430456930549,&#xA;                                    "lte": 1430666630549&#xA;                                }&#xA;                            }&#xA;                        }],&#xA;                    "must_not": []&#xA;                }&#xA;            }&#xA;        }&#xA;    },&#xA;    "aggs": {&#xA;        "1": {&#xA;            "terms": {&#xA;                "field": "url",&#xA;                "size": 0,&#xA;                "order": {&#xA;                    "_count": "desc"&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But how do I combine the results from each user (doing some sort of intersection). I can do this programmatically but can Elastic Search do this with some sort of aggregation?</p>&#xA;
<p>You may use sub-aggregations, terms by urls inside terms by users:</p>&#xA;&#xA;<pre><code>{&#xA;   "query": {&#xA;      "match_all": {}&#xA;   },&#xA;   "aggs": {&#xA;      "users": {&#xA;         "terms": {&#xA;            "field": "user"&#xA;         },&#xA;         "aggs": {&#xA;            "urls": {&#xA;               "terms": {&#xA;                  "field": "url"&#xA;               }&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This will give you buckets of users, each containing buckets of urls.</p>&#xA;&#xA;<p><strong>UPD</strong> I misunderstood your question at first. I'm not aware of such type of aggregation you're searching for. However you may take advantage of <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-significantterms-aggregation.html" rel="nofollow">significant terms aggregation</a>:</p>&#xA;&#xA;<pre><code>{&#xA;   "query": {&#xA;      "filtered": {&#xA;         "filter": {&#xA;            "terms": {&#xA;               "user": ["alice", "jack"]&#xA;            }&#xA;         }&#xA;      }&#xA;   },&#xA;   "aggs": {&#xA;      "urls": {&#xA;         "significant_terms": {&#xA;            "field": "url",&#xA;            "size": 5&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This will give you buckets with the most popular urls within given set of users. Note that in any case it is not a strict intersection, but rather a list where top elements are urls that are more frequent in so-called <em>foreground group</em> (a query scope) than they are in the <em>background group</em> (all documents of the index).</p>&#xA;&#xA;<p>Urls that are common for selected users are very likely to score high on this aggregation.</p>&#xA;&#xA;<p>But if each of 2 requested users visit her own favourite site a lot more than other sites and doesn't visit the other user's favourite one at all, both urls will still appear, and will score higher than those in common.</p>&#xA;&#xA;<p>Generally I recommend exploring this aggregation, it can give some interesting insights from data. For instance, more relevant usage of this aggregation in your dataset will be finding sites that are common between visitors of some other site.</p>&#xA;&#xA;<p>You can read more about it <a href="https://www.elastic.co/blog/significant-terms-aggregation" rel="nofollow">here</a> and <a href="http://www.elastic.co/guide/en/elasticsearch/guide/current/_significant_terms_demo.html" rel="nofollow">here</a>.</p>&#xA;