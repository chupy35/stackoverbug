30721085
Elasticsearch nested filter query
<p>Here's an example of my json document I'm trying to create a query against. The "params" field is mapped as "nested".</p>&#xA;&#xA;<pre><code>{&#xA;   "images": [&#xA;      {&#xA;         "name": "1907183375555f7c44126f23.67610475.png"&#xA;      },&#xA;      {&#xA;         "name": "5693836375575c567764bc2.87695507.png"&#xA;      }&#xA;   ],&#xA;   "sku": "MYSKU",&#xA;   "class": "some_class",&#xA;   "params": [&#xA;      {&#xA;         "name": "item1",&#xA;         "value": "item1value"&#xA;      },&#xA;      {&#xA;         "name": "item2",&#xA;         "value": "item2value"&#xA;      },&#xA;      {&#xA;         "name": "item3",&#xA;         "value": "item3value"&#xA;      },&#xA;      {&#xA;         "name": "item4",&#xA;         "value": "item4value"&#xA;      },&#xA;      {&#xA;         "name": "item5",&#xA;         "value": "item5value"&#xA;      }&#xA;   ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How do I create a filtered query that will search on the sku, class, and nested params? E.g. in pseudocode, I would have a "bool" "must" on the sku and class, and then a "nested" "filter" "bool" "must" on each of the params that make up the document.  At <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-nested-filter.html" rel="nofollow">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-nested-filter.html</a> I can see how one would use nested on a document where each nested field was a unique field name, but in my document each array element has "name" and "value".</p>&#xA;&#xA;<p>Seems like this should be simple.</p>&#xA;
<p>This ought to do it (for example):</p>&#xA;&#xA;<pre><code>POST /test_index/_search&#xA;{&#xA;   "query": {&#xA;      "filtered": {&#xA;         "query": {&#xA;            "match_all": {}&#xA;         },&#xA;         "filter": {&#xA;            "bool": {&#xA;               "must": [&#xA;                  {&#xA;                     "term": {&#xA;                        "class": "some_class"&#xA;                     }&#xA;                  },&#xA;                  {&#xA;                     "term": {&#xA;                        "sku": "MYSKU1"&#xA;                     }&#xA;                  },&#xA;                  {&#xA;                     "nested": {&#xA;                        "path": "params",&#xA;                        "filter": {&#xA;                           "term": {&#xA;                              "params.name": "item1"&#xA;                           }&#xA;                        }&#xA;                     }&#xA;                  },&#xA;                  {&#xA;                     "nested": {&#xA;                        "path": "params",&#xA;                        "filter": {&#xA;                           "term": {&#xA;                              "params.name": "item3"&#xA;                           }&#xA;                        }&#xA;                     }&#xA;                  }&#xA;               ]&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Note that there are separate <code>nested</code> filter clauses for each nested doc that you want to match (I only included two, but you could include as many as you want); if instead we used a <code>bool</code> inside a single <code>nested</code> clause, with a bunch of filters inside the inner <code>bool</code>, ES would try to find a single nested doc that matched all the supplied filters. This way we are telling ES that the <code>nested</code> filters don't have to all apply to the same nested document.</p>&#xA;&#xA;<p>Here's the code I used to test it:</p>&#xA;&#xA;<p><a href="http://sense.qbox.io/gist/26552d6a8a285c7715b0ac4feab08bd283971664" rel="nofollow">http://sense.qbox.io/gist/26552d6a8a285c7715b0ac4feab08bd283971664</a></p>&#xA;