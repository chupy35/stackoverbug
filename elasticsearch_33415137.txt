33415137
An Elasticsearch filter to determine the absence of a value
<p>I have a document that has students and grades for each student. It looks something like this:</p>&#xA;&#xA;<pre><code>"name": "bill",&#xA;"year": 2015,&#xA;"grades": [&#xA;   {"subject": "math",    grade: "A"},&#xA;   {"subject": "english", grade: "B"}&#xA;  ],  ...&#xA;</code></pre>&#xA;&#xA;<p>I'm looking for query filter(s) that can give me:</p>&#xA;&#xA;<ul>&#xA;<li>a list of students who have studied 'math', and</li>&#xA;<li>a list of students who have <em>not</em> studied 'math'.</li>&#xA;</ul>&#xA;&#xA;<p>I'm thinking that an <strong>exists</strong> filter should do it, but I'm struggling to get my head around it.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>It's a stylised example but the mappings are something like this:</p>&#xA;&#xA;<pre><code>  "mappings": {&#xA;     "student": {&#xA;        "properties": {&#xA;           "name": {&#xA;              "type": "string"&#xA;           },&#xA;           "grades": {&#xA;              "type": "nested",&#xA;              "properties": {&#xA;                 "subject": {&#xA;                    "type": "string"&#xA;                 },&#xA;                 "grade": {&#xA;                    "type": "string"&#xA;                 }&#xA;              }&#xA;           }&#xA;        }&#xA;     }&#xA;  }&#xA;</code></pre>&#xA;
<p>A <code>term filter</code> should do just fine. For the inverse query, just negate it with a <code>not filter</code>:</p>&#xA;&#xA;<pre><code>"query": &#xA;{&#xA;    "filtered" : {&#xA;       "query": {&#xA;           "match_all": {}&#xA;        },&#xA;        "filter" : {&#xA;            "term": {&#xA;               "grades.subject": "math"&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And for the ones who did not study math:</p>&#xA;&#xA;<pre><code>"query": &#xA;{&#xA;    "filtered" : {&#xA;       "query": {&#xA;           "match_all": {}&#xA;        },&#xA;        "filter" : {&#xA;            "not": {&#xA;                "filter": {&#xA;                    "term": {&#xA;                         "grades.subject": "math"&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;
<p>You need to change a bit your mapping and, depending on the your needs, I'd suggest <strong>aggregations</strong>.</p>&#xA;&#xA;<p>First, your <code>nested</code> object needs to be <code>"include_in_parent": true</code> so that you can easily do the <code>not studied 'math'</code> part:</p>&#xA;&#xA;<pre><code>PUT /grades&#xA;{&#xA;  "mappings": {&#xA;    "student": {&#xA;      "properties": {&#xA;        "name": {&#xA;          "type": "string"&#xA;        },&#xA;        "grades": {&#xA;          "type": "nested",&#xA;          "include_in_parent": true, &#xA;          "properties": {&#xA;            "subject": {&#xA;              "type": "string"&#xA;            },&#xA;            "grade": {&#xA;              "type": "string"&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And the full query, using aggregations:</p>&#xA;&#xA;<pre><code>GET /grades/student/_search?search_type=count&#xA;{&#xA;  "aggs": {&#xA;    "studying_math": {&#xA;      "filter": {&#xA;        "nested": {&#xA;          "path": "grades",&#xA;          "query": {&#xA;            "filtered": {&#xA;              "filter": {&#xA;                "bool": {&#xA;                  "must": [&#xA;                    {&#xA;                      "term": {&#xA;                        "grades.subject": "math"&#xA;                      }&#xA;                    }&#xA;                  ]&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      },&#xA;      "aggs": {&#xA;        "top_10": {&#xA;          "top_hits": {&#xA;            "size": 10&#xA;          }&#xA;        }&#xA;      }&#xA;    },&#xA;    "not_studying_math": {&#xA;      "filter": {&#xA;        "bool": {&#xA;          "must_not": [&#xA;            {&#xA;              "term": {&#xA;                "grades.subject": "math"&#xA;              }&#xA;            }&#xA;          ]&#xA;        }&#xA;      },&#xA;      "aggs": {&#xA;        "top_10": {&#xA;          "top_hits": {&#xA;            "size": 10&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;