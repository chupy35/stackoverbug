31054130
How get only a few results ElasticSearch?
<p>I'm trying to run a query that displays all the "indexes" but appears some where the <code>count = 0</code>. I <b>don't want to appear</b> where count = 0. <br>I've tried to use <code>must_not</code> but not resolved. How do I do that?</p>&#xA;&#xA;<p>My search</p>&#xA;&#xA;<pre><code>curl -XGET 'http://127.0.0.1:9200/oknok/base_gerenciada/_search' -d '{&#xA;"from": 0, &#xA;"size": 0, &#xA;"query":{&#xA;    "bool":{&#xA;        "must":[{&#xA;            "term":{&#xA;                "last":true&#xA;             }&#xA;         }]&#xA;     }&#xA;}, &#xA;"facets": {&#xA;    "filters": {&#xA;        "terms": {&#xA;            "field": "spec_veiculo.raw", &#xA;            "all_terms": true,"size" : 999999, &#xA;            "order": "term"&#xA;        }&#xA;    }&#xA;}}'&#xA;</code></pre>&#xA;&#xA;<p>My result (example)</p>&#xA;&#xA;<pre><code>{"took":11,"timed_out":false,"_shards":&#xA;{"total":5,"successful":5,"failed":0},&#xA; "hits":{"total":8375,"max_score":0.0,"hits":[]},&#xA;"facets":{"filters": &#xA;    {"_type":&#xA;        "terms",&#xA;        "missing":0,&#xA;        "total":8375,&#xA;        "other":0,&#xA;        "terms"[&#xA;            {"term":"Abril - Arquitetura &amp; Construção","count":67},&#xA;            {"term":"Abril - Aventuras na História","count":67},&#xA;            {"term":"Abril - Bebe.com.br","count":67},&#xA;            {"term":"Abril - Boa Forma","count":67},&#xA;            {"term":"Abril - Bons Fluidos","count":67},&#xA;            {"term":"Abril - Capricho","count":67},&#xA;            {"term":"Abril - Casa Claudia","count":67},&#xA;            {"term":"Abril - Casa.com.br","count":67},&#xA;            {"term":"Abril - Claudia","count":67},&#xA;            {"term":"Abril - Contigo!","count":67},&#xA;            {"term":"Abril - Elle","count":67},&#xA;            {"term":"Abril - Estilo","count":67},&#xA;            {"term":"Abril - Exame","count":67},&#xA;            {"term":"Abril - Exame PME","count":67},&#xA;            {"term":"Abril - Gestão Escolar","count":67},&#xA;            {"term":"Abril - Guia Quatro Rodas","count":67},&#xA;            {"term":"Abril - Guia do Estudante","count":67},&#xA;            {"term":"Abril - Hotel Pro","count":67},&#xA;            {"term":"Abril - Info","count":67},&#xA;            {"term":"Abril - Manequim","count":67},&#xA;            {"term":"Abril - MdeMulher","count":67}&#xA;</code></pre>&#xA;&#xA;<p>When I use <code>must_not</code></p>&#xA;&#xA;<pre><code>daniela.morais@tusk:~$ curl -XGET 'http://127.0.0.1:9200/oknok/base_gerenciada/_search' -d '{"from": 0, "size": 0, "query":{"bool":{"must":[{"term":{"last":true}}]}, "must_not":[{"count":0}]}, "facets": {"filters": {"terms": {"field": "spec_veiculo.raw", "all_terms": true,"size" : 999999, "order": "term"}}}}'&#xA;{"error":"SearchPhaseExecutionException[Failed to execute phase [query], all shards failed; shardFailures {[1MOjVLWpTwmINmoKy8Zh3Q][oknok][0]: SearchParseException[[oknok][0]: query[+last:T],from[0],size[0]: Parse Failure [Failed to parse source [{\"from\": 0, \"size\": 0, \"query\":{\"bool\":{\"must\":[{\"term\":{\"last\":true}}]}, \"must_not\":[{\"count\":0}]}, \"facets\": {\"filters\": {\"terms\": {\"field\": \"spec_veiculo.raw\", \"all_terms\": true,\"size\" : 999999, \"order\": \"term\"}}}}]]]; nested: ElasticsearchParseException[Expected field name but got START_ARRAY \"must_not\"]; }{[1MOjVLWpTwmINmoKy8Zh3Q][oknok][1]: SearchParseException[[oknok][1]: query[+last:T],from[0],size[0]: Parse Failure [Failed to parse source [{\"from\": 0, \"size\": 0, \"query\":{\"bool\":{\"must\":[{\"term\":{\"last\":true}}]}, \"must_not\":[{\"count\":0}]}, \"facets\": {\"filters\": {\"terms\": {\"field\": \"spec_veiculo.raw\", \"all_terms\": true,\"size\" : 999999, \"order\": \"term\"}}}}]]]; nested: ElasticsearchParseException[Expected field name but got START_ARRAY \"must_not\"]; }{[1MOjVLWpTwmINmoKy8Zh3Q][oknok][2]: SearchParseException[[oknok][2]: query[+last:T],from[0],size[0]: Parse Failure [Failed to parse source [{\"from\": 0, \"size\": 0, \"query\":{\"bool\":{\"must\":[{\"term\":{\"last\":true}}]}, \"must_not\":[{\"count\":0}]}, \"facets\": {\"filters\": {\"terms\": {\"field\": \"spec_veiculo.raw\", \"all_terms\": true,\"size\" : 999999, \"order\": \"term\"}}}}]]]; nested: ElasticsearchParseException[Expected field name but got START_ARRAY \"must_not\"]; }{[1MOjVLWpTwmINmoKy8Zh3Q][oknok][3]: SearchParseException[[oknok][3]: query[+last:T],from[0],size[0]: Parse Failure [Failed to parse source [{\"from\": 0, \"size\": 0, \"query\":{\"bool\":{\"must\":[{\"term\":{\"last\":true}}]}, \"must_not\":[{\"count\":0}]}, \"facets\": {\"filters\": {\"terms\": {\"field\": \"spec_veiculo.raw\", \"all_terms\": true,\"size\" : 999999, \"order\": \"term\"}}}}]]]; nested: ElasticsearchParseException[Expected field name but got START_ARRAY \"must_not\"]; }{[1MOjVLWpTwmINmoKy8Zh3Q][oknok][4]: SearchParseException[[oknok][4]: query[+last:T],from[0],size[0]: Parse Failure [Failed to parse source [{\"from\": 0, \"size\": 0, \"query\":{\"bool\":{\"must\":[{\"term\":{\"last\":true}}]}, \"must_not\":[{\"count\":0}]}, \"facets\": {\"filters\": {\"terms\": {\"field\": \"spec_veiculo.raw\", \"all_terms\": true,\"size\" : 999999, \"order\": \"term\"}}}}]]]; nested: ElasticsearchParseException[Expected field name but got START_ARRAY \"must_not\"]; }]","status":400}&#xA;</code></pre>&#xA;&#xA;<p>And I can't use <code>Not Filter</code></p>&#xA;&#xA;<pre><code>{&#xA;                            "from": 0,&#xA;                            "size": 0,&#xA;                            "query": {&#xA;                                "bool": {&#xA;                                    "must": [&#xA;                                        {&#xA;                                            "term": {&#xA;                                                "last": true&#xA;                                            }&#xA;                                        }&#xA;                                    ]&#xA;                                }&#xA;                            },&#xA;                            "facets": {&#xA;                                "filters": {&#xA;                                    "terms": {&#xA;                                        "field": "spec_veiculo.raw",&#xA;                                        "all_terms": true,&#xA;                                        "size": 999999,&#xA;                                        "order": "term"&#xA;                                    },&#xA;                                    "not": {&#xA;                                        "filter" : {&#xA;                                            "terms": {&#xA;                                                "count": 0&#xA;                                            }&#xA;                                        }&#xA;                                    }&#xA;                                }&#xA;                            }&#xA;                        }&#xA;</code></pre>&#xA;
<p>Try the following. Your syntax was wrong.</p>&#xA;&#xA;<pre><code>{&#xA;   "from": 0,&#xA;   "size": 0,&#xA;   "query": {&#xA;      "bool": {&#xA;         "must": [&#xA;            {&#xA;               "term": {&#xA;                  "last": true&#xA;               }&#xA;            }&#xA;         ],&#xA;         "must_not": [&#xA;            {&#xA;               "term": {&#xA;                  "count": 0&#xA;               }&#xA;            }&#xA;         ]&#xA;      }&#xA;   },&#xA;   "facets": {&#xA;      "filters": {&#xA;         "terms": {&#xA;            "field": "spec_veiculo.raw",&#xA;            "all_terms": true,&#xA;            "size": 999999,&#xA;            "order": "term"&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;
<p>According to the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-facets-terms-facet.html#_all_terms" rel="nofollow">reference</a>, <i>all_terms</i> returns <b>all items even where count is 0</b>, only change to <i>all_terms: false</i></p>&#xA;&#xA;<pre><code>{&#xA;                            "from": 0,&#xA;                            "size": 0,&#xA;                            "query": {&#xA;                                "bool": {&#xA;                                    "must": [&#xA;                                        {&#xA;                                            "term": {&#xA;                                                "last": true&#xA;                                            }&#xA;                                        }&#xA;                                    ]&#xA;                                }&#xA;                            },&#xA;                            "facets": {&#xA;                                "filters": {&#xA;                                    "terms": {&#xA;                                        "field": "spec_veiculo.raw",&#xA;                                        "all_terms": false,&#xA;                                        "size": 999999,&#xA;                                        "order": "term"&#xA;                                    }&#xA;                                }&#xA;                            }&#xA;                        }&#xA;</code></pre>&#xA;