29436824
edge_ngram filter and not analzyed to match search
<p>I have the following elastic search configuration:</p>&#xA;&#xA;<pre><code>PUT /my_index&#xA;{&#xA;    "settings": {&#xA;        "number_of_shards": 1, &#xA;        "analysis": {&#xA;            "filter": {&#xA;                "autocomplete_filter": { &#xA;                    "type":     "edge_ngram",&#xA;                    "min_gram": 1,&#xA;                    "max_gram": 20&#xA;                },&#xA;                "snow_filter" : {&#xA;                    "type" : "snowball",&#xA;                    "language" : "English"&#xA;                }&#xA;            },&#xA;            "analyzer": {&#xA;                "autocomplete": {&#xA;                    "type":      "custom",&#xA;                    "tokenizer": "standard",&#xA;                    "filter": [&#xA;                        "lowercase",&#xA;                        "snow_filter",&#xA;                        "autocomplete_filter" &#xA;                    ]&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;PUT /my_index/_mapping/my_type&#xA;{&#xA;    "my_type": {&#xA;        "properties": {&#xA;            "name": {&#xA;                "type": "multi_field",&#xA;                "fields": {&#xA;                    "name": {&#xA;                        "type":            "string",&#xA;                        "index_analyzer":  "autocomplete", &#xA;                        "search_analyzer": "snowball"&#xA;                    },&#xA;                    "not": {&#xA;                        "type": "string",&#xA;                        "index": "not_analyzed"&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;&#xA;POST /my_index/my_type/_bulk&#xA;{ "index": { "_id": 1            }}&#xA;{ "name": "Brown foxes"    }&#xA;{ "index": { "_id": 2            }}&#xA;{ "name": "Yellow furballs" }&#xA;{ "index": { "_id": 3            }}&#xA;{ "name": "my discovery" }&#xA;{ "index": { "_id": 4            }}&#xA;{ "name": "myself is fun" }&#xA;{ "index": { "_id": 5            }}&#xA;{ "name": ["foxy", "foo"]    }&#xA;{ "index": { "_id": 6            }}&#xA;{ "name": ["foo bar", "baz"] }&#xA;</code></pre>&#xA;&#xA;<p>I am trying to get a search to only return item 6 that has a name of "foo bar" and I am not quite sure how. This is what I am doing right now:</p>&#xA;&#xA;<pre><code>GET /my_index/my_type/_search&#xA;{&#xA;    "query": {&#xA;        "match": {&#xA;            "name": {&#xA;                "query":    "foo b"&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I know it's a combination of how the tokenizer is splitting the word but sort of lost on how both be flexible and be strict enough to match this. I am guessing I need to do a multiple field on my mapping of name, but I am not sure. How can I fix the query and/or my mapping to satisfy my needs?</p>&#xA;
<p>You're already close. Since your <code>edge_ngram</code> analyzer generates tokens of a minimum length of 1, and your query gets tokenized into <code>"foo"</code> and <code>"b"</code>, and the default <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query.html#_types_of_match_queries" rel="nofollow">match query operator</a> is <code>"or"</code>, your query matches each document that has a term starting with <code>"b"</code> (or <code>"foo"</code>), three of the docs.</p>&#xA;&#xA;<p>Using the <code>"and"</code> operator seems to do what you want:</p>&#xA;&#xA;<pre><code>POST /my_index/my_type/_search&#xA;{&#xA;    "query": {&#xA;        "match": {&#xA;            "name": {&#xA;                "query":    "foo b",&#xA;                "operator": "and"&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;...&#xA;{&#xA;   "took": 1,&#xA;   "timed_out": false,&#xA;   "_shards": {&#xA;      "total": 1,&#xA;      "successful": 1,&#xA;      "failed": 0&#xA;   },&#xA;   "hits": {&#xA;      "total": 1,&#xA;      "max_score": 1.4451914,&#xA;      "hits": [&#xA;         {&#xA;            "_index": "test_index",&#xA;            "_type": "my_type",&#xA;            "_id": "6",&#xA;            "_score": 1.4451914,&#xA;            "_source": {&#xA;               "name": [&#xA;                  "foo bar",&#xA;                  "baz"&#xA;               ]&#xA;            }&#xA;         }&#xA;      ]&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here's the code I used to test it:</p>&#xA;&#xA;<p><a href="http://sense.qbox.io/gist/4f6fb7c1fdc6942023091ee1433d7490e04e7dea" rel="nofollow">http://sense.qbox.io/gist/4f6fb7c1fdc6942023091ee1433d7490e04e7dea</a></p>&#xA;