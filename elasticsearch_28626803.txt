28626803
how to rename an index in a cluster?
<p>I need to rename several indexes in a cluster (their name <strong>must</strong> be changed, I cannot use <a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-aliases.html">aliases</a>).</p>&#xA;&#xA;<p>I saw that there are no supported ways to do that, the closest I found is to <a href="https://gist.github.com/nz/6322673">rename the directory of the index</a>, I tried this in a cluster.</p>&#xA;&#xA;<p>The cluster has 3 machines <code>A</code>, <code>B</code> and <code>C</code> and the shards are replicated on each of them. I shut down elasticsearch on <code>A</code>, renamed <code>/var/lib/elasticsearch/security/nodes/0/indices/oldindexname</code> to <code>/var/lib/elasticsearch/security/nodes/0/indices/newindexname</code> and restarted <code>A</code>.</p>&#xA;&#xA;<p>The state of the cluster was yellow and elasticsearch was doing some magic to restore a correct state. After some time I ended up with</p>&#xA;&#xA;<ul>&#xA;<li><code>oldindexname</code> being available and fully replicated (recovered from <code>B</code> and <code>C</code> I guess) </li>&#xA;<li><code>newindexname</code> being available (I can search it) but the head plugin shows that its shards are in an "Unassigned" state and that they are grayed out (not replicated)</li>&#xA;</ul>&#xA;&#xA;<p>During the recovery <code>security.log</code> showed the following message:</p>&#xA;&#xA;<pre><code>[2015-02-20 11:02:33,461][INFO ][gateway.local.state.meta ] [A.example.com] dangled index directory name is [newindexname], state name is [oldindexname], renaming to directory name&#xA;</code></pre>&#xA;&#xA;<p>While <code>newindexname</code> is searchable, it is certainly not in a normal state.</p>&#xA;&#xA;<p>I rolled back to the previous state by deleting <code>newindexname</code>. The cluster is back to green without any "Unassigned" entries.</p>&#xA;&#xA;<p>Given that, how can I rename <code>oldindexname</code> to <code>newindexname</code> in a cluster?</p>&#xA;&#xA;<p><strong>Note:</strong> the ultimate solution I have in mind is to scroll-copy <code>oldindex</code> into <code>newindex</code> and delete <code>oldindex</code> afterwards. This is going to take time so if there is a more direct solution it would be great.</p>&#xA;
<p>As such there is no direct method to copy or rename index in ES (I did search extensively for my own project)</p>&#xA;&#xA;<p>However a very easy option is to use a popular migration tool [Elastic-Exporter]. </p>&#xA;&#xA;<p><a href="http://www.retailmenot.com/corp/eng/posts/2014/12/02/elasticsearch-cluster-migration/">http://www.retailmenot.com/corp/eng/posts/2014/12/02/elasticsearch-cluster-migration/</a></p>&#xA;&#xA;<p>[PS: this is not my blog, just stumbled upon and found it good]</p>&#xA;&#xA;<p>Thereby you can copy index/type and then delete the old one.</p>&#xA;
<p>The best way to rename or change the mappings for an index is to reindex using logstash.&#xA;Here is a sample of the logstash 2.1 configuration:</p>&#xA;&#xA;<pre><code>input {&#xA;  elasticsearch {&#xA;   hosts =&gt; ["es01.example.com", "es02.example.com"]&#xA;   index =&gt; "old-index-name"&#xA;   size =&gt; 500&#xA;   scroll =&gt; "5m"&#xA;  }&#xA;}&#xA;filter {&#xA;&#xA; mutate {&#xA;  remove_field =&gt; [ "@version" ]&#xA; }&#xA;&#xA; date {&#xA;   "match" =&gt; [ "custom_timestamp", "MM/dd/YYYY HH:mm:ss" ]&#xA;   target =&gt; "@timestamp"&#xA; }&#xA;&#xA;}&#xA;output {&#xA; elasticsearch {&#xA;   hosts =&gt; ["es01.example.com", "es02.example.com" ]&#xA;   manage_template =&gt; false&#xA;   index =&gt; "new-index-name"&#xA; }&#xA;}&#xA;</code></pre>&#xA;
<p>As indicated in <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html#_restore" rel="nofollow">Elasticsearch reference for snapshot module</a>, </p>&#xA;&#xA;<blockquote>&#xA;  <p>The rename_pattern and rename_replacement options can be also used to rename index on restore using regular expression</p>&#xA;</blockquote>&#xA;
<p>For renaming your index you can use Elasticsearch Snapshot module.</p>&#xA;&#xA;<p>First you have to take snapshot of your index.while restoring it you can &#xA;rename your index.</p>&#xA;&#xA;<pre><code>    POST /_snapshot/my_backup/snapshot_1/_restore&#xA;    {&#xA;     "indices": "jal",&#xA;     "ignore_unavailable": "true",&#xA;     "include_global_state": false,&#xA;     "rename_pattern": "jal",&#xA;     "rename_replacement": "jal1"&#xA;     }&#xA;</code></pre>&#xA;&#xA;<p>rename_replacement :-New indexname in which you want backup your data.</p>&#xA;
<p>You can use <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-reindex.html" rel="noreferrer">REINDEX</a> to do that.</p>&#xA;&#xA;<blockquote>&#xA;  <p>Reindex does not attempt to set up the destination index. It does not&#xA;  copy the settings of the source index. You should <a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.2/indices-create-index.html" rel="noreferrer">set up the&#xA;  destination index</a> prior to running a _reindex action, including&#xA;  setting up mappings, shard counts, replicas, etc.</p>&#xA;</blockquote>&#xA;&#xA;<ol>&#xA;<li>First copy the index to a new name</li>&#xA;</ol>&#xA;&#xA;<pre><code>POST /_reindex&#xA;{&#xA;  "source": {&#xA;    "index": "twitter"&#xA;  },&#xA;  "dest": {&#xA;    "index": "new_twitter"&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<ol start="2">&#xA;<li>Now delete the Index</li>&#xA;</ol>&#xA;&#xA;<pre><code>DELETE /twitter&#xA;</code></pre>&#xA;
<p>Just in case someone still needs it. The successful, not official, way to rename indexes are:</p>&#xA;&#xA;<ol>&#xA;<li>Close indexes that need to be renamed</li>&#xA;<li>Rename indexes' folders in all data directories of master and data nodes.</li>&#xA;<li>Reopen old closed indexes (I use kofp plugin). Old indexes will be reopened but stay unassigned. New indexes will appear in closed state</li>&#xA;<li>Reopen new indexes</li>&#xA;<li>Delete old indexes</li>&#xA;</ol>&#xA;&#xA;<p>If you happen to get this error "dangled index directory name is", remove index folder in all master nodes (not data nodes), and restart one of the data nodes.</p>&#xA;
<p>If you can't REINDEX a <strong>workaround</strong> is to use <em>aliases</em>. From the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-aliases.html" rel="nofollow noreferrer">official</a> documentation: </p>&#xA;&#xA;<p><em>APIs in elasticsearch accept an index name when working against a specific index, and several indices when applicable. The index aliases API allow to alias an index with a name, with all APIs automatically converting the alias name to the actual index name. An alias can also be mapped to more than one index, and when specifying it, the alias will automatically expand to the aliases indices. An alias can also be associated with a filter that will automatically be applied when searching, and routing values. An alias cannot have the same name as an index.</em></p>&#xA;&#xA;<p>Be aware that this solution does not work if you're using More Like This feature. <a href="https://github.com/elastic/elasticsearch/issues/16560" rel="nofollow noreferrer">https://github.com/elastic/elasticsearch/issues/16560</a></p>&#xA;