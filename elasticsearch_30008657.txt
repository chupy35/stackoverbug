30008657
Do elasticsearch documents within a type have to have the same field structure
<p>I am working through the example in the elasticsearch guide. For a type with objects like these:</p>&#xA;&#xA;<pre><code>{&#xA;               "first_name":  "John",&#xA;               "last_name":   "Smith",&#xA;               "age":         25,&#xA;               "about":       "I love to go rock climbing",&#xA;               "interests": [ "sports", "music" ]&#xA;            }&#xA;</code></pre>&#xA;&#xA;<p>Can I index an object like this:</p>&#xA;&#xA;<p>{&#xA;"middle_name": "lee",&#xA;"age": 36&#xA;}</p>&#xA;&#xA;<p>So it has missing fields and one extra field not in the other one.</p>&#xA;&#xA;<p>Are all these fields still indexed? Or does there have to be the same structure for each document.</p>&#xA;
<p>The missing fields won't create a problem. But the extra field may create as per your setting in <a href="http://www.elastic.co/guide/en/elasticsearch/guide/master/dynamic-mapping.html" rel="nofollow">dynamic mapping</a> property.</p>&#xA;&#xA;<p>Quoting from the document.</p>&#xA;&#xA;<blockquote>&#xA;  <p>Fortunately, you can control this behavior with the dynamic setting,&#xA;  which accepts the following options:</p>&#xA;  &#xA;  <p>true Add new fields dynamicallyâ€”the default </p>&#xA;  &#xA;  <p>false Ignore new fields </p>&#xA;  &#xA;  <p>strict Throw an exception if an unknown field is encountered</p>&#xA;</blockquote>&#xA;
<p>Elasticsearch uses <a href="http://www.elastic.co/guide/en/elasticsearch/guide/master/dynamic-mapping.html" rel="nofollow">dynamic mapping</a> by default which means that the first time it sees a new field it will create a mapping for it. </p>&#xA;&#xA;<p>In your case, the field <code>middle_name</code> is new, so Elasticsearch will create a mapping for the field for you automatically:</p>&#xA;&#xA;<pre><code>{&#xA;"middle_name": {&#xA;  "type":"string"&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So yes, the extra field will be indexed. Not all documents have to have all the fields. </p>&#xA;&#xA;<p>However, all the same field must have the same type in all documents. That is, if you try to index the doc <code>{"age":26}</code> and then the doc <code>{"age":"old"}</code> you will get an error because in the first case the field was a number, in the second case a string:</p>&#xA;&#xA;<pre><code>{&#xA;   "error": "MapperParsingException[failed to parse [age]]; nested: NumberFormatException[For input string: \"adsf\"]; ",&#xA;   "status": 400&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>All this is very easy to try yourself by playing with Marvel Sense. Install it by running <code>bin/plugin -i elasticsearch/marvel/latest</code> in your Elasticsearch folder and then go to <a href="http://localhost:9200/_plugin/marvel/sense/index.html" rel="nofollow">http://localhost:9200/_plugin/marvel/sense/index.html</a> and try to run the following commands to try for yourself:</p>&#xA;&#xA;<pre><code>put typetest&#xA;put typetest/doc/2&#xA;{&#xA;  "age":25&#xA;}&#xA;put typetest/doc/2&#xA;{&#xA;  "age":"old"&#xA;}&#xA;</code></pre>&#xA;