32839538
elasticsearch multi_match vs should
<p>Can someone tell me the difference between</p>&#xA;&#xA;<pre><code>"query": {&#xA;    "bool": {&#xA;        "should": [&#xA;            { "match": {"title": keyword} },&#xA;            { "match": {"description": keyword} }&#xA;        ]&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>and</p>&#xA;&#xA;<pre><code>"query": {&#xA;        "multi_match": {&#xA;            "query": keyword,&#xA;            "fields": [ "title", "description" ]&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>Is there any performance turning if choose one of two above?</p>&#xA;
<p>It depends on the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-multi-match-query.html#multi-match-types" rel="nofollow">type parameter</a> of your <code>multi_match</code>. In your example, since you didn't specify a type, <a href="https://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-multi-match-query.html#type-best-fields" rel="nofollow">best_fields</a> is used. That makes use of a <a href="https://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-dis-max-query.html" rel="nofollow">Dis Max Query</a> and basically </p>&#xA;&#xA;<blockquote>&#xA;  <p>uses the _score from the best field</p>&#xA;</blockquote>&#xA;&#xA;<p>On the other hand, your example with <code>should</code> </p>&#xA;&#xA;<blockquote>&#xA;  <p>combines the _score from each field.</p>&#xA;</blockquote>&#xA;&#xA;<p>and it is equivalent to <code>multi_match</code> with type <a href="https://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-multi-match-query.html#type-most-fields" rel="nofollow">most_fields</a></p>&#xA;