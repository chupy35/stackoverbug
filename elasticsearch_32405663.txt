32405663
Filtering on a mapped timestamp
<p>I have been moving from an auto-generated timestamp to a mapped one and query doesn’t work anymore. When using an auto-generated timestamp, I was able to perform this sort of query:</p>&#xA;&#xA;<pre><code>FilterBuilder filter = FilterBuilders.rangeFilter("_timestamp").from(zonedDateTime.toLocalDate().toString()).to(zonedDateTime.plusHours(1).toLocalDate().toString());&#xA;</code></pre>&#xA;&#xA;<p>but also passing date expressions such as “now-1h” would work. Now that I have introduced the following mapping:</p>&#xA;&#xA;<pre><code>"collections": {&#xA;  "_timestamp": {&#xA;    "enabled": true,&#xA;    "path": "my_date",&#xA;    "ignore_missing": false&#xA;  },&#xA;  "properties": {&#xA;    "author": {&#xA;      "type": "string",&#xA;      "index": "not_analyzed"&#xA;    },&#xA;    "name": {&#xA;      "type": "string",&#xA;      "analyzer": "lowercase"&#xA;    },&#xA;    "my_date": {&#xA;      "type": "date"&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And I store my_date as a Unix EPOCH format, I can’t query anymore:</p>&#xA;&#xA;<pre><code>FilterBuilders.rangeFilter("_timestamp").from(zonedDateTime.toLocalDate().toString()).to(zonedDateTime.plusHours(1).toLocalDate().toString());&#xA;</code></pre>&#xA;&#xA;<p>Return empty results,  while the query</p>&#xA;&#xA;<pre><code>FilterBuilders.rangeFilter("my_date").from(zonedDateTime.toLocalDate().toString()).to(zonedDateTime.plusHours(1).toLocalDate().toString());&#xA;</code></pre>&#xA;&#xA;<p>Fails with an exception</p>&#xA;&#xA;<pre><code>from[-1],size[-1]: Parse Failure [Failed to parse source [{"query":{"filtered":{"query":{"match_all":{}},"filter":{"range":{"my_date":{"from":"2015-09-04T19:52:15.001+01:00","to":"2015-09-04T21:52:15.001+01:00","include_lower":true,"include_upper":true}}}}}}]]]; nested: NumberFormatException[For input string: "2015-09-04T19:52:15.001+01:00"];&#xA;</code></pre>&#xA;&#xA;<p>It looks like the only query that I can do is by using the numeric values of the timestamp, on my_date. Is there anything better I can hope for?</p>&#xA;
<p>There is still something missing in your question. I can only guess that you might have posted the number of <em>seconds</em> since epoch instead of number of <em>milliseconds</em>, your mapping was not applied properly, so something else went wrong that you didn't disclose yet. Here is example based on the data that you have chosen to reveal so far and it works perfectly fine. Please try to modify the example to match your situation.</p>&#xA;&#xA;<pre><code>curl -XDELETE localhost:9200/test&#xA;curl -XPUT localhost:9200/test -d '{&#xA;    "mappings": {&#xA;        "collections": {&#xA;            "_timestamp": {&#xA;                "enabled": true,&#xA;                "path": "my_date",&#xA;                "ignore_missing": false&#xA;            },&#xA;            "properties": {&#xA;                "my_date": {&#xA;                    "type": "date"&#xA;                }&#xA;            }&#xA;          }&#xA;        }&#xA;    }&#xA;}'&#xA;curl -XGET "localhost:9200/test/_mapping?pretty"&#xA;curl -XPOST "localhost:9200/test/collections?refresh" -d '{"my_date": "1441421651000"}'&#xA;curl -XGET "localhost:9200/test/collections/_search?pretty" -d '{&#xA;    "query": {&#xA;        "filtered": {&#xA;            "query": {&#xA;                "match_all": {}&#xA;            },&#xA;            "filter": {&#xA;                "range": {&#xA;                    "my_date": {&#xA;                        "from": "2015-09-04T19:52:15.001+01:00",&#xA;                        "to": "2015-09-05T21:52:15.001+01:00",&#xA;                        "include_lower": true,&#xA;                        "include_upper": true&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}'&#xA;</code></pre>&#xA;