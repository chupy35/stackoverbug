28677001
Elasticsearch Geo Distance query
<p>I've got a list of places which have their latitude and longitude associated with them in the correct mapping of <code>geo_point</code></p>&#xA;&#xA;<p>I've also got a query successfully returning results based on geo distance which looks like this:</p>&#xA;&#xA;<pre><code>{&#xA;  "filter": {&#xA;    "geo_distance": {&#xA;      "distance": "30mi",&#xA;      "companies.locations": {&#xA;        "lat": "51.8801595",&#xA;        "lon": "0.577141"&#xA;      }&#xA;    }&#xA;  },&#xA;  "sort": {&#xA;    "_geo_distance": {&#xA;      "companies.locations": {&#xA;        "lat": "51.8801595",&#xA;        "lon": "0.577141"&#xA;      },&#xA;      "order": "asc",&#xA;      "unit": "mi",&#xA;      "mode": "min"&#xA;    }&#xA;  },&#xA;  "from": 0,&#xA;  "size": 500&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So this currently returns results within 30miles of the latitude and longitude provided. And this works fine.</p>&#xA;&#xA;<p>I'm struggling with the next step, which I'm hoping someone can point me in the right direction with.</p>&#xA;&#xA;<p>Each place has a field called <code>distance</code> which is an integer. This is the maximum distance a place is willing to travel to a client. So if the distance is <code>20</code> (miles) but their latitude and longitude calculates as more than 20miles they should be excluded from the results.</p>&#xA;&#xA;<p>The results come back like this:</p>&#xA;&#xA;<pre><code>{&#xA;  "took": 1,&#xA;  "timed_out": false,&#xA;  "_shards": {&#xA;    "total": 5,&#xA;    "successful": 5,&#xA;    "failed": 0&#xA;  },&#xA;  "hits": {&#xA;    "total": 1,&#xA;    "max_score": null,&#xA;    "hits": [&#xA;      {&#xA;        "_index": "test",&#xA;        "_type": "places",&#xA;        "_id": "AUtvK2OILrMWSKLclj9Z",&#xA;        "_score": null,&#xA;        "_source": {&#xA;          "id": "1",&#xA;          "name": "Chubby Company",&#xA;          "summary": "",&#xA;          "content": "",&#xA;          "locations": [&#xA;            {&#xA;              "lat": 51.8200763,&#xA;              "lon": 0.5264076&#xA;            }&#xA;          ],&#xA;          "address": [&#xA;            {&#xA;              "addr1": "xxxx",&#xA;              "addr2": "",&#xA;              "town": "MyTown",&#xA;              "county": "Essex",&#xA;              "postcode": "XX1 2XX",&#xA;              "tel1": "01111 111111",&#xA;              "tel2": "",&#xA;              "email": null&#xA;            }&#xA;          ],&#xA;          "website": "",&#xA;          "media": {&#xA;            "logo": "",&#xA;            "image": "",&#xA;            "video": ""&#xA;          },&#xA;          "product_ids": [&#xA;            "1",&#xA;            "3",&#xA;            "2"&#xA;          ],&#xA;          "distance": "20"&#xA;        },&#xA;        "sort": [&#xA;          0.031774582056958885&#xA;        ]&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The <code>sort</code> object is distance in miles, so the result above is 0.03 miles from the client.</p>&#xA;&#xA;<p>I'm trying to utilize this to check against the record using  result to exclude it from the results but this is where I'm falling down. </p>&#xA;&#xA;<p>I've tried different combinations of this:</p>&#xA;&#xA;<pre><code>"script": {&#xA;  "script": "doc['distance'].value &lt; doc['sort'].value"&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>which combined with the query looks like this:</p>&#xA;&#xA;<pre><code>{&#xA;  "filter": {&#xA;    "geo_distance": {&#xA;      "distance": "30mi",&#xA;      "companies.locations": {&#xA;        "lat": "51.8801595",&#xA;        "lon": "0.577141"&#xA;      }&#xA;    }&#xA;  },&#xA;  "sort": {&#xA;    "_geo_distance": {&#xA;      "companies.locations": {&#xA;        "lat": "51.8801595",&#xA;        "lon": "0.577141"&#xA;      },&#xA;      "order": "asc",&#xA;      "unit": "mi",&#xA;      "mode": "min"&#xA;    }&#xA;  },&#xA;  "filtered": {&#xA;    "filter": {&#xA;      "script": {&#xA;        "script": "doc['distance'].value &lt; doc['sort'].value"&#xA;      }&#xA;    }&#xA;  },&#xA;  "from": 0,&#xA;  "size": 500&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But i get an error of:</p>&#xA;&#xA;<blockquote>&#xA;  <p>SearchPhaseExecutionException[Failed to execute phase [query], all&#xA;  shards failed ... Parse Failure [No parser for element [filtered]</p>&#xA;</blockquote>&#xA;&#xA;<p>Any advice would be great.</p>&#xA;&#xA;<p><strong>UPDATE</strong></p>&#xA;&#xA;<p>Trying this also fails:</p>&#xA;&#xA;<pre><code>{&#xA;  "filter": {&#xA;    "geo_distance": {&#xA;      "distance": "30mi",&#xA;      "companies.locations": {&#xA;        "lat": "51.8801595",&#xA;        "lon": "0.577141"&#xA;      }&#xA;    },&#xA;    "script": {&#xA;      "script": "_source.distance &lt; sort.value"&#xA;    }&#xA;  },&#xA;  "sort": {&#xA;    "_geo_distance": {&#xA;      "companies.locations": {&#xA;        "lat": "51.8801595",&#xA;        "lon": "0.577141"&#xA;      },&#xA;      "order": "asc",&#xA;      "unit": "mi",&#xA;      "mode": "min"&#xA;    }&#xA;  },&#xA;  "from": 0,&#xA;  "size": 500&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>with </p>&#xA;&#xA;<blockquote>&#xA;  <p>nested: ElasticsearchParseException[Expected field name but got START_OBJECT \"script\"]; }]","status":400}</p>&#xA;</blockquote>&#xA;
<p>I had a similar problem where I wanted to have a conditional distance for each record that had this value stored in the data(searchRadius for me).  I ended up using the AndFilterBuilder and ScriptFilterBuilder classes in Java, so the AndFilterBuilder has an array of both a GeoDistanceFilterBuilder and a ScriptFilterBuilder.  </p>&#xA;&#xA;<pre><code>{&#xA;    "from": 0,&#xA;    "size": 20,&#xA;    "query": {&#xA;        "filtered": {&#xA;            "query": {&#xA;                "match_all": {}&#xA;            },&#xA;            "filter": {&#xA;                "and": {&#xA;                    "filters": [&#xA;                        {&#xA;                            "geo_distance": {&#xA;                                "location": [&#xA;                                    -104.99230194091797,&#xA;                                    39.74000930786133&#xA;                                ],&#xA;                                "distance": "3000mi"&#xA;                            }&#xA;                        },&#xA;                        {&#xA;                            "script": {&#xA;                                "script": "doc['location'].arcDistanceInMiles(39.74000930786133, -104.99230194091797) &lt; doc['searchRadius'].value"&#xA;                            }&#xA;                        }&#xA;                    ]&#xA;                }&#xA;            }&#xA;        }&#xA;    },&#xA;    "fields": "_source",&#xA;    "script_fields": {&#xA;        "distance": {&#xA;            "script": "doc['location'].distance(39.74000930786133, -104.99230194091797)"&#xA;        }&#xA;    },&#xA;    "sort": [&#xA;        {&#xA;            "_geo_distance": {&#xA;                "location": [&#xA;                    -104.99230194091797,&#xA;                    39.74000930786133&#xA;                ],&#xA;                "unit": "mi"&#xA;            }&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;