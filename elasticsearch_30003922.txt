30003922
Elasticsearch - filter and get matched results per hit
<p>In elasticsearch, I would like to filter a query based on an aggregation, and filter my results where the aggregated value is less than X. Similar to how an having-query in sql. </p>&#xA;&#xA;<p>I have some testdata in elasticsearch, that looks like this. </p>&#xA;&#xA;<pre><code>[&#xA;    { &#xA;        "user_id" : 1,&#xA;        "brand"   : "Renault"&#xA;    },&#xA;    { &#xA;        "user_id" : 2,&#xA;        "brand"   : "Renault"&#xA;    },&#xA;    { &#xA;        "user_id" : 1,&#xA;        "brand"   : "Renault"&#xA;    },&#xA;    { &#xA;        "user_id" : 2,&#xA;        "brand"   : "Ford"&#xA;    }&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>user_id is the key I would like to use for aggregation.&#xA;Using mysql, it would be something like </p>&#xA;&#xA;<pre><code>SELECT count(*) as matching, user_id from some_table where brand = 'Renault' HAVING COUNT(*) &gt;= 2 GROUP BY user_id&#xA;</code></pre>&#xA;&#xA;<p>Is this possible using elasticsearch?</p>&#xA;
<p>It can be achieved using <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-filter-aggregation.html" rel="nofollow"><code>Filter Aggregation</code></a> and <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-terms-aggregation.html" rel="nofollow"><code>Terms Aggregation</code></a>.</p>&#xA;&#xA;<pre><code>{&#xA;   "aggs": {&#xA;      "users_owning_renault": {&#xA;         "filter": {&#xA;            "term": {&#xA;               "brand": "renault"&#xA;            }&#xA;         },&#xA;         "aggs": {&#xA;            "users": {&#xA;               "terms": {&#xA;                  "field": "user_id",&#xA;                  "min_doc_count": 2,&#xA;                  "size": 0&#xA;               }&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Taking the example documents you've mentioned, the response would be something like below:</p>&#xA;&#xA;<pre><code>{&#xA;   ...&#xA;   "aggregations": {&#xA;      "users_owning_renault": {&#xA;         "doc_count": 3,&#xA;         "users": {&#xA;            "buckets": [&#xA;               {&#xA;                  "key": 1,&#xA;                  "doc_count": 2&#xA;               }&#xA;            ]&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here, <code>key</code> is <code>user_id</code> and <code>doc_count</code> is <code>matching</code>. When multiple users satisfy the search criteria, corresponding entires will be added to <code>buckets</code> array.</p>&#xA;