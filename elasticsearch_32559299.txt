32559299
Sum Aggregation ignores negative values
<p>I have mapped on elasticsearch a type called <code>measure</code>, which contains both sensorId and value as string.</p>&#xA;&#xA;<p>Mapping.</p>&#xA;&#xA;<pre><code>{&#xA;    "measures": {&#xA;        "mappings": {&#xA;            "summarizedmeasure": {&#xA;                "properties": {&#xA;                    "sensorId": {&#xA;                        "type": "string"&#xA;                    }&#xA;                    "timestamp": {&#xA;                        "type": "date",&#xA;                        "format": "dateOptionalTime"&#xA;                    },&#xA;                    "value": {&#xA;                        "type": "string"&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>There are some negative values indexed, but when I calculate Sum Aggregated by Days It's giving positive value.</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "bool": {&#xA;      "must": &#xA;        {&#xA;          "match": {&#xA;            "sensorId": "123"&#xA;          }&#xA;        }&#xA;    }&#xA;  },&#xA;  "aggs": {&#xA;    "value_per_day": {&#xA;      "date_histogram": {&#xA;        "field": "timestamp",&#xA;        "interval": "day"&#xA;      },&#xA;      "aggs": {&#xA;        "total": {&#xA;          "sum": {&#xA;            "script": "Float.parseFloat(doc['value'].value)"&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Please help me to solve this issue. Thank you</p>&#xA;
<p>Your mapping</p>&#xA;&#xA;<pre><code>                "value": {&#xA;                    "type": "string"&#xA;                }&#xA;</code></pre>&#xA;&#xA;<p>needs to use <code>index: not_analyzed</code> or to analyze the value <strong>without</strong> removing the <code>-</code> (minus sign). The default analyzer in Elasticsearch - <code>standard</code> one - removes some characters and lowercases the string (among others).</p>&#xA;&#xA;<p>For the mapping below, the script works as expected:</p>&#xA;&#xA;<pre><code>    "value": {&#xA;      "type": "string",&#xA;      "index": "not_analyzed"&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>Or, but I think this is even more costly than regular scripting, is to use the <code>_source</code> object in your script, since that one contains the original text that was indexed:</p>&#xA;&#xA;<p><code>"script": "Float.parseFloat(_source.value)"</code></p>&#xA;