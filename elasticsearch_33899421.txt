33899421
elasticsearch: How to interpret log file (cluster went to yellow status)?
<p>Elasticsearch 1.7.2 on CentOS, 8GB RAM, 2 node cluster.</p>&#xA;&#xA;<p>We posted the whole log here: <a href="http://pastebin.com/zc2iG2q4" rel="nofollow">http://pastebin.com/zc2iG2q4</a></p>&#xA;&#xA;<p>When we look at /_cluster/health  , we see 2 unassigned shards:</p>&#xA;&#xA;<pre><code>{&#xA;  "cluster_name" : "elasticsearch-prod",&#xA;  "status" : "yellow",    &lt;--------------------------&#xA;  "timed_out" : false,&#xA;  "number_of_nodes" : 2,&#xA;  "number_of_data_nodes" : 2,&#xA;  "active_primary_shards" : 5,&#xA;  "active_shards" : 8,&#xA;  "relocating_shards" : 0,&#xA;  "initializing_shards" : 0,&#xA;  "unassigned_shards" : 2,    &lt;--------------------------&#xA;  "delayed_unassigned_shards" : 0,&#xA;  "number_of_pending_tasks" : 0,&#xA;  "number_of_in_flight_fetch" : 0&#xA;</code></pre>&#xA;&#xA;<p>In the log, we see:</p>&#xA;&#xA;<pre><code>marking and sending shard failed due to [failed to create shard]&#xA;java.lang.OutOfMemoryError: Java heap space&#xA;</code></pre>&#xA;&#xA;<p>And other errors.</p>&#xA;&#xA;<p>The only memory related config value we have is:</p>&#xA;&#xA;<pre><code>indices.fielddata.cache.size:  75%&#xA;</code></pre>&#xA;&#xA;<p>We are looking to:</p>&#xA;&#xA;<ul>&#xA;<li>understand the log more completely</li>&#xA;<li>understand what action we need to take to address the situation now (recover) and prevent it in the future</li>&#xA;</ul>&#xA;&#xA;<hr>&#xA;&#xA;<p>Additional details:</p>&#xA;&#xA;<p>1) ES_HEAP_SIZE is stock, no changes. (Further, looking around, it is not clear where best to change it.... <code>/etc/init.d/elasticsearch</code> ?)</p>&#xA;&#xA;<p>2) Our jvm stats are below.  (And please note, as a test, I modded <code>"/etc/init.d/elasticsearch"</code> and and added export <code>ES_HEAP_SIZE=4g</code> [in place of the existing <code>"export ES_HEAP_SIZE"</code> line] and restarted ES.... Comparing two identical nodes, one with the changed <code>elasticsearch</code> file, and one stock, the values below appear identical)</p>&#xA;&#xA;<pre><code>  "jvm" : {&#xA;    "timestamp" : 1448395039780,&#xA;    "uptime_in_millis" : 228297,&#xA;    "mem" : {&#xA;      "heap_used_in_bytes" : 81418872,&#xA;      "heap_used_percent" : 7,&#xA;      "heap_committed_in_bytes" : 259522560,&#xA;      "heap_max_in_bytes" : 1037959168,&#xA;      "non_heap_used_in_bytes" : 50733680,&#xA;      "non_heap_committed_in_bytes" : 51470336,&#xA;      "pools" : {&#xA;        "young" : {&#xA;          "used_in_bytes" : 52283368,&#xA;          "max_in_bytes" : 286326784,&#xA;          "peak_used_in_bytes" : 71630848,&#xA;          "peak_max_in_bytes" : 286326784&#xA;        },&#xA;        "survivor" : {&#xA;          "used_in_bytes" : 2726824,&#xA;          "max_in_bytes" : 35782656,&#xA;          "peak_used_in_bytes" : 8912896,&#xA;          "peak_max_in_bytes" : 35782656&#xA;        },&#xA;        "old" : {&#xA;          "used_in_bytes" : 26408680,&#xA;          "max_in_bytes" : 715849728,&#xA;          "peak_used_in_bytes" : 26408680,&#xA;          "peak_max_in_bytes" : 715849728&#xA;        }&#xA;      }&#xA;    },&#xA;    "threads" : {&#xA;      "count" : 81,&#xA;      "peak_count" : 81&#xA;    },&#xA;    "gc" : {&#xA;      "collectors" : {&#xA;        "young" : {&#xA;          "collection_count" : 250,&#xA;          "collection_time_in_millis" : 477&#xA;        },&#xA;        "old" : {&#xA;          "collection_count" : 1,&#xA;          "collection_time_in_millis" : 22&#xA;        }&#xA;      }&#xA;    },&#xA;    "buffer_pools" : {&#xA;      "direct" : {&#xA;        "count" : 112,&#xA;        "used_in_bytes" : 20205138,&#xA;        "total_capacity_in_bytes" : 20205138&#xA;      },&#xA;      "mapped" : {&#xA;        "count" : 0,&#xA;        "used_in_bytes" : 0,&#xA;        "total_capacity_in_bytes" : 0&#xA;      }&#xA;    }&#xA;  },&#xA;</code></pre>&#xA;
<p>Solved.</p>&#xA;&#xA;<p>The key here is the error <code>"java.lang.OutOfMemoryError: Java heap space"</code></p>&#xA;&#xA;<p>Another day, another gem from the ES docs:</p>&#xA;&#xA;<p><a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/heap-sizing.html" rel="nofollow">https://www.elastic.co/guide/en/elasticsearch/guide/current/heap-sizing.html</a></p>&#xA;&#xA;<p>says (emphasis mine):</p>&#xA;&#xA;<p><em>The default installation of Elasticsearch is configured with a 1 GB heap. <strong>For just about every deployment, this number is far too small.</strong> If you are using the default heap values, your cluster is probably configured incorrectly.</em></p>&#xA;&#xA;<p>Resolution:</p>&#xA;&#xA;<p>Edit: <code>/etc/sysconfig/elasticsearch</code></p>&#xA;&#xA;<p>Set <code>ES_HEAP_SIZE=4g</code>   // this system has 8GB RAM</p>&#xA;&#xA;<p>Restart ES</p>&#xA;&#xA;<p>And tada.... the unassigned shards are magically assigned, and the cluster goes green.</p>&#xA;