34374108
How can I add two analysers to a field
<p>I use the nGram plugin for my queries but also I want to add the Phonetic Analysis to the same field on my mapping.</p>&#xA;&#xA;<p>I'm trying the following settings, and it works well with the nGram plugin but I don't know how can I add the <code>dbl_metaphone</code> analyzer on my mapping.</p>&#xA;&#xA;<pre><code>curl -XPUT "127.0.0.1/index" -d'&#xA;{&#xA;   "settings": {&#xA;      "analysis": {&#xA;         "filter": {&#xA;            "nGram_filter": {&#xA;               "type": "nGram",&#xA;               "min_gram": 2,&#xA;               "max_gram": 20,&#xA;               "token_chars": [&#xA;                  "letter",&#xA;                  "digit",&#xA;                  "punctuation",&#xA;                  "symbol"&#xA;               ]&#xA;            },&#xA;            "dbl_metaphone": { &#xA;               "type":    "phonetic",&#xA;               "encoder": "double_metaphone"&#xA;            }&#xA;         },&#xA;         "analyzer": {&#xA;            "nGram_analyzer": {&#xA;               "type": "custom",&#xA;               "tokenizer": "whitespace",&#xA;               "filter": [&#xA;                  "lowercase",&#xA;                  "asciifolding",&#xA;                  "nGram_filter"&#xA;               ]&#xA;            },&#xA;            "whitespace_analyzer": {&#xA;               "type": "custom",&#xA;               "tokenizer": "whitespace",&#xA;               "filter": [&#xA;                  "lowercase",&#xA;                  "asciifolding"&#xA;               ]&#xA;            },&#xA;            "dbl_metaphone": {&#xA;               "tokenizer": "standard",&#xA;               "filter":    "dbl_metaphone"&#xA;            }&#xA;         }&#xA;      }&#xA;   },&#xA;   "mappings": {&#xA;      "books": {&#xA;         "_all": {&#xA;            "analyzer": "nGram_analyzer",&#xA;            "search_analyzer": "whitespace_analyzer"&#xA;         },&#xA;         "properties": {&#xA;            "descripcion":{&#xA;               "type": "string",&#xA;               "analyzer": "nGram_analyzer",&#xA;               "search_analyzer": "whitespace_analyzer"&#xA;            },&#xA;            "categories":{&#xA;               "type": "nested",&#xA;               "properties": {&#xA;                  "nombre":{&#xA;                     "type": "string",&#xA;                     "analyzer": "nGram_analyzer",&#xA;                     "search_analyzer": "whitespace_analyzer"&#xA;                  }&#xA;               }&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>Any help?</p>&#xA;
<p><a href="https://github.com/yakaz/elasticsearch-analysis-combo/" rel="nofollow">Combo analyzer</a> is an option here. It allows you to specify multiple analyzers and it clubs the tokens from both the analyzers are the end result.</p>&#xA;
<p>My solution to this problem would be to have a <a href="https://www.elastic.co/guide/en/elasticsearch/reference/1.4/_multi_fields.html" rel="nofollow">multi field</a> to analyze the data in different ways. Then to combine the results at query time you could use a <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-bool-query.html" rel="nofollow">bool query</a> with either <code>should</code> or <code>must</code> clauses. </p>&#xA;&#xA;<p>So the mapping would look something like this:</p>&#xA;&#xA;<pre><code>   "mappings": {&#xA;      "books": {&#xA;         "properties": {&#xA;            "descripcion": {&#xA;               "type": "string",&#xA;               "analyzer": "nGram_analyzer",&#xA;               "search_analyzer": "whitespace_analyzer"&#xA;               "fields": {&#xA;                  "metaphone": {&#xA;                     "type": "string",&#xA;                     "analyzer": "dbl_metaphone"&#xA;                  }&#xA;               }&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;</code></pre>&#xA;&#xA;<p>And a query would have to use the <code>descripcion</code> and <code>descripcion.metaphone</code> fields. The field <code>descripcion.metaphone</code> is the one analyzed with the <code>dbl_metaphone</code> analyzer.</p>&#xA;&#xA;<p>Does this solve your problem?</p>&#xA;