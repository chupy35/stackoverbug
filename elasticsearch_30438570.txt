30438570
Elasticsearch multi-select facet functionality with child aggregation
<p>Given the following data:</p>&#xA;&#xA;<pre><code>curl -XPUT 'http://localhost:9200/products/'&#xA;&#xA;curl -XPOST 'http://localhost:9200/products/product/_mapping' -d '{&#xA;    "product": {&#xA;        "_parent": {"type": "product_group"}&#xA;    }&#xA;}'&#xA;&#xA;curl -XPUT 'http://localhost:9200/products/product_group/1' -d '{&#xA;  "title": "Product 1"&#xA;}'&#xA;&#xA;curl -XPOST localhost:9200/products/product/1?parent=1 -d '{&#xA;    "height": 190, &#xA;    "width": 120 &#xA;}'&#xA;&#xA;curl -XPOST localhost:9200/products/product/2?parent=1 -d '{&#xA;    "height": 120, &#xA;    "width": 100&#xA;}'&#xA;&#xA;curl -XPOST localhost:9200/products/product/3?parent=1 -d '{&#xA;    "height": 110, &#xA;    "width": 120&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>Child aggregation on <em>product</em> results in the following facets:</p>&#xA;&#xA;<p>Height</p>&#xA;&#xA;<ul>&#xA;<li>110 (1) </li>&#xA;<li>120 (1)</li>&#xA;<li>190 (1)</li>&#xA;</ul>&#xA;&#xA;<p>Width</p>&#xA;&#xA;<ul>&#xA;<li>120 (2)</li>&#xA;<li>100 (1)</li>&#xA;</ul>&#xA;&#xA;<p>If I now filter on <em>height 190</em>, what I would like is to have the height aggregation excluded from the filter so the results would be:</p>&#xA;&#xA;<p>Height</p>&#xA;&#xA;<ul>&#xA;<li>110 (1) </li>&#xA;<li>120 (1)</li>&#xA;<li>190 (1)</li>&#xA;</ul>&#xA;&#xA;<p>Width</p>&#xA;&#xA;<ul>&#xA;<li>120 (1)</li>&#xA;</ul>&#xA;&#xA;<p>This is solvable with filter aggregation, but I'm not sure if it works or how the syntax is when using parent - child relations.</p>&#xA;&#xA;<p>See <a href="http://distinctplace.com/2014/07/29/build-zappos-like-products-facets-with-elasticsearch/" rel="nofollow">http://distinctplace.com/2014/07/29/build-zappos-like-products-facets-with-elasticsearch/</a></p>&#xA;&#xA;<p>What I've tried so far:</p>&#xA;&#xA;<pre><code>curl -XGET 'http://localhost:9200/products/product_group/_search?pretty=true' -d '{&#xA;    "filter": {&#xA;        "has_child": {&#xA;            "type": "product",&#xA;            "filter": {&#xA;                "term": {"height": 190}&#xA;            },&#xA;            "inner_hits": {} &#xA;        }&#xA;    },&#xA;    "aggs": {&#xA;        "to-products": {&#xA;            "children": {"type": "product"},&#xA;            "aggs": {&#xA;                "height": {&#xA;                    "filter": {"match_all": {}},&#xA;                    "aggs": {&#xA;                        "height": {&#xA;                            "terms": {"field": "height", "size": 10}&#xA;                        }&#xA;                    }&#xA;                },&#xA;                "width": {&#xA;                    "filter": {&#xA;                        "and": [{"terms": { "height": [190]}}]&#xA;                    },&#xA;                    "aggs": {&#xA;                        "width": {&#xA;                            "terms": {"field": "width", "size": 10}&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }  &#xA;        }&#xA;    }&#xA;}&#xA;'&#xA;</code></pre>&#xA;
<p>I don't fully understand your question, but If you want to have multiple aggregation inside child aggregation, you have to append parent type name before every field in aggregation. </p>&#xA;&#xA;<p>here is modified query,</p>&#xA;&#xA;<pre><code> curl -XPOST "http://localhost:9200/products/product_group/_search?pretty=true" -d'&#xA;    {&#xA;   "size": 0,&#xA;   "filter": {&#xA;      "has_child": {&#xA;         "type": "product",&#xA;         "filter": {&#xA;            "term": {&#xA;               "product.height": 190&#xA;            }&#xA;         },&#xA;         "inner_hits": {}&#xA;      }&#xA;   },&#xA;   "aggs": {&#xA;      "to-products": {&#xA;         "children": {&#xA;            "type": "product"&#xA;         },&#xA;         "aggs": {&#xA;            "height": {&#xA;               "filter": {&#xA;                  "match_all": {}&#xA;               },&#xA;               "aggs": {&#xA;                  "height": {&#xA;                     "terms": {&#xA;                        "field": "product.height",&#xA;                        "size": 10&#xA;                     }&#xA;                  }&#xA;               }&#xA;            },&#xA;            "width": {&#xA;               "filter": {&#xA;                  "and": [&#xA;                     {&#xA;                        "terms": {&#xA;                           "product.height": [&#xA;                              190&#xA;                           ]&#xA;                        }&#xA;                     }&#xA;                  ]&#xA;               },&#xA;               "aggs": {&#xA;                  "width": {&#xA;                     "terms": {&#xA;                        "field": "product.width",&#xA;                        "size": 10&#xA;                     }&#xA;                  }&#xA;               }&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>It wasn't mentioned anywhere in documentation, which is confusing to many users, I guess they treat child aggregation same as nested aggregation so same way to aggregate. </p>&#xA;