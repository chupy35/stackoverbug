30360570
Elasticsearch ESRejectedExecutionException using _msearch
<p>In my system, I currently have 2 nodes both running Ubuntu 14.04 and elasticsearch 1.5.2, one is a combined master and data node, and the other is a client node, with settings like:</p>&#xA;&#xA;<p><strong>Master node:</strong>  </p>&#xA;&#xA;<pre><code>http.enabled: true  &#xA;node.data: true  &#xA;node.master: true  &#xA;cluster.name: mvtest  &#xA;</code></pre>&#xA;&#xA;<p><strong>Client node:</strong>  </p>&#xA;&#xA;<pre><code>http.enabled: true  &#xA;node.data: false  &#xA;node.master: false  &#xA;cluster.name: mvtest  &#xA;</code></pre>&#xA;&#xA;<p>All of the other settings are ES 1.5.2 defaults.  When I try to post to the _msearch endpoint, using a file like:</p>&#xA;&#xA;<pre><code>{}  &#xA;{“query”: {“multi_match”: {“operator”:”and”, “query”: “1”, “fields”: [“_id”]}}}  &#xA;{}  &#xA;{“query”: {“multi_match”: {“operator”:”and”, “query”: “2”, “fields”: [“_id”]}}}  &#xA;{}  &#xA;{“query”: {“multi_match”: {“operator”:”and”, “query”: “3”, “fields”: [“_id”]}}}  &#xA;…&#xA;{}  &#xA;{“query”: {“multi_match”: {“operator”:”and”, “query”: “999”, “fields”: [“_id”]}}}  &#xA;{}  &#xA;{“query”: {“multi_match”: {“operator”:”and”, “query”: “1000”, “fields”: [“_id”]}}}  &#xA;</code></pre>&#xA;&#xA;<p>I get MANY errors in the logs of the form:</p>&#xA;&#xA;<pre><code>[2015-05-20 18:57:22,150][DEBUG][action.search.type       ] [master] [genedoc_mygene_allspecies_current_1][8], node[4ara0M7SReSEPKrZM2g5Gg], [P], s[STARTED]: Failed to execute [org.elasticsearch.action.search.SearchRequest@5104e7e5] lastShard [true]&#xA;org.elasticsearch.common.util.concurrent.EsRejectedExecutionException: rejected execution (queue capacity 1500) on org.elasticsearch.search.action.SearchServiceTransportAction$23@18e20fd8&#xA;        at org.elasticsearch.common.util.concurrent.EsAbortPolicy.rejectedExecution(EsAbortPolicy.java:62)&#xA;        at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:821)&#xA;        at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1372)&#xA;        at org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor.execute(EsThreadPoolExecutor.java:79)&#xA;        at org.elasticsearch.search.action.SearchServiceTransportAction.execute(SearchServiceTransportAction.java:551)&#xA;        at org.elasticsearch.search.action.SearchServiceTransportAction.sendExecuteQuery(SearchServiceTransportAction.java:228)&#xA;        at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction$AsyncAction.sendExecuteFirstPhase(TransportSearchQueryThenFetchAction.java:83)&#xA;        at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction.performFirstPhase(TransportSearchTypeAction.java:176)&#xA;        at org.elasticsearch.action.search.type.TransportSearchTypeAction$BaseAsyncAction.start(TransportSearchTypeAction.java:158)&#xA;        at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction.doExecute(TransportSearchQueryThenFetchAction.java:62)&#xA;        at org.elasticsearch.action.search.type.TransportSearchQueryThenFetchAction.doExecute(TransportSearchQueryThenFetchAction.java:52)&#xA;        at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:75)&#xA;        at org.elasticsearch.action.search.TransportSearchAction.doExecute(TransportSearchAction.java:100)&#xA;        at org.elasticsearch.action.search.TransportSearchAction.doExecute(TransportSearchAction.java:43)&#xA;        at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:75)&#xA;        at org.elasticsearch.action.search.TransportMultiSearchAction.doExecute(TransportMultiSearchAction.java:62)&#xA;        at org.elasticsearch.action.search.TransportMultiSearchAction.doExecute(TransportMultiSearchAction.java:39)&#xA;        at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:75)&#xA;        at org.elasticsearch.client.node.NodeClient.execute(NodeClient.java:98)&#xA;at org.elasticsearch.client.FilterClient.execute(FilterClient.java:66)&#xA;        at org.elasticsearch.rest.BaseRestHandler$HeadersAndContextCopyClient.execute(BaseRestHandler.java:92)&#xA;        at org.elasticsearch.client.support.AbstractClient.multiSearch(AbstractClient.java:364)&#xA;        at org.elasticsearch.rest.action.search.RestMultiSearchAction.handleRequest(RestMultiSearchAction.java:66)&#xA;        at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:53)&#xA;        at org.elasticsearch.rest.RestController.executeHandler(RestController.java:225)&#xA;        at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:170)&#xA;        at org.elasticsearch.http.HttpServer.internalDispatchRequest(HttpServer.java:121)&#xA;        at org.elasticsearch.http.HttpServer$Dispatcher.dispatchRequest(HttpServer.java:83)&#xA;        at org.elasticsearch.http.netty.NettyHttpServerTransport.dispatchRequest(NettyHttpServerTransport.java:329)&#xA;        at org.elasticsearch.http.netty.HttpRequestHandler.messageReceived(HttpRequestHandler.java:63)&#xA;        at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)&#xA;        at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)&#xA;        at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)&#xA;        at org.elasticsearch.http.netty.pipelining.HttpPipeliningHandler.messageReceived(HttpPipeliningHandler.java:60)&#xA;        at org.elasticsearch.common.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:88)&#xA;        at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)&#xA;        at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)&#xA;        at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:296)&#xA;        at org.elasticsearch.common.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:194)&#xA;        at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)&#xA;        at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)&#xA;        at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)&#xA;        at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:74)&#xA;        at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)&#xA;        at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)&#xA;        at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:268)&#xA;        at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:255)&#xA;        at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)&#xA;        at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)&#xA;        at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)&#xA;        at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)&#xA;        at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)&#xA;        at org.elasticsearch.common.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)&#xA;        at org.elasticsearch.common.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)&#xA;        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)&#xA;        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)&#xA;        at java.lang.Thread.run(Thread.java:745)&#xA;</code></pre>&#xA;&#xA;<p>Interestingly, when I use the _msearch endpoint on the master node, the query returns, but these errors fill the logs.  When I use the _msearch endpoint on the client node using the same query, it will often (but not always) trigger a timeout, and then fill the logs with these errors.</p>&#xA;&#xA;<p>I assume it must have something to do with the thread pool queue, but after reading the ES documentation, I’m not sure how to fix this.  I have tried to unbound the search queue using type: cached, and also tried to change the search queue size, all to no avail. However, when I unbound the queue, the error changes to a TransportService not closed error.</p>&#xA;&#xA;<p>I’m still very new to elasticsearch, so I’m hoping someone out there will have some ideas about what’s happening here.</p>&#xA;&#xA;<p>Thanks so much, and let me know if I forgot any relevant background information.</p>&#xA;