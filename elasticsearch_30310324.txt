30310324
ElasticSearch aggregate nested fields
<p>I have a product repository with mapping:</p>&#xA;&#xA;<pre><code>settings do&#xA;  mapping do&#xA;    indexes :name&#xA;    indexes :vendor_id,   type: 'integer'&#xA;    indexes :category_id, type: 'integer'&#xA;&#xA;    indexes :spec_entries, type: 'nested' do&#xA;      indexes :spec_id,     type: 'integer'&#xA;      indexes :value_id,    type: 'integer'&#xA;      indexes :name,        index: 'no'&#xA;      indexes :description, index: 'no'&#xA;      indexes :value,       index: 'no'&#xA;    end&#xA;  end&#xA;end&#xA;</code></pre>&#xA;&#xA;<p>Spec entries is a product specifications (ex: Fork: Air) where Fork is a name and Air is a value. Also there are specification ID, specification value ID, and specification description.</p>&#xA;&#xA;<p>I need to get a aggregations result like this:</p>&#xA;&#xA;<pre><code>[&#xA;...&#xA;{&#xA;  id: 335,&#xA;  name: "Fork",&#xA;  description: "There are few common types of fork â€” elastomer, oil and air",&#xA;  count: 30,&#xA;  values: [{&#xA;    id: 645,&#xA;    name: "Elastomer",&#xA;    count: 17&#xA;  }, {&#xA;    id: 643,&#xA;    name: "Oil",&#xA;    count: 10&#xA;  }, {&#xA;    id: 649,&#xA;    name: "Air",&#xA;    count: 3&#xA;  }, ]&#xA;},&#xA;...&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>Specs and values should be ordered by count.</p>&#xA;&#xA;<p>What type of aggregation I need to use?</p>&#xA;
<p>You want to use the <code>nested</code> aggregation (because <code>spec_entries</code> has <code>nested</code> type and then one <code>terms</code> aggregations for the <code>spec_entries.name</code> and a <code>top_hits</code> sub-aggregation to get the top nested <code>spec_entries</code>. Something like this should do:</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "match_all": {}&#xA;  },&#xA;  "aggs": {&#xA;    "spec_names": {&#xA;      "nested": {&#xA;        "path": "spec_entries"&#xA;      },&#xA;      "aggs": {&#xA;        "names": {&#xA;          "terms": {&#xA;            "field": "spec_entries.name"&#xA;          },&#xA;          "aggs": {&#xA;            "top_entries": {&#xA;              "top_hits": {&#xA;                "field": "spec_entries.value"&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And that would yield something very close to what you expect:</p>&#xA;&#xA;<pre><code>{&#xA;  ...&#xA;  "aggregations" : {&#xA;    "spec_names" : {&#xA;      "doc_count" : 1,&#xA;      "names" : {&#xA;        "doc_count_error_upper_bound" : 0,&#xA;        "sum_other_doc_count" : 0,&#xA;        "buckets" : [ {&#xA;          "key" : "fork",     &lt;-------- The spec_entries name&#xA;          "doc_count" : 1,&#xA;          "top_values" : {&#xA;            "hits" : {&#xA;              "total" : 1,&#xA;              "max_score" : 1.0,&#xA;              "hits" : [ {&#xA;                "_index" : "tests",&#xA;                "_type" : "test1",&#xA;                "_id" : "1",&#xA;                "_nested" : {&#xA;                  "field" : "spec_entries",&#xA;                  "offset" : 0&#xA;                },&#xA;                "_score" : 1.0,&#xA;                "_source":{  &lt;-------- For each name, the top spec_entries content (value, id, desc, etc)&#xA;                  "name":"Fork",&#xA;                  "value":"Air",&#xA;                  "description":"desc",&#xA;                  "spec_id":1,&#xA;                  "value_id":1&#xA;                }&#xA;              } ]&#xA;            }&#xA;          }&#xA;        } ]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Note that using the <code>top_hits</code> aggregation as a sub-aggregation of the <code>nested</code> aggregation will only work <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-top-hits-aggregation.html#_top_hits_support_in_a_nested_or_reverse_nested_aggregator" rel="nofollow">from ES 1.5 onward</a></p>&#xA;