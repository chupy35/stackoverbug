30261519
Multi match query in elastic not matching initial character
<p>Hello I am trying to setup a single search box that will do partial searches on certain fields and standard searches on others. I am nearly there but am failing to get past the following hurdle:</p>&#xA;&#xA;<p>This is my index:</p>&#xA;&#xA;<pre><code>PUT /my_index&#xA;{&#xA;    "mappings": {&#xA;        "blogpost": {&#xA;            "properties": {&#xA;                "firstname": {&#xA;                    "fields": {&#xA;                        "autocomplete": {&#xA;                            "index_analyzer": "autocomplete",&#xA;                            "type": "string"&#xA;                        },&#xA;                        "firstname": {&#xA;                            "index_analyzer": "standard",&#xA;                            "type": "string"&#xA;                        }&#xA;                    },&#xA;                    "type": "string"&#xA;                }&#xA;            }&#xA;        }&#xA;    },&#xA;    "settings": {&#xA;        "index": {&#xA;            "analysis": {&#xA;                "analyzer": {&#xA;                    "autocomplete": {&#xA;                        "tokenizer": "ngram_tokenizer",&#xA;                        "type": "custom"&#xA;                    },&#xA;                    "standard": {&#xA;                        "type": "standard"&#xA;                    }&#xA;                },&#xA;                "tokenizer": {&#xA;                    "ngram_tokenizer": {&#xA;                        "max_gram": "20",&#xA;                        "min_gram": "2",&#xA;                        "type": "nGram"&#xA;                    }&#xA;                }&#xA;            },&#xA;            "creation_date": "1431690991641",&#xA;            "number_of_replicas": "0",&#xA;            "number_of_shards": "3",&#xA;            "uuid": "W4Ug6IadS9mYuN5_Pqlhow",&#xA;            "version": {&#xA;                "created": "1040499"&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Index 1 document:</p>&#xA;&#xA;<pre><code>PUT /my_index/blogpost/1&#xA;{"firstname" : "Albert"}&#xA;</code></pre>&#xA;&#xA;<p>Simple query:</p>&#xA;&#xA;<pre><code>/_search?q=Albert&#xA;</code></pre>&#xA;&#xA;<p>returns Albert.  All good.</p>&#xA;&#xA;<p>Multi_match query:</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "multi_match": {&#xA;      "query": "Albert",&#xA;      "fields": [&#xA;        "firstname",&#xA;        "firstname.autocomplete"&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Also returns Albert.  All good.</p>&#xA;&#xA;<p>If I replace Albert with bert it returns Albert.  All good.</p>&#xA;&#xA;<p>But "Al" or "al" or "Alber" or "alber" does not!  Any search where beginning letter is included fails.</p>&#xA;&#xA;<p>Yet</p>&#xA;&#xA;<pre><code>/my_index/_search?firstname.autocomplete:Al&#xA;</code></pre>&#xA;&#xA;<p>Is all good.</p>&#xA;&#xA;<p>Please help.</p>&#xA;
<p>The search analyzer for field.autocomplete is the default which is usually <a href="https://www.elastic.co/guide/en/elasticsearch/guide/master/standard-analyzer.html" rel="nofollow">standard</a>.</p>&#xA;&#xA;<p>So when you search for Al you are actually looking for "al" even for "Al" you end up searching for the lowercase version.</p>&#xA;&#xA;<p>However while indexing using autocomplete analyzer you are not normalizing the data to lowercase so it has only the term "Al" in the index.</p>&#xA;&#xA;<p>You can use the analyze api to check how the data has been analyzed</p>&#xA;&#xA;<pre><code>GET /my_index/_analyze?field=firstname.autocomplete&amp;text=Albert"&#xA;</code></pre>&#xA;&#xA;<p>Adding <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-lowercase-tokenfilter.html" rel="nofollow">lowercase token filter</a> to "autocomplete" analyzer should fix this issue :</p>&#xA;&#xA;<pre><code>   "autocomplete": {&#xA;                        "tokenizer": "ngram_tokenizer",&#xA;                        "type": "custom",&#xA;                        "filter" :[&#xA;                            "lowercase"&#xA;                        ]&#xA;                    },&#xA;</code></pre>&#xA;