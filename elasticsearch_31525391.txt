31525391
How to use elastic search for advanced queries:
<p>I'm using elasticsearch. I'm already pretty deep into it but I'm very confused as to how to go about writing advanced queries. There are queries / filters / etc. I'm confused as to how to proceed. </p>&#xA;&#xA;<p>I have a schema that looks like this: </p>&#xA;&#xA;<pre><code>photos: {people: [{person_id: 1, person_name:"john kealy"}], &#xA;         tags: [{tag_id: 1, tag_name:"other tag"}, &#xA;         by_line: "John D Kealy/My website.com",&#xA;         location: "Some Place OUt West"]&#xA;</code></pre>&#xA;&#xA;<p>I need to be able to string together these queries dynamically ALWAYS pulling in FULL MATCHES, e.g. I would like to search for</p>&#xA;&#xA;<p>people.person_id: [1,2] (pulls in only photos with BOTH or more peole)&#xA;tags.tag_id: [1,2,3] (pulls in only photos with all three or more tags)&#xA;by_line: "John D. Kealy/My Website.com" (the full name including the slash)&#xA;location: "some place out west" </p>&#xA;&#xA;<p>I would like to write one query with all these items. I need to include the slash in "by_line", i don't care up upper or lower case. I need the exact match "some place out west". What do I use here? Queries or filters / filtered? </p>&#xA;
<p>General guidelines for bool filters/queries can be found <a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/combining-filters.html" rel="nofollow">here</a>.</p>&#xA;&#xA;<p>If you are constructing an "exact match" query, you can often use the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-terms-filter.html" rel="nofollow">term</a> filter (or query).</p>&#xA;&#xA;<p>If you are constructing a search that requires a solid performance speed wise, a <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-filtered-query.html" rel="nofollow">filtered query</a> is often advisable, as filters are set before the query is run, often improving performance.</p>&#xA;&#xA;<p>As for your specific example, the below filters should work, throw it around a matchAll query or anything else you need [With the non-analyzed by_line field, the analyzed one has a query). This should give you an idea as how to construct future queries:</p>&#xA;&#xA;<p><strong>NOTE</strong>: This assumes that your by_line field is not analyzed. The double slash will escape your slash delimiter, if you are using an analyzed field you must use a match query.</p>&#xA;&#xA;<p><strong>Without analyzer on by_line</strong></p>&#xA;&#xA;<pre><code>{&#xA;   "query" : {&#xA;      "filtered" : {&#xA;         "filter" : {&#xA;            "bool" : {&#xA;              "must" : [&#xA;                { "terms" : {"people.person_id" : ["1", "2"]}}, &#xA;                { "terms" : {"tags.tag_id" : ["1", "2", "3"]}},&#xA;                { "term" : {"by_line" : "John D. Kealy\\/My Website.com"}}, &#xA;                { "term" : {"location" : "some place out west"}}&#xA;              ]&#xA;           }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I will keep the above there for future readers, however I see in your post history that you are using the standard analyzer, your query should be structured as follows.</p>&#xA;&#xA;<p><strong>With analyzer on by_line</strong></p>&#xA;&#xA;<pre><code>{&#xA;   "query" : {&#xA;      "filtered" : {&#xA;         "query": {&#xA;            "match": {&#xA;               "by_line": "John Kealy/BFA.com"&#xA;             }&#xA;         },&#xA;         "filter" : {&#xA;            "bool" : {&#xA;              "must" : [&#xA;                { "terms" : {"people.person_id" : ["1", "2"]}}, &#xA;                { "terms" : {"tags.tag_id" : ["1", "2", "3"]}},&#xA;                { "term" : {"location" : "some place out west"}}&#xA;              ]&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;