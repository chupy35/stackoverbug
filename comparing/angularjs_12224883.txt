12224883
Angular.JS: How should I organize a service that uses both resources and scope?
<p>OK, here's the deal. I've got a service that deals with both <code>$resource</code> and <code>$scope</code>, and I'm not familiar enough with Angular.JS to trust myself to organize it properly.  The service can associate resources with WebSockets that maintain active connections to the backend.  Whenever the backend notifies the service of a change to a given resource, the resource's attributes are changed to match, and thus the web page is updated automatically in real time with new values.</p>&#xA;&#xA;<p>This Websockety goodness is called "Frisch", and the way I have it currently organized is thusly:</p>&#xA;&#xA;<p>The <code>Frisch</code> class is traditional and completely independent of the Angular.JS module system. It has an <code>angularize</code> method that sets up Angular.JS resource bindings:</p>&#xA;&#xA;<pre><code>var Frisch = function(url) {&#xA;  ... create a websocket ...&#xA;&#xA;  this.angularize = function(scope, record) {&#xA;    this.websocketCallback = function(attributes) {&#xA;      ... update `record` with the new values ...&#xA;      scope.$apply(); scope.$digest();&#xA;    }&#xA;  };&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>Meanwhile, my controller looks like this:</p>&#xA;&#xA;<pre><code>var MyController = function(MyModel, $scope) {&#xA;  $scope.myModel = MyModel.get(... stuff ...);&#xA;  new Frisch('/some/websocket/url').angularize($scope, $scope.myModel);&#xA;};&#xA;MyController.$inject = ['MyModel', '$scope'];&#xA;</code></pre>&#xA;&#xA;<p>So this is my first Angular.JS project, and I feel like things could definitely be organized better.  Specifically, it feels weird that both <code>$scope</code> and the resource must be passed to <code>angularize</code>.</p>&#xA;&#xA;<p>I'm guessing there's a much more Angular-y way of doing this, like with services or providers or something.  Maybe some way of "mixing in" Frisch-ness into a model factory (in this case, <code>MyModel</code>).  But I can't quite wrap my head around how to do it...</p>&#xA;