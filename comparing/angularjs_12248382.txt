12248382
angularjs: how to access the current element of ng-repeat
<p>I need to be able to access the current element of ng-repeat inside a directive. See the jsfiddle for this:&#xA;<a href="http://jsfiddle.net/terebentina/TVEnN/" rel="noreferrer">http://jsfiddle.net/terebentina/TVEnN/</a></p>&#xA;&#xA;<p>I am expecting a hash in the console (like {width: 100, height: 100}) but I am not really sure how to do that. </p>&#xA;&#xA;<p>Any help would be much appreciated.</p>&#xA;
<p>Here is a fiddle that works ( and outputs what you are expecting).</p>&#xA;&#xA;<p><a href="http://jsfiddle.net/TVEnN/2/" rel="nofollow">http://jsfiddle.net/TVEnN/2/</a></p>&#xA;&#xA;<p>Things to Note about <code>ng-repeat</code>: </p>&#xA;&#xA;<ol>&#xA;<li><code>ng-repeat</code> always creates a NEW SCOPE for each element in the array / object. </li>&#xA;<li>The current element is available in this new scope as the name of the element defined in the <code>ng-repeat</code>. For ex: if you defined <code>ng-repeat = "page in pages"</code> then the current element is available in the scope as page. If you defined <code>ng-repeat = "(key,value) in object"</code> both <code>key</code> and <code>value</code> are available in this new scope.</li>&#xA;<li>The current position in the array is available as <code>$index</code>.</li>&#xA;<li>Since <code>ng-repeat</code> creates a new scope and all scopes inherit from their parent the <code>pages</code> in the above example is still available in this new scope, which means you could do stuff like <code>$scope.pages.length</code> if you need to.</li>&#xA;</ol>&#xA;
<p>In addition to @ganaraj's answer:</p>&#xA;&#xA;<p>There's a pitfall when using filters. By using filters, e.g. to order items alphabetically, the <code>$index</code> resp. the <code>key</code> variable does no longer represent the actual position of the item in the items array, but its current position in the <code>ng-repeat</code>-block.</p>&#xA;&#xA;<p>See <a href="http://codeutopia.net/blog/2014/11/10/angularjs-best-practices-avoid-using-ng-repeats-index/" rel="nofollow">this link</a></p>&#xA;