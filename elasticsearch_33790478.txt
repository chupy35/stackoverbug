33790478
Highlight with fuzziness and ngram
<p>I guess the title of the topic spoiled you enough :D</p>&#xA;&#xA;<p>I use edge_ngram and highlight to build an autocomplete search. I have added fuzziness in the query to allow users to mispell their search, but it brokes a bit the highlight.</p>&#xA;&#xA;<p>When i write <code>Sport</code> this is what I get :</p>&#xA;&#xA;<pre><code>&lt;em&gt;Spor&lt;/em&gt;t&#xA;&lt;em&gt;Spor&lt;/em&gt;t mécanique&#xA;&lt;em&gt;Spor&lt;/em&gt;t nautique&#xA;</code></pre>&#xA;&#xA;<p>I guess it's because it matches with the token <code>spor</code> generated by the ngram tokenizer.</p>&#xA;&#xA;<p>The query:</p>&#xA;&#xA;<pre><code>{&#xA;    "query": {&#xA;        "bool": {&#xA;            "should": [&#xA;                {&#xA;                    "match": {&#xA;                        "name": {&#xA;                            "query": "sport",&#xA;                            "operator": "and",&#xA;                            "fuzziness": "AUTO"&#xA;                        }&#xA;                    }&#xA;                },&#xA;                {&#xA;                    "match_phrase_prefix": {&#xA;                        "name.raw": {&#xA;                            "query": "sport"&#xA;                        }&#xA;                    }&#xA;                }&#xA;            ]&#xA;        }   &#xA;    },&#xA;    "highlight": {&#xA;        "fields": {&#xA;            "name": {&#xA;              "term_vector": "with_positions_offsets"&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And the mapping:</p>&#xA;&#xA;<pre><code>{&#xA;    "settings": {&#xA;        "analysis": {&#xA;            "analyzer": {&#xA;                "partialAnalyzer": {&#xA;                    "type": "custom",&#xA;                    "tokenizer": "ngram_tokenizer",&#xA;                    "filter": ["asciifolding", "lowercase"]&#xA;                },&#xA;                "keywordAnalyzer": {&#xA;                    "type": "custom",&#xA;                    "tokenizer": "keyword",&#xA;                    "filter": ["asciifolding", "lowercase"]&#xA;                },&#xA;                "searchAnalyzer": {&#xA;                    "type": "custom",&#xA;                    "tokenizer": "standard",&#xA;                    "filter": ["asciifolding", "lowercase"]&#xA;                }&#xA;            },&#xA;&#xA;            "tokenizer": {&#xA;                "ngram_tokenizer": {&#xA;                    "type": "edge_ngram",&#xA;                    "min_gram": "1",&#xA;                    "max_gram": "15",&#xA;                    "token_chars": [ "letter", "digit" ]&#xA;                }&#xA;            }&#xA;        }&#xA;    },&#xA;&#xA;    "mappings": {&#xA;        "place": {&#xA;            "properties": {&#xA;                "name": {&#xA;                    "type": "string",&#xA;                    "index_analyzer": "partialAnalyzer",&#xA;                    "search_analyzer": "searchAnalyzer",&#xA;                    "term_vector": "with_positions_offsets",&#xA;                    "fields": {&#xA;                        "raw": {&#xA;                            "type": "string",&#xA;                            "analyzer": "keywordAnalyzer"&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I tried to add a new match clause without fuzziness in the query to try to match the keyword <strong>before</strong> the match with fuzziness but it changed nothing.</p>&#xA;&#xA;<pre><code>'match': {&#xA;   'name': {&#xA;   'query': 'sport',&#xA;   'operator': 'and'&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Any idea how I can handle this?</p>&#xA;&#xA;<p>Regards, Raphaël</p>&#xA;
<p>You could do that with <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-highlighting.html#_highlight_query" rel="nofollow">highlight_query</a> I guess</p>&#xA;&#xA;<p>Try this in your highlighting query.</p>&#xA;&#xA;<pre><code>"highlight": {&#xA;    "fields": {&#xA;      "name": {&#xA;        "term_vector": "with_positions_offsets",&#xA;        "highlight_query": {&#xA;          "match": {&#xA;            "name.raw": {&#xA;                "query": "spotr",&#xA;                "fuzziness": 2&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>I hope it helps.</p>&#xA;