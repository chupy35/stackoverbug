33115095
How can i calculate statistics for a given type within an elasticsearch index
<p>I know that the <code>_stats</code> API provides index level statistics for one or more indices. I'm particularly interested in the <code>store</code> parameter, which is the size of the index in bytes. I'd like to calculate the size in bytes for a given type within an index, however </p>&#xA;&#xA;<p><code>curl http://localhost:9200/myIndex/_stats/indexing?types=myType</code></p>&#xA;&#xA;<p>does not return the size in bytes for <code>myType</code>. Is there an API that would give me the statistics that would state: <code>myType</code> is Xgb in size and represents Y% of <code>myIndex</code> ?</p>&#xA;
<p>You need to use the <code>/store</code> sub-path instead of the <code>/indexing</code> sub-path like this:</p>&#xA;&#xA;<pre><code>curl http://localhost:9200/myIndex/_stats/store?types=myType&#xA;                                            ^&#xA;                                            |&#xA;                                     use "store" here&#xA;</code></pre>&#xA;&#xA;<p>And you'll get all the <code>store</code> data you're interested in</p>&#xA;&#xA;<pre><code>{&#xA;  "_shards" : {&#xA;    "total" : 15,&#xA;    "successful" : 15,&#xA;    "failed" : 0&#xA;  },&#xA;  "_all" : {&#xA;    "primaries" : {&#xA;      "store" : {&#xA;        "size_in_bytes" : 2250058413,&#xA;        "throttle_time_in_millis" : 0&#xA;      }&#xA;    },&#xA;    "total" : {&#xA;      "store" : {&#xA;        "size_in_bytes" : 2250058413,&#xA;        "throttle_time_in_millis" : 0&#xA;      }&#xA;    }&#xA;  },&#xA;  "indices" : {&#xA;    "myIndex" : {&#xA;      "primaries" : {&#xA;        "store" : {&#xA;          "size_in_bytes" : 1444291,&#xA;          "throttle_time_in_millis" : 0&#xA;        }&#xA;      },&#xA;      "total" : {&#xA;        "store" : {&#xA;          "size_in_bytes" : 1444291,&#xA;          "throttle_time_in_millis" : 0&#xA;        }&#xA;      }&#xA;    },&#xA;    ...&#xA;  }&#xA;}&#xA;</code></pre>&#xA;
<p>The above only works with indexing.  You are specifying types, but you are still seeing the store for total of all types.</p>&#xA;