32264571
Elastic search filter
<p>I am new to Elastic search . Please help me in finding the filter/query to be written to match the exact records using Java API.</p>&#xA;&#xA;<pre><code>Below is the mongodb record .I need to get both the record matching the word 'Jerry' using elastic search.&#xA;&#xA;{&#xA;        "searchcontent" : [&#xA;                {&#xA;                        "key" : "Jerry",&#xA;                        "sweight" : "1"&#xA;                },{&#xA;                        "key" : "Kate",&#xA;                        "sweight" : "1"&#xA;                },&#xA;&#xA;        ],&#xA;        "contentId" : "CON_4",&#xA;        "keyword" : "TEST",&#xA;        "_id" : ObjectId("55ded619e4b0406bbd901a47")&#xA;},&#xA;{&#xA;        "searchcontent" : [&#xA;                {&#xA;                        "key" : "TOM",&#xA;                        "sweight" : "2"&#xA;                },{&#xA;                        "key" : "Kruse",&#xA;                        "sweight" : "2"&#xA;                }&#xA;&#xA;        ],&#xA;        "contentId" : "CON_3",&#xA;        "keyword" : "Jerry",&#xA;        "_id" : ObjectId("55ded619e4b0406ccd901a47")&#xA;}&#xA;</code></pre>&#xA;
<p>A <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-multi-match-query.html" rel="nofollow">Multi-Match</a> query is what you need to search across multiple fields. Below query will search for the word "jerry" in both the fields "searchcontent.key" and "keyword" which is what you want.</p>&#xA;&#xA;<pre><code>POST &lt;index name&gt;/&lt;type name&gt;/_search&#xA;{&#xA;   "query": {&#xA;      "multi_match": {&#xA;         "query": "jerry",&#xA;         "fields": [&#xA;            "searchcontent.key",&#xA;            "keyword"&#xA;         ]&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;
<p>And if you would like to search in all the fields.&#xA;Then you can just do a match _all query,</p>&#xA;&#xA;<pre><code>POST &lt;index name&gt;/&lt;type name&gt;/_search.&#xA;     {&#xA;     "query": {&#xA;        "match" : {&#xA;            "_all" : "Jerry"&#xA;            }&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>This searches for 'Jerry' in all the fields.</p>&#xA;
<p>There is no single solution, it depends how you map your data in elastic search and what you are indexing</p>&#xA;&#xA;<p>GET /intu/_settings</p>&#xA;&#xA;<p>You can use: <strong>query string</strong>.</p>&#xA;&#xA;<p>If you don't need to combine filter you can remove bool and should.</p>&#xA;&#xA;<p>From the documentation: <em>"The bool query takes a more-matches-is-better approach, so the score from each matching must or should clause will be added together to provide the final _score for each document."</em></p>&#xA;&#xA;<p>For example:</p>&#xA;&#xA;<pre><code>GET /yourstaff/_search&#xA;{&#xA;"query": {&#xA;  "filtered": {&#xA;     "query": {&#xA;        "bool": {&#xA;           "should":&#xA;              {&#xA;                 "query_string": {&#xA;                    "query": "jerry"&#xA;                 }&#xA;              }&#xA;        }&#xA;     }&#xA;  }&#xA; }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Take a look to the documentation:</p>&#xA;&#xA;<ul>&#xA;<li><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html#query-string-syntax" rel="nofollow" title="Query string">Query string</a></p></li>&#xA;<li><p><a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/term-vs-full-text.html" rel="nofollow">Term vs full-search</a></p></li>&#xA;<li><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-bool-query.html" rel="nofollow">Bool query</a></p></li>&#xA;</ul>&#xA;&#xA;<p>Use <a href="https://chrome.google.com/webstore/detail/sense-beta/lhjgkmllcaadmopgmanpapmpjgmfcfig?hl=en" rel="nofollow">Sense</a> to figure out what results you want to have</p>&#xA;
<p>Using filter is a better option as it caches the results..</p>&#xA;&#xA;<pre><code>{&#xA; "query":&#xA; {&#xA;  "bool":&#xA;  {&#xA;   "should":&#xA;   [&#xA;    {&#xA;     "term":&#xA;     {&#xA;      "searchcontent.key":"jerry"&#xA;     }&#xA;    },&#xA;   {&#xA;    "term":&#xA;    {&#xA;     "keyword":"jerry"&#xA;    }&#xA;   }&#xA;  ]&#xA; }&#xA;}&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><a href="https://www.elastic.co/blog/found-optimizing-elasticsearch-searches" rel="nofollow">https://www.elastic.co/blog/found-optimizing-elasticsearch-searches</a></p>&#xA;&#xA;<p>A suggested read for better search.</p>&#xA;