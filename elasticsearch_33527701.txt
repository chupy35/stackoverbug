33527701
How to limit a date histogram aggregation of nested documents to a specific date range?
<p><strong>Version</strong></p>&#xA;&#xA;<p>Using Elasticsearch <code>1.7.2</code></p>&#xA;&#xA;<p><strong>Objective</strong></p>&#xA;&#xA;<p>I would like to create a graph of the number of predictions made by users per day for the last <code>n</code> days. In this case, 10 days.</p>&#xA;&#xA;<p><strong>Current query</strong></p>&#xA;&#xA;<pre class="lang-js prettyprint-override"><code>{&#xA;    "size": 0,&#xA;    "aggs": {&#xA;        "predictions": {&#xA;            "nested": {&#xA;                "path": "user_answers"&#xA;            },&#xA;            "aggs": {&#xA;                "predictions_over_time": {&#xA;                    "date_histogram": {&#xA;                        "field": "user_answers.created",&#xA;                        "interval": "day",&#xA;                        "format": "yyyy-MM-dd",&#xA;                        "min_doc_count": 0&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Issue</strong></p>&#xA;&#xA;<p>This query will return a histogram but will return buckets for all available dates across all documents. It doesn't restrict to a specific date range.</p>&#xA;&#xA;<p><strong>What have I tried?</strong></p>&#xA;&#xA;<p>I've tried a number of approaches to solving this, all of which have failed.&#xA;* Range filter, then histogram that&#xA;* Date range aggregation, then histogram the buckets&#xA;* Using <code>extended_bounds</code> with, full dates, <code>now-10d</code> and also timestamps&#xA;* Trying a range filter inside the histogram aggregation</p>&#xA;&#xA;<p>Any guidance would be appreciated! Thanks.</p>&#xA;
<p>You need to add a query. Query can be anything except from post_filter. It should be nested and contain date range. One of the ways is to define a constant score query. Inside constant score query, use a nested filter which should use a range filter. </p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "constant_score": {&#xA;      "filter": {&#xA;        "nested": {&#xA;          "path": "user_answers",&#xA;           "filter": {&#xA;             "range": {&#xA;               "user_answers.created": {&#xA;                 "gte": "now",&#xA;                 "lte": "now -10d"&#xA;               }&#xA;             }&#xA;           }&#xA;        }&#xA;      }&#xA;&#xA;    }&#xA;  }&#xA;} &#xA;</code></pre>&#xA;&#xA;<p>Confirm if this works for you. </p>&#xA;
<p><code>query</code> didn't work for me in that situation, what I used is a third aggs:</p>&#xA;&#xA;<pre><code>{&#xA;    "size": 0,&#xA;    "aggs": {&#xA;        "user_answers": {&#xA;            "nested": { "path": "user_answers" },&#xA;            "aggs": {&#xA;                "timed_user_answers": {&#xA;                    "filter": {&#xA;                        "range": {&#xA;                            "user_answers.created": {&#xA;                                "gte": "now",&#xA;                                "lte": "now -10d"&#xA;                            }&#xA;                        }&#xA;                    },&#xA;                    "aggs": {&#xA;                        "predictions_over_time": {&#xA;                            "date_histogram": {&#xA;                                "field": "user_answers.created",&#xA;                                "interval": "day",&#xA;                                "format": "yyyy-MM-dd",&#xA;                                "min_doc_count": 0&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>One <code>aggs</code> specifies <code>nested</code>, one specifies <code>filter</code>, and the last specifies the actual aggregation. Don't know why this syntax makes sense, but you seem to not be able to use two on the same <code>aggs</code>.</p>&#xA;