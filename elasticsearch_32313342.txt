32313342
embedded elasticsearch - second start up takes long time
<p>I am working on a solution that uses embedded elasticsearch server - on one local machine. The scenario is:</p>&#xA;&#xA;<p>1)create cluster with one node. Import data - 3 million records in ~180 indexes and 911 shards. Data is available, search works and returns expected data, the health seems good:</p>&#xA;&#xA;<pre><code>{&#xA;  "cluster_name" : "cn1441023806894",&#xA;  "status" : "green",&#xA;  "timed_out" : false,&#xA;  "number_of_nodes" : 1,&#xA;  "number_of_data_nodes" : 1,&#xA;  "active_primary_shards" : 911,&#xA;  "active_shards" : 911,&#xA;  "relocating_shards" : 0,&#xA;  "initializing_shards" : 0,&#xA;  "unassigned_shards" : 0&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>2) Now, I shutdown the server - this is my console output:</p>&#xA;&#xA;<pre><code>sie 31, 2015 2:51:36 PM org.elasticsearch.node.internal.InternalNode stop&#xA;INFO: [testbg] stopping ...&#xA;sie 31, 2015 2:51:50 PM org.elasticsearch.node.internal.InternalNode stop&#xA;INFO: [testbg] stopped&#xA;sie 31, 2015 2:51:50 PM org.elasticsearch.node.internal.InternalNode close&#xA;INFO: [testbg] closing ...&#xA;sie 31, 2015 2:51:50 PM org.elasticsearch.node.internal.InternalNode close&#xA;INFO: [testbg] closed&#xA;</code></pre>&#xA;&#xA;<p>The database folder is around 2.4 GB.</p>&#xA;&#xA;<p>3) Now i start the server again.... and it takes around 10 minutes to reach status green, example health:</p>&#xA;&#xA;<pre><code>{&#xA;  "cluster_name" : "cn1441023806894",&#xA;  "status" : "red",&#xA;  "timed_out" : false,&#xA;  "number_of_nodes" : 1,&#xA;  "number_of_data_nodes" : 1,&#xA;  "active_primary_shards" : 68,&#xA;  "active_shards" : 68,&#xA;  "relocating_shards" : 0,&#xA;  "initializing_shards" : 25,&#xA;  "unassigned_shards" : 818&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>After that process, the database folder is ~0.8 GB.</p>&#xA;&#xA;<p>Then I shutdown the database, and open it again, and now it gets green in 10 seconds. All next close/start operations are quite fast.</p>&#xA;&#xA;<p>My configuration:</p>&#xA;&#xA;<pre><code>settings.put(SET_NODE_NAME, projectNameLC);&#xA;settings.put(SET_PATH_DATA, projectLocation + "\\" + CommonConstants.ANALYZER_DB_FOLDER); &#xA;settings.put(SET_CLUSTER_NAME, clusterName);&#xA;settings.put(SET_NODE_DATA, true);&#xA;settings.put(SET_NODE_LOCAL, true);&#xA;settings.put(SET_INDEX_REFRESH_INTERVAL, "-1");&#xA;settings.put(SET_INDEX_MERGE_ASYNC, true);&#xA;//the following settings are my attempt to speed up loading on the 2nd startup&#xA;settings.put("cluster.routing.allocation.disk.threshold_enabled", false);&#xA;settings.put("index.number_of_replicas", 0);&#xA;settings.put("cluster.routing.allocation.disk.include_relocations", false);&#xA;settings.put("cluster.routing.allocation.node_initial_primaries_recoveries", 25);&#xA;settings.put("cluster.routing.allocation.node_concurrent_recoveries", 8);&#xA;settings.put("indices.recovery.concurrent_streams", 6);&#xA;settings.put("indices.recovery.concurrent_streams", 6);&#xA;settings.put("indices.recovery.concurrent_small_file_streams", 4);&#xA;</code></pre>&#xA;&#xA;<p>The questions:</p>&#xA;&#xA;<p>1) What happens during the second start up? The db folder size reduces from 2.4gb into 800 megabytes.</p>&#xA;&#xA;<p>2)If this process is necessary, can it be trigerred manually, so I can show nice "please wait" dialog?</p>&#xA;&#xA;<p>The user experience on teh second database opening is very bad and I need to change it.</p>&#xA;&#xA;<p>Cheers&#xA;Marcin</p>&#xA;
<p>on another forum - <a href="https://discuss.elastic.co/t/initializing-shards-second-db-start-up-takes-long-time/28357" rel="nofollow">https://discuss.elastic.co/t/initializing-shards-second-db-start-up-takes-long-time/28357</a> - I got answer from Mike Simos. The solution is to call synced flush on an index after I finished adding data to it:</p>&#xA;&#xA;<pre><code>client.admin().indices().flush(new FlushRequest(idxName));&#xA;</code></pre>&#xA;&#xA;<p>And it did the trick: now my database starts in 30 seconds not 10 minutes, the time to flush the data is moved to the import part of my business logic, and that is acceptable. I also noticed that the time impact on import is not very big.</p>&#xA;