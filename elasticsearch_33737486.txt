33737486
Elasticsearch Date Histogram aggregation with specific time range
<p>We are performing 3 level aggregation for a certain date range we require fetching the distinct "Website" name grouped by distinct "HitCount" vale grouped by "DateTime" intervals. Here, histogram aggregation allows us to fetch the interval based documents, however the "key_as_string" of date is always considered from 12 AM instead of the date range time provided in the query. Depending on the interval period value, the day (24 hrs starting from 12 AM of the from time) is divided and aggregation output is given.</p>&#xA;&#xA;<pre><code>For e.g. we have given the from time as "2015-11-10T11:00:00" and To time as "2015-11-13T11:00:00" with interval of 8 hrs&#xA;&#xA;Following is the query used:&#xA;&#xA;{&#xA;  "size": 0,&#xA;  "query": {&#xA;    "filtered": {&#xA;      "filter": {&#xA;        "bool": {&#xA;          "must": [&#xA;            {&#xA;              "range": {&#xA;                "DateTime": {&#xA;                  "from": "2015-11-10T11:00:00",&#xA;                  "to": "2015-11-13T11:00:00"&#xA;                }&#xA;              }&#xA;            }&#xA;          ]&#xA;        }&#xA;      }&#xA;    }&#xA;  },&#xA;  "aggs": {&#xA;    "Website": {&#xA;      "terms": {&#xA;        "field": "Website",&#xA;        "size": 0,&#xA;        "order": {&#xA;          "_count": "desc"&#xA;        }&#xA;      },&#xA;      "aggs": {&#xA;        "HitCount": {&#xA;          "terms": {&#xA;            "field": "HitCount",&#xA;            "size": 0,&#xA;            "order": {&#xA;              "_count": "desc"&#xA;            }&#xA;          },&#xA;          "aggs": {&#xA;            "DateTime": {&#xA;              "date_histogram": {&#xA;                "field": "DateTime",&#xA;                "interval": "8h",&#xA;                "min_doc_count": 0,&#xA;                "extended_bounds": {&#xA;                  "min": 1447153200000,&#xA;                  "max": 1447412400000&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;The query Output wrt 3rd level DateTime aggregation is:&#xA;&#xA;"DateTime": {&#xA;"buckets": [&#xA;{&#xA;"key_as_string": "2015-11-10T08:00:00.000Z",&#xA;"key": 1447142400000,&#xA;"doc_count": 62698&#xA;}&#xA;,&#xA;{&#xA;"key_as_string": "2015-11-10T16:00:00.000Z",&#xA;"key": 1447171200000,&#xA;"doc_count": 248118&#xA;}&#xA;,&#xA;{&#xA;"key_as_string": "2015-11-11T00:00:00.000Z",&#xA;"key": 1447200000000,&#xA;"doc_count": 224898&#xA;}&#xA;,&#xA;{&#xA;"key_as_string": "2015-11-11T08:00:00.000Z",&#xA;"key": 1447228800000,&#xA;"doc_count": 221663&#xA;}&#xA;,&#xA;{&#xA;"key_as_string": "2015-11-11T16:00:00.000Z",&#xA;"key": 1447257600000,&#xA;"doc_count": 220935&#xA;}&#xA;,&#xA;{&#xA;"key_as_string": "2015-11-12T00:00:00.000Z",&#xA;"key": 1447286400000,&#xA;"doc_count": 219340&#xA;}&#xA;,&#xA;{&#xA;"key_as_string": "2015-11-12T08:00:00.000Z",&#xA;"key": 1447315200000,&#xA;"doc_count": 218452&#xA;}&#xA;,&#xA;{&#xA;"key_as_string": "2015-11-12T16:00:00.000Z",&#xA;"key": 1447344000000,&#xA;"doc_count": 190&#xA;}&#xA;,&#xA;{&#xA;"key_as_string": "2015-11-13T00:00:00.000Z",&#xA;"key": 1447372800000,&#xA;"doc_count": 0&#xA;}&#xA;,&#xA;{&#xA;"key_as_string": "2015-11-13T08:00:00.000Z",&#xA;"key": 1447401600000,&#xA;"doc_count": 0&#xA;}&#xA;]&#xA;}&#xA;&#xA;&#xA;Expected Output:&#xA;&#xA;Here, we would expect the intervals to be divided and queried as:&#xA;2015-11-10T11:00:00 to 2015-11-10T19:00:00&#xA;2015-11-10T19:00:00 to 2015-11-11T03:00:00&#xA;2015-11-11T03:00:00 to 2015-11-11T11:00:00&#xA;2015-11-11T11:00:00 to 2015-11-11T19:00:00&#xA;2015-11-11T19:00:00 to 2015-11-12T03:00:00&#xA;2015-11-12T03:00:00 to 2015-11-12T11:00:00&#xA;2015-11-12T11:00:00 to 2015-11-12T19:00:00&#xA;2015-11-12T19:00:00 to 2015-11-13T03:00:00&#xA;2015-11-13T03:00:00 to 2015-11-13T11:00:00&#xA;&#xA;&#xA;ie. the "key_as_string" output value should be 2015-11-10T11:00:00, 2015-11-10T19:00:00, .... and so on&#xA;&#xA;The above is required as we have given a From &amp; to time of 11 AM so that it can be a updated value of every 8 hrs whenever we fire the query rather than getting a fixed range of time for the whole day.&#xA;&#xA;Note: ES 1.7 is used&#xA;</code></pre>&#xA;
<p>The documentation explains that you can use the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/1.7/search-aggregations-bucket-datehistogram-aggregation.html" rel="nofollow">offset parameter</a>.</p>&#xA;&#xA;<p>So</p>&#xA;&#xA;<pre><code>{&#xA;  "size": 0,&#xA;  "query": {&#xA;    "filtered": {&#xA;      "filter": {&#xA;        "bool": {&#xA;          "must": [&#xA;            {&#xA;              "range": {&#xA;                "DateTime": {&#xA;                  "from": "2015-11-10T11:00:00",&#xA;                  "to": "2015-11-13T11:00:00"&#xA;                }&#xA;              }&#xA;            }&#xA;          ]&#xA;        }&#xA;      }&#xA;    }&#xA;  },&#xA;  "aggs": {&#xA;    "Website": {&#xA;      "terms": {&#xA;        "field": "Website",&#xA;        "size": 0,&#xA;        "order": {&#xA;          "_count": "desc"&#xA;        }&#xA;      },&#xA;      "aggs": {&#xA;        "HitCount": {&#xA;          "terms": {&#xA;            "field": "HitCount",&#xA;            "size": 0,&#xA;            "order": {&#xA;              "_count": "desc"&#xA;            }&#xA;          },&#xA;          "aggs": {&#xA;            "DateTime": {&#xA;              "date_histogram": {&#xA;                "field": "DateTime",&#xA;                "interval": "8h",&#xA;                "min_doc_count": 0,&#xA;                "offset": "+11h"&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;