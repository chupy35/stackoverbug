34171223
exact query search in elasticsearch
<p>I have this query that returns if the word "mumbai" appear anywhere in the title.</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "filtered": {&#xA;      "query": {&#xA;        "match_all": {}&#xA;      },&#xA;      "filter": {&#xA;        "term": {&#xA;          "title": "mumbai"&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So the result contains...</p>&#xA;&#xA;<pre><code>mumbai&#xA;mumbai ports&#xA;financial capital mumbai&#xA;</code></pre>&#xA;&#xA;<p>I need to return only "mumbai" term and not the other documents where mumbai word is associated with other phrases. Only the first result is correct. How do I discard other results?</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>update </p>&#xA;&#xA;<p>This query is working as expected and it lists the sort value 58 (random value) if the match is exact.</p>&#xA;&#xA;<pre><code>curl -XPOST "localhost:9200/enwiki_content/page/_search?pretty" -d'&#xA;{ &#xA;    "fields": "title",&#xA;    "query": {&#xA;        "match": {"title": "Mumbai"}&#xA;    },&#xA;    "sort": {&#xA;    "_script": {&#xA;        "script":  "_source.title == \"Mumbai\" ? \"58\": \"78\";",&#xA;        "type": "string" &#xA;&#xA;}&#xA;}&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>I need to return the title where match is exact Mumbai (and hence the sort value 58). How do I filter or add the script to "fields" parameter?</p>&#xA;
<p>Try the <code>term</code> query. It will do exact match search</p>&#xA;&#xA;<pre><code>{&#xA;    "query": {&#xA;        "bool": {&#xA;            "must": [&#xA;                {&#xA;                    "term": {&#xA;                        "title": "mumbai"&#xA;                    }&#xA;                }&#xA;            ]&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Term query will not match Mumbai and mumbai, it will be counted as different words</p>&#xA;&#xA;<p><strong>Second Option:</strong>&#xA;If you can change the mapping then you can set the <code>title</code> field as <code>not_analyzed</code></p>&#xA;&#xA;<p><strong>Third Option</strong></p>&#xA;&#xA;<p><code>match</code> query with analyzer option</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "match": {&#xA;      "title": {&#xA;        "query": "mumbai",&#xA;        "analyzer": "keyword"&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;
<p>To get mumbai to match with doc which contains only mumbai and nothing else, you'll have to store a token count field for the field you are searching on.&#xA;This token count field will contain the number of tokens the field contains. Using this field, you can match mumbai on your title field, and match token_count field with the number of tokens in mumbai (which is one). &#xA;Note that token_count field in other documents will more than 1.</p>&#xA;&#xA;<p>For reference:&#xA;<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/token-count.html" rel="nofollow noreferrer">https://www.elastic.co/guide/en/elasticsearch/reference/current/token-count.html</a></p>&#xA;&#xA;<p>Note: If you are using stopwords, then you need to know about the other caveats related to token count. You can find the information in the above link.</p>&#xA;