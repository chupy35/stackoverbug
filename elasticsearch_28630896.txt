28630896
Is this a right way to find in nested type that a user has done an event e1 'n' times and has not done another event e2?
<p>I always get wrong result when I use must_not in bool. I think, I am creating a wrong query. Does anybody knows how I get user which 4 times done e1 event and not done any e2 event.&#xA;Below is Mapping of type user with nested event.</p>&#xA;&#xA;<pre><code> {  &#xA;   "beta":{  &#xA;      "mappings":{  &#xA;         "user":{  &#xA;            "dynamic_templates":[  &#xA;               {  &#xA;                  "string_template":{  &#xA;                     "mapping":{  &#xA;                        "type":"string",&#xA;                        "index":"analyzed",&#xA;                        "analyzer":"string_lowercase"&#xA;                     },&#xA;                     "match":"*",&#xA;                     "match_mapping_type":"string"&#xA;                  }&#xA;               }&#xA;            ],&#xA;            "_routing":{  &#xA;               "required":true,&#xA;               "path":"_shardId"&#xA;            },&#xA;            "properties":{  &#xA;               "event":{  &#xA;                  "type":"nested",&#xA;                  "properties":{  &#xA;                     "_date":{  &#xA;                        "type":"date",&#xA;                        "format":"dateOptionalTime"&#xA;                     },&#xA;                     "count":{  &#xA;                        "type":"long"&#xA;                     },&#xA;                     "first_date":{  &#xA;                        "type":"date",&#xA;                        "format":"dateOptionalTime"&#xA;                     },&#xA;                     "name":{  &#xA;                        "type":"string",&#xA;                        "analyzer":"string_lowercase"&#xA;                     },&#xA;                     "last_date":{  &#xA;                        "type":"date",&#xA;                        "format":"dateOptionalTime"&#xA;                     }&#xA;                  }&#xA;               }&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;
<p>Why do you have 2 query nodes?</p>&#xA;&#xA;<p>And since you are using exact matches, you are better off with filter than query from performance perspective and caching.</p>&#xA;&#xA;<p>Can you try this ?</p>&#xA;&#xA;<pre><code>{&#xA;    "filtered" : {&#xA;        "query" : { "match_all" : {} },&#xA;        "filter" : {&#xA;            "nested" : {&#xA;                "path" : "event",&#xA;                "filter" : {&#xA;                    "bool" : {&#xA;                        "must" : [&#xA;                            {&#xA;                                "event.name":'e1'&#xA;                            },&#xA;                            {&#xA;                                "event.count":4&#xA;                            }&#xA;                        ]&#xA;                        "must_not" : {&#xA;                            "match" : {&#xA;                            "event.name" : "e2"&#xA;                            }&#xA;                         }&#xA;                    }&#xA;                },&#xA;                "_cache" : true&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;