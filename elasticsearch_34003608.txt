34003608
summing a bunch of values given a condition in elasticsearch
<p>Given the following elasticsearch document, how would I construct a search that would sum the values of the seconds column for a given datetime range? </p>&#xA;&#xA;<p>See below for my current query.</p>&#xA;&#xA;<pre><code>{&#xA;  "took": 1,&#xA;  "timed_out": false,&#xA;  "_shards": {&#xA;    "total": 5,&#xA;    "successful": 5,&#xA;    "failed": 0&#xA;  },&#xA;  "hits": {&#xA;    "total": 2,&#xA;    "max_score": 1,&#xA;    "hits": [&#xA;      {&#xA;        "_index": "searchdb",&#xA;        "_type": "profile",&#xA;        "_id": "1825",&#xA;        "_score": 1,&#xA;        "_source": {&#xA;          "id": 1825,&#xA;          "market": "Chicago",&#xA;          "geo_location": {&#xA;            "lat": 41.1234,&#xA;            "lon": -87.5678&#xA;          },&#xA;          "hourly_values": [&#xA;            {&#xA;              "datetime": "1997-07-16T19:00:00.00+00:00",&#xA;              "seconds": 1200&#xA;            },&#xA;            {&#xA;              "datetime": "1997-07-16T19:20:00.00+00:00",&#xA;              "seconds": 1200&#xA;            },&#xA;            {&#xA;              "datetime": "1997-07-16T19:20:00.00+00:00",&#xA;              "seconds": 1200&#xA;            }&#xA;          ]&#xA;        }&#xA;      },&#xA;      {&#xA;        "_index": "searchdb",&#xA;        "_type": "profile",&#xA;        "_id": "1808",&#xA;        "_score": 1,&#xA;        "_source": {&#xA;          "id": 1808,&#xA;          "market": "Chicago",&#xA;          "geo_location": {&#xA;            "lat": 41.1234,&#xA;            "lon": -87.5678&#xA;          },&#xA;          "hourly_values": [&#xA;            {&#xA;              "datetime": "1997-07-16T19:00:00.00+00:00",&#xA;              "seconds": 900&#xA;            },&#xA;            {&#xA;              "datetime": "1997-07-16T19:20:00.00+00:00",&#xA;              "seconds": 1200&#xA;            },&#xA;            {&#xA;              "datetime": "1997-07-16T19:20:00.00+00:00",&#xA;              "seconds": 800&#xA;            }&#xA;          ]&#xA;        }&#xA;      }&#xA;    ]&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>Below is my current query. The problem with it is it doesn't take into consideration the datetime field. I need to be able to sum only the seconds values that fall within a given datetime range in the query.</p>&#xA;&#xA;<pre><code>{&#xA;    "aggs": {&#xA;        "Ids": {&#xA;            "terms": {&#xA;                "field": "id",&#xA;                "size": 0&#xA;            },&#xA;            "aggs": {&#xA;                "Nesting": {&#xA;                    "nested": {&#xA;                        "path": "hourly_values"&#xA;                    },&#xA;                    "aggs": {&#xA;                        "availability": {&#xA;                            "sum": {&#xA;                                "field": "hourly_values.seconds"&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;} &#xA;</code></pre>&#xA;&#xA;<p>I know you can use a range, something like this:</p>&#xA;&#xA;<pre><code>"filter" : {&#xA;                "range" : { "timestamp" : { "from" : "now/1d+9.5h", "to" : "now/1d+16h" }}&#xA;            }&#xA;</code></pre>&#xA;&#xA;<p>but I can't figure out how to integrate that into my query to get the desired output. </p>&#xA;&#xA;<p>For clarity, my desired output is to return each of the objects returned from the query, and the values of the summation of the seconds fields, but I only want to sum the values for the given time range. </p>&#xA;
<p>I think this can be done with <a href="https://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-aggregations-bucket-filter-aggregation.html" rel="nofollow">filter aggregation</a></p>&#xA;&#xA;<p>Try this</p>&#xA;&#xA;<pre><code>{&#xA;  "aggs": {&#xA;    "Ids": {&#xA;      "terms": {&#xA;        "field": "id",&#xA;        "size": 0&#xA;      },&#xA;      "aggs": {&#xA;        "Nesting": {&#xA;          "nested": {&#xA;            "path": "hourly_values"&#xA;          },&#xA;          "aggs": {&#xA;            "filtered_result": {&#xA;              "filter": {&#xA;                "query": {&#xA;                  "range": {&#xA;                    "hourly_values.datetime": {&#xA;                      "gt": "1997-07-16T19:10:00.00+00:00",&#xA;                      "lt": "1997-07-16T19:22:00.00+00:00"&#xA;                    }&#xA;                  }&#xA;                }&#xA;              },&#xA;              "aggs": {&#xA;                "availability": {&#xA;                  "sum": {&#xA;                    "field": "hourly_values.seconds"&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  },&#xA;  "size": 0&#xA;} &#xA;</code></pre>&#xA;&#xA;<p>The result I get</p>&#xA;&#xA;<pre><code>"aggregations": {&#xA;      "Ids": {&#xA;         "doc_count_error_upper_bound": 0,&#xA;         "sum_other_doc_count": 0,&#xA;         "buckets": [&#xA;            {&#xA;               "key": "1808",&#xA;               "doc_count": 1,&#xA;               "Nesting": {&#xA;                  "doc_count": 3,&#xA;                  "filtered_result": {&#xA;                     "doc_count": 2,&#xA;                     "availability": {&#xA;                        "value": 2000&#xA;                     }&#xA;                  }&#xA;               }&#xA;            },&#xA;            {&#xA;               "key": "1825",&#xA;               "doc_count": 1,&#xA;               "Nesting": {&#xA;                  "doc_count": 3,&#xA;                  "filtered_result": {&#xA;                     "doc_count": 2,&#xA;                     "availability": {&#xA;                        "value": 2400&#xA;                     }&#xA;                  }&#xA;               }&#xA;            }&#xA;         ]&#xA;      }&#xA;   }&#xA;</code></pre>&#xA;&#xA;<p>Does this help?</p>&#xA;