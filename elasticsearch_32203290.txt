32203290
Elasticsearch OR filtered query does not return results
<p>I have the following data set:</p>&#xA;&#xA;<pre><code>{&#xA;    "_index": "myIndex",&#xA;    "_type": "myType",&#xA;    "_id": "220005",&#xA;    "_score": 1,&#xA;    "_source": {&#xA;        "id": "220005",&#xA;        "name": "Some Name",&#xA;        "type": "myDataType",&#xA;        "doc_as_upsert": true&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Doing a direct match query like so:</p>&#xA;&#xA;<pre><code>GET typo3data/destination/_search&#xA;{&#xA;    "query": {&#xA;        "match": {&#xA;            "name": "Some Name"&#xA;        }&#xA;    },&#xA;    "size": 500&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Will return the data just fine:</p>&#xA;&#xA;<pre><code>"hits": {&#xA;    "total": 1,&#xA;    "max_score": 3.442347,&#xA;    "hits": [...&#xA;</code></pre>&#xA;&#xA;<p>Doing an OR-query however (I am not sure which syntax is correct, the first syntax is taken from elasticsearch docs, the second is a working query taken from another project with the same versions):</p>&#xA;&#xA;<pre><code>GET typo3data/destination/_search&#xA;{&#xA;    "query": {&#xA;        "filtered": {&#xA;            "query": {&#xA;                "match_all": {}&#xA;            },&#xA;            "filter": {&#xA;                "or": {&#xA;                    "filters": [&#xA;                        {&#xA;                            "term": {&#xA;                                "name": "Some Name"&#xA;                            }&#xA;                        }&#xA;                    ]&#xA;                }&#xA;            }&#xA;        }&#xA;    },&#xA;    "size": 500&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>or</p>&#xA;&#xA;<pre><code>{&#xA;    "query":&#xA;    {&#xA;            "match_all": {}&#xA;    },&#xA;    "filter":&#xA;    {&#xA;            "or":&#xA;            [&#xA;                    { "term": { "name": "Some Name"} },&#xA;                    { "term": { "name": "Some Other Name"} }&#xA;            ]&#xA;    },&#xA;    "size": 1000&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Does not return anything.</p>&#xA;&#xA;<p>The mapping for the name field is:</p>&#xA;&#xA;<pre><code>"name": {&#xA;  "type": "string",&#xA;  "index": "not_analyzed"&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Elasticsearch version is 1.4.4.</p>&#xA;
<p>After extending our mapping to include every field we have:</p>&#xA;&#xA;<pre><code>PUT typo3data/_mapping/destination&#xA;{&#xA;    "someType": {&#xA;        "properties": {&#xA;            "id": {&#xA;                "type": "integer"&#xA;            },&#xA;            "name": {&#xA;                "type": "string",&#xA;                "index": "not_analyzed"&#xA;            },&#xA;            "parentId": {&#xA;                "type": "integer"&#xA;            },&#xA;            "type": {&#xA;                "type": "string"&#xA;            },&#xA;            "generatedUid": {&#xA;                "type": "integer"&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The or-filters were working. So the general answer is: If you have such a problem, check your mappings closely and rather do too much work on them than too little.</p>&#xA;&#xA;<p>If someone has an explanation why this might be happening, I will gladly pass the answer mark on to it.</p>&#xA;
<p>When indexing "some name" , this is broken into tokens as follows - </p>&#xA;&#xA;<pre><code>"some name" =&gt; [ "some" , "name" ]&#xA;</code></pre>&#xA;&#xA;<p>Now in a normal match query , it also does the same above process before matching result. If either "same" or "name" is present , that document is qualified as result</p>&#xA;&#xA;<pre><code> match query ("some name") =&gt; search for term "some" or  "name"&#xA;</code></pre>&#xA;&#xA;<p>The term query does not analyze or tokenize your query. This means that it looks for a exact token or term of "some name" which is not present.</p>&#xA;&#xA;<pre><code> term query ("some name") =&gt; search for term "some name"&#xA;</code></pre>&#xA;&#xA;<p>Hence you wont be seeing any result.&#xA;Things should work fine if you make the field not_analyzed , but then make sure the case is also matching,&#xA;You can read more about the same <a href="http://blog.qbox.io/elasticsearch-aggregation-custom-analyzer" rel="nofollow">here</a>.</p>&#xA;