33986823
Exact and fuzzy search
<p>My setup:</p>&#xA;&#xA;<p>I have some documents with name "Apple", "Apple delicous", ...</p>&#xA;&#xA;<p>This is my query:</p>&#xA;&#xA;<pre><code>GET p_index/_search&#xA;{&#xA;   "query": {&#xA;       "bool": {&#xA;       "should": [&#xA;          {"match": {&#xA;             "name": "apple"&#xA;          }},&#xA;          { "fuzzy": {&#xA;            "name": "apple"&#xA;          }}&#xA;       ]&#xA;       }&#xA;&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I want achieve, that first the exact match is shown and then the fuzzy one:</p>&#xA;&#xA;<ol>&#xA;<li>apple</li>&#xA;<li>apple delicous</li>&#xA;</ol>&#xA;&#xA;<p>Second, i am wondering that i did not get any result if i enter only app in the search:</p>&#xA;&#xA;<pre><code>GET p_index/_search&#xA;{&#xA;   "query": {&#xA;       "bool": {&#xA;       "should": [&#xA;          {"match": {&#xA;             "name": "app"&#xA;          }},&#xA;          { "fuzzy": {&#xA;            "name": "app"&#xA;          }}&#xA;       ]&#xA;       }&#xA;&#xA;   }&#xA;}&#xA;</code></pre>&#xA;
<p>There are two problems here.</p>&#xA;&#xA;<p>1)To give higher score to an exact match you could try adding <code>"index" : "not_analyzed"</code> to your <code>name</code> field like this.</p>&#xA;&#xA;<pre><code>name: {&#xA;    type: 'string',&#xA;    "fields": {&#xA;        "raw": {&#xA;            "type": "string",&#xA;            "index" : "not_analyzed" &lt;--- here&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>After that your query would look like this</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "bool": {&#xA;      "should": [&#xA;        {&#xA;          "match": {&#xA;            "name": "apple"&#xA;          }&#xA;        },&#xA;        {&#xA;          "match": {&#xA;            "name.raw": "apple"&#xA;          },&#xA;          "boost": 5&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This will give higher score for document with "apple" than "apple delicous"</p>&#xA;&#xA;<p>2)To better understand <code>fuzziness</code> you should go through <a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/fuzziness.html" rel="nofollow">this</a> and <a href="https://www.elastic.co/blog/found-fuzzy-search" rel="nofollow">this</a> article.</p>&#xA;&#xA;<p>From the Docs</p>&#xA;&#xA;<blockquote>&#xA;  <p>The fuzziness parameter can be set to AUTO, which results in the&#xA;  following maximum edit distances:</p>&#xA;  &#xA;  <ul>&#xA;  <li>0 for strings of one or two characters</li>&#xA;  <li>1 for strings of three, four, or five characters</li>&#xA;  <li>2 for strings of more than five characters</li>&#xA;  </ul>&#xA;</blockquote>&#xA;&#xA;<p>So, the reason your <code>fuzzy query</code> did not return <em>apple</em> for <em>app</em> is because <code>fuzziness</code> i.e <code>edit distance</code> is 2 between those words and since "app" is only three letter word, <code>fuzziness</code> value is 1. You could achieve the desired result with following query</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "fuzzy": {&#xA;      "name": {&#xA;        "value": "app",&#xA;        "fuzziness": 2&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I seriously would not recommend using this query, because It will return bizarre results, the above query will return <em>cap, arm, pip</em> and lot of other words as they fall within edit distance of 2.</p>&#xA;&#xA;<p>This would better query</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "fuzzy": {&#xA;      "name": {&#xA;        "value": "appl"&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It will return apple.</p>&#xA;&#xA;<p>I hope this helps.</p>&#xA;