33082199
Elasticsearch MapperParsingException
<p>I am trying to index following data to elasticsearch,</p>&#xA;&#xA;<pre><code>{&#xA;"_id": "5619578c1983757a72efef15",&#xA;"aseg": {},&#xA;"cs": {&#xA;    "source": "None",&#xA;    "ss": "In Transit",&#xA;    "sr": "Weight Captured",&#xA;    "act": "+B",&#xA;    "pid": "BAG21678106",&#xA;    "st": "UD",&#xA;    "dest": "Bharatpur_DC (Rajasthan)",&#xA;    "u": "J",&#xA;    "sl": "Jaipur_Hub (Rajasthan)",&#xA;    "ud": "2015-10-12T14:59:44.270000",&#xA;    "sd": "2015-10-12T14:59:44.270000"&#xA;},&#xA;&#xA;"nsl": [&#xA;    {&#xA;        "dt": [&#xA;            2015,&#xA;            10,&#xA;            10&#xA;        ],&#xA;        "code": "X-PPONM"&#xA;    },&#xA;    {&#xA;        "dt": [&#xA;            2015,&#xA;            10,&#xA;            11&#xA;        ],&#xA;        "code": "X-UCI"&#xA;    },&#xA;]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>but in return i am getting this error </p>&#xA;&#xA;<pre><code>MapperParsingException[failed to parse [cs.nsl]]; nested: ElasticsearchIllegalArgumentException[unknown property [dt]];&#xA;</code></pre>&#xA;&#xA;<p>I checked the mapping, mapping is correct, nsl nested inside cs dict has a different mapping than nsl at root level.</p>&#xA;&#xA;<pre><code>            "cs": {&#xA;            "properties": {&#xA;                "act": {&#xA;                    "type": "string"&#xA;                },&#xA;                "add": {&#xA;                    "type": "string"&#xA;                },&#xA;                "asr": {&#xA;                    "type": "string"&#xA;                },&#xA;                "bucket": {&#xA;                    "type": "string"&#xA;                },&#xA;                "dest": {&#xA;                    "type": "string",&#xA;                    "index": "not_analyzed"&#xA;                },&#xA;                "dwbn": {&#xA;                    "type": "string"&#xA;                },&#xA;                "lcld": {&#xA;                    "type": "string"&#xA;                },&#xA;                "lat": {&#xA;                    "type": "string"&#xA;                },&#xA;                "lon": {&#xA;                    "type": "string"&#xA;                },&#xA;                "loc": {&#xA;                    "type": "double"&#xA;                },&#xA;                "nsl": {&#xA;                    "type": "string",&#xA;                    "index": "not_analyzed"&#xA;                },&#xA;                "ntd": {&#xA;                    "type": "date",&#xA;                    "format": "dateOptionalTime"&#xA;                },&#xA;                "pbs": {&#xA;                    "type": "string"&#xA;                },&#xA;                "pid": {&#xA;                    "type": "string"&#xA;                },&#xA;                "pupid": {&#xA;                    "type": "string"&#xA;                },&#xA;                "sd": {&#xA;                    "type": "date",&#xA;                    "format": "dateOptionalTime"&#xA;                },&#xA;                "sl": {&#xA;                    "type": "string",&#xA;                    "index": "not_analyzed"&#xA;                },&#xA;                "source": {&#xA;                    "properties": {&#xA;                        "source": {&#xA;                            "type": "string"&#xA;                        },&#xA;                        "source_id": {&#xA;                            "type": "string"&#xA;                        },&#xA;                        "source_type": {&#xA;                            "type": "string"&#xA;                        }&#xA;                    }&#xA;                },&#xA;                "sr": {&#xA;                    "type": "string"&#xA;                },&#xA;                "ss": {&#xA;                    "type": "string",&#xA;                    "index": "not_analyzed"&#xA;                },&#xA;                "st": {&#xA;                    "type": "string"&#xA;                },&#xA;                "u": {&#xA;                    "type": "string",&#xA;                    "index": "not_analyzed"&#xA;                },&#xA;                "ud": {&#xA;                    "type": "date",&#xA;                    "format": "dateOptionalTime"&#xA;                },&#xA;                "vh": {&#xA;                    "type": "string"&#xA;                }&#xA;            }&#xA;        },&#xA;</code></pre>&#xA;&#xA;<p>and for nsl at root level mapping is as follow</p>&#xA;&#xA;<pre><code>        "nsl": {&#xA;            "properties" : {&#xA;                "code" : {&#xA;                        "type" : "string",&#xA;                        "index": "not_analyzed"&#xA;                    },&#xA;                "dt" : {&#xA;                    "type" : "string",&#xA;                    "index": "not_analyzed"&#xA;                }&#xA;            }&#xA;        },&#xA;</code></pre>&#xA;&#xA;<p>this is happening for only a few records, rest all are syncing fine.&#xA;there isn't any changes in payload.&#xA;Futher nsl is a sparse key inside cs.</p>&#xA;
<p>In your mapping nsl is as follows - </p>&#xA;&#xA;<pre><code>            "nsl": {&#xA;                "type": "string",&#xA;                "index": "not_analyzed"&#xA;            },&#xA;</code></pre>&#xA;&#xA;<p>As per mapping , Elasticsearch is expecting a concrete string value to the nsl field but its a object array in the document you have provided. &#xA;Elasticsearch once it has a mapping , its definite. You cant insert an object data into a string field.</p>&#xA;
<p>I tried your document without pre-setting any mapping as follows:</p>&#xA;&#xA;<pre><code>{&#xA;    "aseg": {},&#xA;    "cs": {&#xA;        "source": "None",&#xA;        "ss": "In Transit",&#xA;        "sr": "Weight Captured",&#xA;        "act": "+B",&#xA;        "pid": "BAG21678106",&#xA;        "st": "UD",&#xA;        "dest": "Bharatpur_DC (Rajasthan)",&#xA;        "u": "J",&#xA;        "nsl":"foo",&#xA;        "sl": "Jaipur_Hub (Rajasthan)",&#xA;        "ud": "2015-10-12T14:59:44.270000",&#xA;        "sd": "2015-10-12T14:59:44.270000"&#xA;    },&#xA;    "nsl": [&#xA;        {&#xA;            "dt": [&#xA;                2015,&#xA;                10,&#xA;                10&#xA;            ],&#xA;            "code": "X-PPONM"&#xA;        },&#xA;        {&#xA;            "dt": [&#xA;                2015,&#xA;                10,&#xA;                11&#xA;            ],&#xA;            "code": "X-UCI"&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And the ES created the mapping as follows:</p>&#xA;&#xA;<pre><code>"nsl": {&#xA;    "properties": {&#xA;        "dt": {&#xA;            "type": "long"&#xA;        },&#xA;        "code": {&#xA;            "type": "string"&#xA;        }&#xA;     }&#xA; }&#xA;</code></pre>&#xA;&#xA;<p>As you can see ES put the "dt" type as "long" which is the internal representation of a date type. So, may be need to change that type?</p>&#xA;&#xA;<p>Also, without seeing the successful document it is difficult to guess but I believe those documents do not have the "dt" field value.</p>&#xA;&#xA;<p>Of course, you are free to put "not_analyzed" as you see fit for any field.</p>&#xA;