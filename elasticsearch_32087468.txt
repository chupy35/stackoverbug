32087468
Which of the following data structures is scalable in elasticsearch?
<p>I want to build an event analytics system, where I can record and query events that a user has done, for example on a website.</p>&#xA;&#xA;<p>My naive idea of the data model was simply a collection of event documents, each event including the userid, event type, and so on. So I thought something like this:</p>&#xA;&#xA;<pre><code>{ userid: Joe, event: homepage }&#xA;{ userid: Mike, event: homepage }&#xA;{ userid: Joe, event: productsPage }&#xA;{ userId: Joe, event: accountSettings }&#xA;{ userId: Joe, event: checkout }&#xA;etc&#xA;</code></pre>&#xA;&#xA;<p>But now I'm struggling to figure out how to do some of the queries I'm most likely to be able to want to do.</p>&#xA;&#xA;<p>For example, I want to say "Give me a list of all users who have visited the homepage AND the products page AND the checkout page"</p>&#xA;&#xA;<p>Seems to me I would need to use my application code to do this, rather than elasticsearch? And I would need to do something like:</p>&#xA;&#xA;<pre><code>Step 1: select all users who have done 'homepage'&#xA;Step 2: select all users who have done 'products page'&#xA;Step 3: select all users who have done 'checkout page'&#xA;Step 4: build a list of only those users who appear in all 3 lists.&#xA;</code></pre>&#xA;&#xA;<p>If I have a userbase of 20 million users, I risk bringing huge lists of data into my application?</p>&#xA;&#xA;<p>An alternative would be to have one document per user, so that Joe looks like</p>&#xA;&#xA;<p>{ userid: Joe, event: [ homepage, productsPage, accountSettings, checkout ] }</p>&#xA;&#xA;<p>and so on.</p>&#xA;&#xA;<p>But then that would involve updating this document every time the user did something. Since elasticsearch writes a new record rather than updating in place, that would involve a horrendous amount of rewriting, given that each user might do say 5000 events in a year, and spread across different days. Not to mention rewriting of the index?</p>&#xA;&#xA;<p>Is there an idiomatic way I'm missing of accomplishing a database by user that can handle regular updates to each user, and buid indexes that allow for fast querying of that data by multiple criteria - eg users who have done eventA AND eventB AND eventC?</p>&#xA;&#xA;<p>Many thanks for all your help!</p>&#xA;
<p>You can use Kibana for Visualizing Data stored in Elasticsearch.</p>&#xA;&#xA;<blockquote>&#xA;  <p>You can use this type of events itself:-</p>&#xA;</blockquote>&#xA;&#xA;<pre><code>{ userid: Joe, event: homepage }&#xA;{ userid: Mike, event: homepage }&#xA;{ userid: Joe, event: productsPage }&#xA;{ userId: Joe, event: accountSettings }&#xA;{ userId: Joe, event: checkout }&#xA;etc&#xA;</code></pre>&#xA;&#xA;<p>After storing your data in Elasticsearch, You can use Kibana and create visualizations specifying AND Filters over the event field.</p>&#xA;