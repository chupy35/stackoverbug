30238491
Elasticsearch match_phrase doesn't perform the same as multi_match with type phrase?
<p>I'm having some trouble turning a <code>match_phrase</code> query into a <code>multi_match</code> query for multiple fields. My original query:</p>&#xA;&#xA;<pre><code>{&#xA;  "from" : 0,&#xA;  "size" : 50,&#xA;  "query" : {&#xA;    "filtered" : {&#xA;      "query" : {&#xA;        "match_phrase" : {&#xA;          "metadata.description" : "Search Terms"&#xA;        }&#xA;      },&#xA;      "filter" : {&#xA;        "bool" : {&#xA;          "must" : [ {&#xA;            "terms" : {&#xA;              "collectionId" : [ "1", "2" ]&#xA;            }&#xA;          } ]&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Returns results correctly, but when I rewrite the <code>match_phrase</code> piece as a <code>multi_match</code> to run against multiple fields:</p>&#xA;&#xA;<pre><code>{&#xA;  "from" : 0,&#xA;  "size" : 50,&#xA;  "query" : {&#xA;    "filtered" : {&#xA;      "query" : {&#xA;        "multi_match" : {&#xA;          "query" : "Search Terms",&#xA;          "fields" : [ "metadata.description", "metadata.title" ],&#xA;          "type" : "phrase"&#xA;        }&#xA;      },&#xA;      "filter" : {&#xA;        "bool" : {&#xA;          "must" : [ {&#xA;            "terms" : {&#xA;              "collectionId" : [ "1", "2" ]&#xA;            }&#xA;          } ]&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I am not getting any results. Is there anything obvious I am doing wrong here?</p>&#xA;&#xA;<p>EDIT:</p>&#xA;&#xA;<p>It must be something to do with the filter, as</p>&#xA;&#xA;<pre><code>{&#xA;  "from" : 0,&#xA;  "size" : 50,&#xA;  "query" : {&#xA;    "match_phrase" : {&#xA;      "metadata.description" : "Search Terms"&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and </p>&#xA;&#xA;<pre><code>{&#xA;  "from" : 0,&#xA;  "size" : 50,&#xA;  "query" : {&#xA;    "multi_match" : {&#xA;      "query" : "Search Terms",&#xA;      "fields" : [ "metadata.description", "metadata.title" ],&#xA;      "type" : "phrase"&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>both perform as expected.</p>&#xA;
<p>I am not sure why, exactly, but not using a <code>filtered</code> query, and applying the filter at the top level</p>&#xA;&#xA;<pre><code>{&#xA;  "from" : 0,&#xA;  "size" : 50,&#xA;  "query" : {&#xA;    "multi_match" : {&#xA;      "query" : "Search Terms",&#xA;      "fields" : [ "metadata.description", "metadata.title" ],&#xA;      "type" : "phrase"&#xA;    }&#xA;  },&#xA;  "filter" : {&#xA;    "bool" : {&#xA;      "must" : [ {&#xA;        "terms" : {&#xA;          "collectionId" : [ "1", "2" ]&#xA;        }&#xA;      } ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>resolves the problem.</p>&#xA;