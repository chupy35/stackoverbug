32839508
Bool query fails if string contains dash and numbers?
<p>I'm doing a search which should return all documents matching that host.&#xA;This works when I search for <code>db.no, vg.no</code> and other hosts that only contain words. If I search for hosts that contain <code>-</code> or numbers, (h-a.no) then ES does not return anything. Even though I know a document matching that host is present.&#xA;The host field id mapped as a string.</p>&#xA;&#xA;<p>Do you have any idea why I'm able to find a document using the q-param, but not a bool query filter?</p>&#xA;&#xA;<p><strong>Ordinary query returns docs matching h-a.no</strong></p>&#xA;&#xA;<pre><code>$ curl -XGET 'http://docker:9200/harvester-test/entries/_search?pretty&amp;q="h-a.no"'&#xA;&#xA;{&#xA;  "took" : 10,&#xA;  "timed_out" : false,&#xA;  "_shards" : {&#xA;    "total" : 5,&#xA;    "successful" : 5,&#xA;    "failed" : 0&#xA;  },&#xA;  "hits" : {&#xA;    "total" : 1,&#xA;    "max_score" : 0.43920785,&#xA;    "hits" : [ {&#xA;      "_source":{&#xA;    "__v":0,&#xA;    "host":"h-a.no",&#xA;    //   [snipp..]&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<p><strong>The bool query</strong></p>&#xA;&#xA;<pre><code>  {&#xA;    "sort": {&#xA;      "posted": "desc"&#xA;    },&#xA;    "query": {&#xA;      "filtered": {&#xA;        "query": {&#xA;          "match_all": {}&#xA;        },&#xA;        "filter": {&#xA;          "bool": {&#xA;            "must": [&#xA;              {&#xA;                "bool": {&#xA;                  "should": [&#xA;                    {}&#xA;                  ]&#xA;                }&#xA;              },&#xA;              {&#xA;                "bool": {&#xA;                  "should": [&#xA;                    [&#xA;                      {&#xA;                        "term": {&#xA;                          "host": "h-a.no"&#xA;                        }&#xA;                      }&#xA;                    ]&#xA;                  ]&#xA;                }&#xA;              },&#xA;              {&#xA;                "bool": {&#xA;                  "must_not": [&#xA;                    {}&#xA;                  ]&#xA;                }&#xA;              },&#xA;              {&#xA;                "bool": {&#xA;                  "must_not": [&#xA;                    {}&#xA;                  ]&#xA;                }&#xA;              },&#xA;              {&#xA;                "bool": {&#xA;                  "must": [&#xA;                    {}&#xA;                  ]&#xA;                }&#xA;              },&#xA;              {&#xA;                "bool": {&#xA;                  "must": [&#xA;                    {}&#xA;                  ]&#xA;                }&#xA;              }&#xA;            ]&#xA;          }&#xA;        }&#xA;      }&#xA;    },&#xA;    "aggs": {&#xA;      "itemscount": {&#xA;        "global": {}&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<p><strong>Mapping</strong></p>&#xA;&#xA;<pre><code>{&#xA;  "harvester" : {&#xA;    "mappings" : {&#xA;      "entries" : {&#xA;        "properties" : {&#xA;          "__v" : {&#xA;            "type" : "long"&#xA;          },&#xA;          "createdAt" : {&#xA;            "type" : "date",&#xA;            "format" : "dateOptionalTime"&#xA;          },&#xA;          "description" : {&#xA;            "type" : "string"&#xA;          },&#xA;          "externalId" : {&#xA;            "type" : "string"&#xA;          },&#xA;          "fields" : {&#xA;            "properties" : {&#xA;              "description" : {&#xA;                "type" : "string"&#xA;              },&#xA;              "duration" : {&#xA;                "type" : "string"&#xA;              },&#xA;              "image" : {&#xA;                "type" : "string"&#xA;              },&#xA;              "ingress" : {&#xA;                "type" : "string"&#xA;              }&#xA;            }&#xA;          },&#xA;          "guid" : {&#xA;            "type" : "string"&#xA;          },&#xA;          "host" : {&#xA;            "type" : "string"&#xA;          },&#xA;          "id" : {&#xA;            "type" : "string"&#xA;          },&#xA;          "image" : {&#xA;            "type" : "string"&#xA;          },&#xA;          "modifiedDate" : {&#xA;            "type" : "date",&#xA;            "format" : "dateOptionalTime"&#xA;          },&#xA;          "origin" : {&#xA;            "type" : "string"&#xA;          },&#xA;          "posted" : {&#xA;            "type" : "date",&#xA;            "format" : "dateOptionalTime"&#xA;          },&#xA;          "ranking" : {&#xA;            "type" : "long"&#xA;          },&#xA;          "source" : {&#xA;            "type" : "string"&#xA;          },&#xA;          "tags" : {&#xA;            "type" : "string"&#xA;          },&#xA;          "title" : {&#xA;            "type" : "string"&#xA;          },&#xA;          "updateTime" : {&#xA;            "type" : "date",&#xA;            "format" : "dateOptionalTime"&#xA;          },&#xA;          "url" : {&#xA;            "type" : "string"&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;
<p>I did a check to see how the host <code>h-a.no</code> was analysed:</p>&#xA;&#xA;<pre><code>curl 'http://dockerhost:9200/_analyze?analyzer=standard&amp;pretty' -d 'h-a.no'&#xA;{&#xA;  "tokens" : [ {&#xA;    "token" : "h",&#xA;    "start_offset" : 0,&#xA;    "end_offset" : 1,&#xA;    "type" : "&lt;ALPHANUM&gt;",&#xA;    "position" : 1&#xA;  }, {&#xA;    "token" : "a.no",&#xA;    "start_offset" : 2,&#xA;    "end_offset" : 6,&#xA;    "type" : "&lt;ALPHANUM&gt;",&#xA;    "position" : 2&#xA;  } ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then I updated the mapping for the host field as <code>"index": "not_analyzed"</code> to assure that the domain was not split into smaller parts.</p>&#xA;