29937160
Selecting all the results from a bucket using TopHits aggregation
<p>I am using TopHits aggregation over the Terms aggregation to fetch the records as shown in below query.</p>&#xA;&#xA;<pre><code>{&#xA;  "aggregations" : {&#xA;    "group by" : {&#xA;       "terms" : {&#xA;         "field" : "City"&#xA;       },&#xA;       "aggregations" : {&#xA;         "top" : {&#xA;           "top_hits" : {&#xA;             "size" : 200&#xA;          }&#xA;        }}}}&#xA;</code></pre>&#xA;&#xA;<p>I want to fetch all the records that are present in bucket instead of only top 200 records, but as the value of size increases the query time also increases for the same indexed data (for same number of records).</p>&#xA;&#xA;<p>So I can not set the size value to a randomly large number as it is hampering the querying time. </p>&#xA;&#xA;<p>Is there any way to achieve the same efficiently ?</p>&#xA;&#xA;<p>Thanks.</p>&#xA;
<p>In elastic search size having limitations default it returns <code>10</code> documents but if you want to increase documents then <code>size</code> values increase. </p>&#xA;&#xA;<p>Let's check <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-from-size.html" rel="nofollow">this example</a> in this case </p>&#xA;&#xA;<blockquote>&#xA;  <p>if deep pagination with from and size — e.g. ?size=10&amp;from=10000 — is very inefficient as (in this example) 100,000 sorted results have to be retrieved from each shard and resorted in order to return just 10 results. This process has to be repeated for every page requested.</p>&#xA;</blockquote>&#xA;&#xA;<p>So this case you should use <a href="http://www.elastic.co/guide/en/elasticsearch/guide/master/scan-scroll.html" rel="nofollow">scroll</a> api because of </p>&#xA;&#xA;<blockquote>&#xA;  <p>The scroll API keeps track of which results have already been returned and so is able to return sorted results more efficiently than with deep pagination. However, sorting results (which happens by default) still has a cost.</p>&#xA;</blockquote>&#xA;&#xA;<p>In your case you should use scan and scroll as below :</p>&#xA;&#xA;<pre><code> curl - s - XGET localhost: 9200 / logs / syslogs / _search ? scroll = 10 m &amp; search_type = scan ' {&#xA;   "aggregations": {&#xA;     "group by": {&#xA;       "terms": {&#xA;         "field": "City"&#xA;       },&#xA;       "aggregations": {&#xA;         "top": {&#xA;           "top_hits": {&#xA;             "size": 200&#xA;           }&#xA;         }&#xA;       }&#xA;     }&#xA;   }&#xA; }'&#xA;</code></pre>&#xA;&#xA;<p>Above query return <code>scroll id</code> then pass that scroll id as below </p>&#xA;&#xA;<p><code>curl -XGET  'localhost:9200/_search/scroll?scroll=1m' -d  'scroll id '</code></p>&#xA;