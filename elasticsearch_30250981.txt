30250981
How can I get the score of the underlying matching query in a bool query in ElasticSearch?
<p>I have a very complex search, where I am essentially performing a large search for articles that match at least one entity in a group of many entities.</p>&#xA;&#xA;<p>What I noticed is that as I add more entities, the scores dramatically change because my <code>should</code> clause grows in size.</p>&#xA;&#xA;<p>Here's an example of my query with 2 entities:</p>&#xA;&#xA;<pre><code>{&#xA;  "size": 50,&#xA;  "track_scores": true,&#xA;  "min_score": 0.05,&#xA;  "sort": [&#xA;    {&#xA;      "timestamp": {&#xA;        "order": "desc"&#xA;      }&#xA;    }&#xA;  ],&#xA;  "query": {&#xA;    "bool": {&#xA;      "should": [&#xA;        {&#xA;          "bool": {&#xA;            "should": [&#xA;              {&#xA;                "function_score": {&#xA;                  "functions": [&#xA;                    {&#xA;                      "boost_factor": 1000000&#xA;                    }&#xA;                  ],&#xA;                  "query": {&#xA;                    "terms": {&#xA;                      "relatedProfiles": [&#xA;                        "SomethingElse/124026966662",&#xA;                        "SomeLocation/707765"&#xA;                      ]&#xA;                    }&#xA;                  },&#xA;                  "boost_mode": "replace"&#xA;                }&#xA;              },&#xA;              {&#xA;                "bool": {&#xA;                  "should": [&#xA;                    {&#xA;                      "multi_match": {&#xA;                        "type": "phrase",&#xA;                        "query": "Generic Systems",&#xA;                        "operator": "and",&#xA;                        "fields": [&#xA;                          "content.title",&#xA;                          "content.description"&#xA;                        ]&#xA;                      }&#xA;                    },&#xA;                    {&#xA;                      "multi_match": {&#xA;                        "type": "phrase",&#xA;                        "query": "Generic Systems, Inc.",&#xA;                        "operator": "and",&#xA;                        "fields": [&#xA;                          "content.title",&#xA;                          "content.description"&#xA;                        ]&#xA;                      }&#xA;                    }&#xA;                  ],&#xA;                  "minimum_should_match": "1"&#xA;                }&#xA;              }&#xA;            ],&#xA;            "minimum_should_match": "1",&#xA;            "_name": "0e7da739-1d18-448b-caa2-5c615a59d108"&#xA;          }&#xA;        },&#xA;        {&#xA;          "bool": {&#xA;            "should": [&#xA;              {&#xA;                "function_score": {&#xA;                  "functions": [&#xA;                    {&#xA;                      "boost_factor": 1000000&#xA;                    }&#xA;                  ],&#xA;                  "query": {&#xA;                    "terms": {&#xA;                      "relatedProfiles": [&#xA;                        "SomeLocation/162479",&#xA;                        "SomethingElse/32b95cc3-a363-47c3-2ac1-86fdb3b7d108"&#xA;                      ]&#xA;                    }&#xA;                  },&#xA;                  "boost_mode": "replace"&#xA;                }&#xA;              },&#xA;              {&#xA;                "bool": {&#xA;                  "should": [&#xA;                    {&#xA;                      "multi_match": {&#xA;                        "type": "phrase",&#xA;                        "query": "SomeBusiness Computer Inc",&#xA;                        "operator": "and",&#xA;                        "fields": [&#xA;                          "content.title",&#xA;                          "content.description"&#xA;                        ]&#xA;                      }&#xA;                    },&#xA;                    {&#xA;                      "multi_match": {&#xA;                        "type": "phrase",&#xA;                        "query": "SomeBusiness, Inc",&#xA;                        "operator": "and",&#xA;                        "fields": [&#xA;                          "content.title",&#xA;                          "content.description"&#xA;                        ]&#xA;                      }&#xA;                    }&#xA;                  ],&#xA;                  "minimum_should_match": "1"&#xA;                }&#xA;              }&#xA;            ],&#xA;            "minimum_should_match": "1",&#xA;            "_name": "00cc4b36-ce6b-4816-e61e-b7124344d108"&#xA;          }&#xA;        }&#xA;      ],&#xA;      "minimum_should_match": "1"&#xA;    }&#xA;  },&#xA;  "filter": {&#xA;    "bool": {&#xA;      "must": [&#xA;        {&#xA;          "bool": {&#xA;            "should": [&#xA;              {&#xA;                "bool": {&#xA;                  "must": [&#xA;                    {&#xA;                      "term": {&#xA;                        "type": "News"&#xA;                      }&#xA;                    },&#xA;                    {&#xA;                      "terms": {&#xA;                        "language": [&#xA;                          "eng"&#xA;                        ]&#xA;                      }&#xA;                    }&#xA;                  ]&#xA;                }&#xA;              },&#xA;              {&#xA;                "terms": {&#xA;                  "type": [&#xA;                    "Social",&#xA;                    "Job",&#xA;                    "Unknown"&#xA;                  ]&#xA;                }&#xA;              }&#xA;            ]&#xA;          }&#xA;        },&#xA;        {&#xA;          "range": {&#xA;            "timestamp": {&#xA;              "lt": "2015-05-13T09:25:40.605",&#xA;              "gt": "2013-05-13T09:25:40.605"&#xA;            }&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How can I get the underlying match to be the score? Or, at the least, the score of the section below the name query?</p>&#xA;
<p>You can use <a href="http://www.elastic.co/guide/en/elasticsearch/reference/0.90/search-explain.html" rel="nofollow">explain API</a> for this. ON providing the query , it gives you a lot of information per document match on how that score was deduced. Its the perfect tool for debugging scores.</p>&#xA;
<p>Maybe <a href="https://elastic.co/webinars/elasticsearch-query-dsl" rel="nofollow">https://elastic.co/webinars/elasticsearch-query-dsl</a> has some insights; later in the video he talks about the <em>Dis Max Query</em>.</p>&#xA;&#xA;<p>From <a href="https://www.elastic.co/guide/en/elasticsearch/reference/1.5/query-dsl-dis-max-query.html" rel="nofollow">https://www.elastic.co/guide/en/elasticsearch/reference/1.5/query-dsl-dis-max-query.html</a></p>&#xA;&#xA;<blockquote>&#xA;  <p>"We want the primary score to be the one associated with the highest boost, not the sum of the field scores (as Boolean Query would give)."</p>&#xA;</blockquote>&#xA;