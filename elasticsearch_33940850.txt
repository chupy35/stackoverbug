33940850
In elastic search, q=joh* is returning a correct set, but a JSON with match: joh* is not
<p>When I call this URL:</p>&#xA;&#xA;<pre><code>http://192.168.x.x:9200/identities/work/_search?q=joh*&#xA;</code></pre>&#xA;&#xA;<p>ES is returning a limited (5) set of matches, starting with some indexes of people names John and Johnny etc. That seems to be the correct result.</p>&#xA;&#xA;<p>But when I send this JSON to ES:</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "match": {&#xA;      "_all": "joh*"&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I get results that I can't even logically explain. Seems rather random, and a lot of indexes too (hundreds, not a lot of johns and johnny's either ;))</p>&#xA;&#xA;<p>Is this not the equivalent of the URL mentioned above? What am I doing wrong?</p>&#xA;
<p>When you call the following URL, what ES does implicitly is to create a <code>query_string</code> query not a <code>match</code> query</p>&#xA;&#xA;<pre><code>http://192.168.x.x:9200/identities/work/_search?q=joh*&#xA;</code></pre>&#xA;&#xA;<p>So the equivalent JSON query would be:</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "query_string": {&#xA;      "query": "joh*"&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Moreover, <code>match</code> queries do not handle wildcards as in <code>joh*</code>, the <code>*</code> is considered and matched as a real character, not as a wildcard.</p>&#xA;