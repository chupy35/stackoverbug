33267033
Configuring elasticsearch to search and filter with has many / belongs to relationship
<p>I have a <code>Product</code> model where each <code>product</code> has many <code>sku</code>s.</p>&#xA;&#xA;<p>I need to be able to search and filter via elasticsearch across both models, but not quite sure how to go about it.  I'm currently uploading to elasticsearch in this format:</p>&#xA;&#xA;<pre><code>[{&#xA;   id: 1&#xA;   title: 'Product 1'&#xA;   image: 'image1.jpg'&#xA;   skus: [{&#xA;     id: 1&#xA;     material: 'cotton'&#xA;     quantity: 4&#xA;   },{&#xA;     id: 2&#xA;     material: 'polyester'&#xA;     quantity: 22&#xA;   }]&#xA;},{&#xA;  ...&#xA;}]&#xA;</code></pre>&#xA;&#xA;<p>I can search the title just fine, but I am unsure as to how I could do something like</p>&#xA;&#xA;<ul>&#xA;<li>Search for title 'foobar' and filter by material 'cotton' and quantity > 5</li>&#xA;</ul>&#xA;&#xA;<p>Is this possible with elasticsearch?</p>&#xA;&#xA;<p><em>Edit</em></p>&#xA;&#xA;<p>I am open to uploading in a different format or using multiple indices.</p>&#xA;
<p>I think the <a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/parent-child.html" rel="nofollow">parent/child relationship</a> is what you're looking for.</p>&#xA;&#xA;<p>As a quick example, I can set up an index with a parent type and child type like this:</p>&#xA;&#xA;<pre><code>PUT /test_index&#xA;{&#xA;   "mappings": {&#xA;       "product": {&#xA;         "properties": {&#xA;            "id": {&#xA;               "type": "long"&#xA;            },&#xA;            "image": {&#xA;               "type": "string"&#xA;            },&#xA;            "title": {&#xA;               "type": "string"&#xA;            }&#xA;         }&#xA;      },&#xA;      "sku": {&#xA;          "_parent": {&#xA;             "type": "product"&#xA;          }, &#xA;         "properties": {&#xA;            "id": {&#xA;               "type": "long"&#xA;            },&#xA;            "material": {&#xA;               "type": "string"&#xA;            },&#xA;            "quantity": {&#xA;               "type": "long"&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then add a parent document and two child documents:</p>&#xA;&#xA;<pre><code>POST /test_index/_bulk&#xA;{"index":{"_type":"product","_id":1}}&#xA;{"id": 1,"title": "Product1","image": "image1.jpg"}&#xA;{"index":{"_type":"sku", "_id":1,"_parent":1}}&#xA;{"id": 1,"material": "cotton","quantity": 4}&#xA;{"index":{"_type":"sku","_id":2,"_parent":1}}&#xA;{"id": 2,"material": "polyester","quantity": 22}&#xA;</code></pre>&#xA;&#xA;<p>Now if I search for a <code>"product"</code> with <code>"title": "Product1"</code> that has a child <code>"sku"</code> with <code>"material": "cotton"</code> and <code>"quantity"</code> greater than 5, I won't find one:</p>&#xA;&#xA;<pre><code>POST /test_index/product/_search&#xA;{&#xA;   "query": {&#xA;      "filtered": {&#xA;         "query": {&#xA;            "match": {&#xA;               "title": "Product1"&#xA;            }&#xA;         },&#xA;         "filter": {&#xA;            "has_child": {&#xA;               "type": "sku",&#xA;               "filter": {&#xA;                  "bool": {&#xA;                     "must": [&#xA;                        {&#xA;                           "term": {&#xA;                              "material": "cotton"&#xA;                           }&#xA;                        },&#xA;                        {&#xA;                           "range": {&#xA;                              "quantity": {&#xA;                                 "gt": 5&#xA;                              }&#xA;                           }&#xA;                        }&#xA;                     ]&#xA;                  }&#xA;               }&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;...&#xA;{&#xA;   "took": 2,&#xA;   "timed_out": false,&#xA;   "_shards": {&#xA;      "total": 1,&#xA;      "successful": 1,&#xA;      "failed": 0&#xA;   },&#xA;   "hits": {&#xA;      "total": 0,&#xA;      "max_score": null,&#xA;      "hits": []&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But if I search for a <code>"product"</code> with <code>"title": "Product1"</code> that has a child <code>"sku"</code> with <code>"material": "polyester"</code> and <code>"quantity"</code> greater than 5, I <em>will</em> find one:</p>&#xA;&#xA;<pre><code>POST /test_index/product/_search&#xA;{&#xA;   "query": {&#xA;      "filtered": {&#xA;         "query": {&#xA;            "match": {&#xA;               "title": "Product1"&#xA;            }&#xA;         },&#xA;         "filter": {&#xA;            "has_child": {&#xA;               "type": "sku",&#xA;               "filter": {&#xA;                  "bool": {&#xA;                     "must": [&#xA;                        {&#xA;                           "term": {&#xA;                              "material": "polyester"&#xA;                           }&#xA;                        },&#xA;                        {&#xA;                           "range": {&#xA;                              "quantity": {&#xA;                                 "gt": 5&#xA;                              }&#xA;                           }&#xA;                        }&#xA;                     ]&#xA;                  }&#xA;               }&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;...&#xA;{&#xA;   "took": 2,&#xA;   "timed_out": false,&#xA;   "_shards": {&#xA;      "total": 1,&#xA;      "successful": 1,&#xA;      "failed": 0&#xA;   },&#xA;   "hits": {&#xA;      "total": 1,&#xA;      "max_score": 1.4054651,&#xA;      "hits": [&#xA;         {&#xA;            "_index": "test_index",&#xA;            "_type": "product",&#xA;            "_id": "1",&#xA;            "_score": 1.4054651,&#xA;            "_source": {&#xA;               "id": 1,&#xA;               "title": "Product1",&#xA;               "image": "image1.jpg"&#xA;            }&#xA;         }&#xA;      ]&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is some code I used for testing: </p>&#xA;&#xA;<p><a href="http://sense.qbox.io/gist/d1989a28372ac9daae335d585601c11818b2fa11" rel="nofollow">http://sense.qbox.io/gist/d1989a28372ac9daae335d585601c11818b2fa11</a></p>&#xA;