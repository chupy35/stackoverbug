32415031
Aggregation on filtered, nested inner_hits query in ElasticSearch
<p>I'm only a few days new to ElasticSearch, and as a learning exercise have implemented a rudimentary job scraper that aggregates jobs from a few job listing sites and populates an index with some data for me to play with.</p>&#xA;&#xA;<p>My index contains a document for each website that lists jobs. A property of each of these documents is a 'jobs' array, which contains an object for each job that exists on that site. I am considering indexing each job as its own document (especially since the ElasticSearch documentation says that inner_hits is an experimental feature) but for now, I am trying to see if I can accomplish what I want to do using the inner_hits and nested features of ElasticSearch. </p>&#xA;&#xA;<p>I am able to query, filter, and return back only matching jobs. However, I am not sure how to apply the same inner_hits constraints to an aggregation.</p>&#xA;&#xA;<p>This is my mapping:</p>&#xA;&#xA;<pre><code>{&#xA;  "jobsitesIdx" : {&#xA;    "mappings" : {&#xA;      "sites" : {&#xA;        "properties" : {&#xA;          "createdAt" : {&#xA;            "type" : "date",&#xA;            "format" : "dateOptionalTime"&#xA;          },&#xA;          "jobs" : {&#xA;            "type" : "nested",&#xA;            "properties" : {&#xA;              "company" : {&#xA;                "type" : "string"&#xA;              },&#xA;              "engagement" : {&#xA;                "type" : "string"&#xA;              },&#xA;              "link" : {&#xA;                "type" : "string",&#xA;                "index" : "not_analyzed"&#xA;              },&#xA;              "location" : {&#xA;                "type" : "string",&#xA;                "fields" : {&#xA;                  "raw" : {&#xA;                    "type" : "string",&#xA;                    "index" : "not_analyzed"&#xA;                  }&#xA;                }&#xA;              },&#xA;              "title" : {&#xA;                "type" : "string"&#xA;              }&#xA;            }&#xA;          },&#xA;          "jobscount" : {&#xA;            "type" : "long"&#xA;          },&#xA;          "sitename" : {&#xA;            "type" : "string"&#xA;          },&#xA;          "url" : {&#xA;            "type" : "string"&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is a query and aggregate that I am trying (from Node.js):</p>&#xA;&#xA;<pre><code>client.search({&#xA;  "index": 'jobsitesIdx,&#xA;  "type": 'sites',&#xA;  "body": {&#xA;&#xA;&#xA;    "aggs" : {&#xA;            "jobs" : {&#xA;                "nested" : {&#xA;                    "path" : "jobs"&#xA;                },&#xA;                "aggs" : {&#xA;                    "location" : { "terms" : { "field" : "jobs.location.raw", "size": 25 } },&#xA;                    "company" : { "terms" : { "field" : "jobs.company.raw", "size": 25 } }&#xA;                }&#xA;            }&#xA;        },&#xA;&#xA;&#xA;    "query": {&#xA;        "filtered": {&#xA;          "query": {"match_all": {}},&#xA;          "filter": {&#xA;            "nested": {&#xA;              "inner_hits" : { "size": 1000 },&#xA;              "path": "jobs",&#xA;              "query":{&#xA;                "filtered": {&#xA;                  "query": { "match_all": {}},&#xA;                  "filter": {&#xA;                    "and": [&#xA;                      {"term": {"jobs.location": "york"}},&#xA;                      {"term": {"jobs.location": "new"}}&#xA;                    ]&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;  }&#xA;}, function (error, response) {&#xA;    response.hits.hits.forEach(function(jobsite) {&#xA;    jobs = jobsite.inner_hits.jobs.hits.hits;&#xA;&#xA;    jobs.forEach(function(job) {&#xA;        console.log(job);&#xA;    });&#xA;&#xA;});&#xA;&#xA;    console.log(response.aggregations.jobs.location.buckets);&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>This gives me back all inner_hits of jobs in New York, but the aggregate is showing me counts for every location and company, not just the ones matching the inner_hits.</p>&#xA;&#xA;<p>Any suggestions on how to get the aggregate on only the data contained in the matching inner_hits?</p>&#xA;&#xA;<p>Edit:&#xA;I am updating this to include an export of the mapping and index data, as requested. I exported this using Taskrabbit's elasticdump tool, found here:&#xA;<a href="https://github.com/taskrabbit/elasticsearch-dump" rel="noreferrer">https://github.com/taskrabbit/elasticsearch-dump</a></p>&#xA;&#xA;<p>The index: <a href="http://pastebin.com/WaZwBwn4" rel="noreferrer">http://pastebin.com/WaZwBwn4</a>&#xA;The mapping: <a href="http://pastebin.com/ZkGnYN94" rel="noreferrer">http://pastebin.com/ZkGnYN94</a></p>&#xA;&#xA;<p>The above linked data differs from the sample code in my original question in that the index is named jobsites6 in the data instead of jobsitesIdx as referred to in the question. Also, the type in the data is 'job' whereas in the code above it is 'sites'. </p>&#xA;&#xA;<p>I've filled in the callback in the code above to display the response data. I am seeing only jobs in New York from the foreach loop of the inner_hits, as expected, however I am seeing this aggregation for location:</p>&#xA;&#xA;<pre><code>[ { key: 'New York, NY', doc_count: 243 },&#xA;  { key: 'San Francisco, CA', doc_count: 92 },&#xA;  { key: 'Chicago, IL', doc_count: 43 },&#xA;  { key: 'Boston, MA', doc_count: 39 },&#xA;  { key: 'Berlin, Germany', doc_count: 22 },&#xA;  { key: 'Seattle, WA', doc_count: 22 },&#xA;  { key: 'Los Angeles, CA', doc_count: 20 },&#xA;  { key: 'Austin, TX', doc_count: 18 },&#xA;  { key: 'Anywhere', doc_count: 16 },&#xA;  { key: 'Cupertino, CA', doc_count: 15 },&#xA;  { key: 'Washington D.C.', doc_count: 14 },&#xA;  { key: 'United States', doc_count: 11 },&#xA;  { key: 'Atlanta, GA', doc_count: 10 },&#xA;  { key: 'London, UK', doc_count: 10 },&#xA;  { key: 'Ulm, Deutschland', doc_count: 10 },&#xA;  { key: 'Riverton, UT', doc_count: 9 },&#xA;  { key: 'San Diego, CA', doc_count: 9 },&#xA;  { key: 'Charlotte, NC', doc_count: 8 },&#xA;  { key: 'Irvine, CA', doc_count: 8 },&#xA;  { key: 'London', doc_count: 8 },&#xA;  { key: 'San Mateo, CA', doc_count: 8 },&#xA;  { key: 'Boulder, CO', doc_count: 7 },&#xA;  { key: 'Houston, TX', doc_count: 7 },&#xA;  { key: 'Palo Alto, CA', doc_count: 7 },&#xA;  { key: 'Sydney, Australia', doc_count: 7 } ]&#xA;</code></pre>&#xA;&#xA;<p>Since my inner_hits are limited to those in New York, I can see that the aggregation is not on my inner_hits because it is giving me counts for all locations.</p>&#xA;
<p>You can achieve this by adding the same filter in your aggregation to only include New York jobs.&#xA;Also note that in your second aggregation you had <code>company.raw</code> but in your mapping the <code>jobs.company</code> field has no <code>not_analyzed</code> part named <code>raw</code>, so you probably need to add it if you want to aggregate on the not analyzed company name.</p>&#xA;&#xA;<pre><code>{&#xA;  "_source": [&#xA;    "sitename"&#xA;  ],&#xA;  "query": {&#xA;    "filtered": {&#xA;      "filter": {&#xA;        "nested": {&#xA;          "inner_hits": {&#xA;            "size": 1000&#xA;          },&#xA;          "path": "jobs",&#xA;          "query": {&#xA;            "filtered": {&#xA;              "filter": {&#xA;                "terms": {&#xA;                  "jobs.location": [&#xA;                    "new",&#xA;                    "york"&#xA;                  ]&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  },&#xA;  "aggs": {&#xA;    "jobs": {&#xA;      "nested": {&#xA;        "path": "jobs"&#xA;      },&#xA;      "aggs": {&#xA;        "only_loc": {&#xA;          "filter": {            &lt;----- add this filter&#xA;            "terms": {&#xA;              "jobs.location": [&#xA;                "new",&#xA;                "york"&#xA;              ]&#xA;            }&#xA;          },&#xA;          "aggs": {&#xA;            "location": {&#xA;              "terms": {&#xA;                "field": "jobs.location.raw",&#xA;                "size": 25&#xA;              }&#xA;            },&#xA;            "company": {&#xA;              "terms": {&#xA;                "field": "jobs.company",&#xA;                "size": 25&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;