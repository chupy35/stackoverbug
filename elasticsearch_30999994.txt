30999994
Elastic Search: Can I aggregate with more than one date field?
<p>I have some data from running scripts in my elasticsearch:</p>&#xA;&#xA;<pre><code>{&#xA;"start":"2015-06-15T10:48:01.451Z",&#xA;"resolved":true,&#xA;"cmd":"blabla",&#xA;"lastUpdate":"2015-06-18T11:28:36.866Z",&#xA;"end":"2015-06-17T11:28:35.768Z"&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My goal is to see for the last x days whether scripts are running. Running scripts have a start time in field "start" and a end time in field "end". In this case I expect a view like:</p>&#xA;&#xA;<pre><code>{ "date":"2015-06-14", "doc_count":"0",&#xA;  "date":"2015-06-15", "doc_count":"1",&#xA;  "date":"2015-06-16", "doc_count":"1",&#xA;  "date":"2015-06-17", "doc_count":"1",&#xA;  "date":"2015-06-18", "doc_count":"0" &#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is this possible to implement with aggregations or something else? How can I build this?</p>&#xA;&#xA;<p>Thanks for any suggestions!</p>&#xA;&#xA;<p>I already experimented with aggregations but they didn't met my needs. I can always refer one date field and not consider days between start and end.</p>&#xA;&#xA;<pre><code>"aggs" : {&#xA;    "range" : {&#xA;        "date_range" : {&#xA;            "field" : "start",&#xA;            "format" : "dd.MM.yyyy",&#xA;            "ranges" : [&#xA;                {"to": "now", "from": "now/d"},&#xA;                {"to": "now/d", "from": "now-1d/d"},&#xA;                {"to": "now-1d/d", "from": "now-2d/d"},&#xA;                {"to": "now-2d/d", "from": "now-3d/d"},&#xA;                {"to": "now-3d/d", "from": "now-4d/d"},&#xA;                {"to": "now-4d/d", "from": "now-5d/d"},&#xA;                {"to": "now-5d/d", "from": "now-6d/d"}&#xA;            ]&#xA;        }&#xA;    },&#xA;</code></pre>&#xA;
<p>To resolve this issue I use a script to calculate the intresting days. &#xA;Here are my query with the aggregation:</p>&#xA;&#xA;<pre><code>"query" : {&#xA;    "filtered" : {&#xA;        "query" : {&#xA;            "bool" : {&#xA;                "should" : [ &#xA;                    { "range" : { "lastUpdate" : {"gt" : "now-10d/d"} } },&#xA;                    { "range" : { "start"      : {"gt" : "now-10d/d"} } },&#xA;                    { "range" : { "end"       : {"gt" : "now-10d/d"} } }&#xA;                ]&#xA;            }&#xA;        }&#xA;    }&#xA;},&#xA;"aggs": {&#xA;    "dates" : {&#xA;        "terms" : {&#xA;            "script_file" : "multidate"&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It's related to the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-terms-aggregation.html#search-aggregations-bucket-terms-aggregation-script" rel="nofollow">documentation</a>.</p>&#xA;&#xA;<p>I think the script isn't done but good as example:</p>&#xA;&#xA;<pre><code>import groovy.time.TimeCategory&#xA;import groovy.json.*&#xA;&#xA;def term = []&#xA;use(TimeCategory) {&#xA;&#xA;def lastUpdate = doc['lastUpdate'].date.toDate()&#xA;def start      = doc['start'].date.toDate()&#xA;def end        = doc['end'].date.toDate()&#xA;&#xA;// Start befor end&#xA;  if(start&lt;end) {&#xA;    // lastUpdate only use if after end&#xA;    if(end&lt;lastUpdate&amp;&amp;(lastUpdate-end).days&gt;0) {&#xA;      term.push(lastUpdate)&#xA;    }&#xA;    // days between start and end&#xA;    // same day?&#xA;    if(start.format("dd.MM.yyyy")==end.format("dd.MM.yyyy")) {&#xA;      // same day!&#xA;      term.push(start)&#xA;    } else {&#xA;      // another day&#xA;      diff = end-start&#xA;      for(i=0;i&lt;=diff.days;i++) {&#xA;        term.push(start+i.days)&#xA;      }&#xA;      if((start+diff.days).format("dd.MM.yyyy")!=end.format("dd.MM.yyyy")) {&#xA;        term.push(end)&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;text = []&#xA;for(i in term) {&#xA;  text.add(i.format("dd.MM.yyyy"))&#xA;}&#xA;&#xA;text&#xA;</code></pre>&#xA;&#xA;<p>Thats it! If I run the query i get:</p>&#xA;&#xA;<pre><code>  "aggregations" : {&#xA;    "dates" : {&#xA;      "buckets" : [ {&#xA;        "key" : "18.06.2015",&#xA;        "doc_count" : 2&#xA;      }, {&#xA;        "key" : "19.06.2015",&#xA;        "doc_count" : 2&#xA;      }, {&#xA;        "key" : "25.06.2015",&#xA;        "doc_count" : 2&#xA;      }, {&#xA;        "key" : "17.06.2015",&#xA;        "doc_count" : 1&#xA;      }, {&#xA;        "key" : "22.06.2015",&#xA;        "doc_count" : 1&#xA;      }, {&#xA;        "key" : "23.06.2015",&#xA;        "doc_count" : 1&#xA;      }, {&#xA;        "key" : "30.06.2015",&#xA;        "doc_count" : 1&#xA;      } ]&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;