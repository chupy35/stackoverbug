31027308
Why am I not getting expected results when searching in ElasticSearch using chrome plugin Sense?
<p>So I've setup the following data set so I can test searching on an field storing multiple values:</p>&#xA;&#xA;<pre><code>post /test/participant&#xA;{&#xA;    "Synonyms" : [ "foo" ]&#xA;}&#xA;&#xA;post /test/participant&#xA;{&#xA;    "Synonyms" : [ "bar" ]&#xA;}&#xA;&#xA;post /test/participant&#xA;{&#xA;    "Synonyms" : [ "foo", "bar" ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I've tried to get some data back by trying something like:</p>&#xA;&#xA;<pre><code>get /test/participant/_search&#xA;{&#xA;    "query": {&#xA;        "filtered": {&#xA;           "filter": {&#xA;                    "term": { "Synonyms": "foo" }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and I was expecting to get back the first and third records (see order above). However, I keep on getting all the records back. I've tried no end of alerations to the query to try and get something sensible (there's not enough space to add them here) and all I keep on getting is all the records in the index. Does anyone have an idea how I would query to get back those records with "foo" as a value (1st and 3rd)? And is there some subtle point I've been missing here? I'm aware that ElasticSearch does not store the values as an array but as an unordered collection.</p>&#xA;
<p>I think you are running these queries in Sense, right?</p>&#xA;&#xA;<p>The commands you need are these:</p>&#xA;&#xA;<pre><code>POST /test/participant&#xA;{"Synonyms":["foo"]}&#xA;&#xA;POST /test/participant&#xA;{"Synonyms":["bar"]}&#xA;&#xA;POST /test/participant&#xA;{"Synonyms":["foo","bar"]}&#xA;&#xA;GET /test/participant/_search&#xA;{&#xA;  "query": {&#xA;    "filtered": {&#xA;      "filter": {&#xA;        "term": {&#xA;          "Synonyms": "foo"&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The explanation is related to <code>GET</code> vs. <code>POST</code> http methods.&#xA;Behind the scene Sense actually converts a <code>GET</code> request to a <code>HTTP POST</code> (given that <a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/_empty_search.html#get_vs_post" rel="nofollow">many browsers do not support HTTP GET requests with a request body</a>). This means that, even if you write <code>GET</code>, the actual http request is a <code>POST</code>.</p>&#xA;&#xA;<p>Because Sense has the autocomplete that forces upper case letters for request methods, it uses the same upper case letters when deciding if it's a <code>GET</code> (and not a <code>get</code>) request together with a request body. If it is, then that request is transformed to a <code>POST</code> one. If it compares the request method and decides is not a <code>GET</code> it sends the request as is, meaning with a get method and with a body. Since the body is ignored, what reaches Elasticsearch will be a <code>get /test/participant/_search</code> which is basically a <code>match_all</code> which, of course, returns all documents :-).</p>&#xA;