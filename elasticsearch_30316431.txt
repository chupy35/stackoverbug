30316431
Create index with dynamic typing and property list
<p>I currently have docs of the format:</p>&#xA;&#xA;<pre><code>{&#xA;  name: string &#xA;  foo: integer or string&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and:</p>&#xA;&#xA;<pre><code>   "mappings": {&#xA;      "users": {&#xA;         "properties": {&#xA;            "name": {&#xA;               "type": "string",&#xA;               "index_analyzer": "edge_ngram_analyzer",&#xA;               "search_analyzer": "standard"&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;</code></pre>&#xA;&#xA;<p>This currently sees <code>foo</code> as an integer when the first doc gets processed and errors when it comes across a doc where <code>foo</code> is a string â€“ so I need to set <code>foo</code> to be a dynamic type. I would also like to be able to, later on, send docs to ES with additional dynamic-type properties without deleting and recreating the index, eg:</p>&#xA;&#xA;<pre><code>{&#xA;  name: string&#xA;  foo: int or string&#xA;  bar: int or string&#xA;}&#xA;</code></pre>&#xA;
<p>Why not just declare it as a String so it matches both integers AND strings ? Basically your integers will get converted to Strings but I can't think of a reason this should be problematic, since you have to parse carefully when you retrieve your data in any case, whether it's dynamic or fixed as a String that contains Integers.</p>&#xA;