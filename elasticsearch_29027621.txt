29027621
Elasticsearch: how to prevent my client from automatically inserting the top-level query property
<p>I need to generate a query string with the following structure:</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "filtered": {&#xA;      "query": {&#xA;        "match_all": {}&#xA;      },&#xA;      "filter": {&#xA;       ....&#xA;      }&#xA;    }&#xA;  },&#xA;  "aggregations": {&#xA;    "facets": {&#xA;      "terms": {&#xA;        "field": "subject"&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I am using the following client for search:</p>&#xA;&#xA;<pre><code>Client client = new TransportClient(my_settings_object)&#xA;        .addTransportAddress(new InetSocketTransportAddress("localhost", "9200"));&#xA;SearchResponse sr = client.prepareSearch("my_index")&#xA;        .setTypes("my_doctype")&#xA;        .setQuery(query) ; // this is above query string built manually&#xA;        .execute().actionGet();         &#xA;return sr;&#xA;</code></pre>&#xA;&#xA;<p>I got the following error:</p>&#xA;&#xA;<pre><code>QueryParsingException[[my_idex] No query registered for [query]]&#xA;</code></pre>&#xA;&#xA;<p>It seems that this error is explained in this SO post:</p>&#xA;&#xA;<p><a href="https://stackoverflow.com/questions/20167976/elasticsearch-no-query-registered-for-query">elasticsearch - No query registered for [query]]</a></p>&#xA;&#xA;<p>Basically, my client automatically inserts the top-level query property to make it look like:</p>&#xA;&#xA;<pre><code>{&#xA;    query:  {&#xA;      "query": {&#xA;        "filtered": {&#xA;          "query": {&#xA;            "match_all": {}&#xA;          },&#xA;          "filter": {&#xA;           ....&#xA;          }&#xA;        }&#xA;      },&#xA;      "aggregations": {&#xA;        "facets": {&#xA;          "terms": {&#xA;            "field": "subject"&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How can I prevent my client from automatically inserting the top-level query property?</p>&#xA;&#xA;<p>Thanks and regards.</p>&#xA;
<p>How do you build the <code>query</code> object in your Java code? </p>&#xA;&#xA;<p>Try using <code>QueryBuilders.filteredQuery(...)</code> to prepare it : the result will be wrapped in the <code>query</code> attribute when you call the related setter of the SearchRequestBuilder.</p>&#xA;
<p>Make your query and aggregations query individaul JSON objects. Change the query to:</p>&#xA;&#xA;<pre><code>{&#xA;    "filtered": {&#xA;        "query": {&#xA;            "match_all": {&#xA;&#xA;            }&#xA;        },&#xA;        "filter": {&#xA;            ....&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And change the aggregations so that they are in individual JSON object:</p>&#xA;&#xA;<pre><code>    {&#xA;        "facets": {&#xA;            "terms": {&#xA;                "field": "subject"&#xA;            }&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>Set the query and aggregations in the SearchRequestBuilder:</p>&#xA;&#xA;<pre><code>SearchResponse sr = client.prepareSearch("my_index")&#xA;    .setTypes("my_doctype")&#xA;    .setQuery(query) ; // this is above query string built manually&#xA;    .setAggregations(aggregations.getBytes());&#xA;    .execute().actionGet(); &#xA;</code></pre>&#xA;