33707316
In Elasticsearch scan-and-scroll, is there a way to control both the batch size and limit the number of documents in the search?
<p>Using the Elasticsearch scan-and-scroll feature, is it possible to control both the size of the batches returned, as well as the limit on the number of matches?</p>&#xA;&#xA;<p>According to the <a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/scan-scroll.html" rel="nofollow">Elasticsearch scan-and-scroll documentation</a>:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Although we specified a <code>size</code> of 1,000, we get back many more documents. When scanning, the <code>size</code> is applied to each shard, so you will get back a maximum of <code>size * number_of_primary_shards</code> documents in each batch.</p>&#xA;</blockquote>&#xA;&#xA;<p>This seems to indicate that the <code>size</code> parameter is used differently in a scan-and-scroll then it would be used in a <code>query-then-fetch</code>-type (where it limits the number of matches), and that there is not a "separate knob" that can be specified.</p>&#xA;&#xA;<p><strong>Update</strong></p>&#xA;&#xA;<p>A use case for this is:</p>&#xA;&#xA;<ul>&#xA;<li>I have many indices (2 shards each).  &#xA;&#xA;<ul>&#xA;<li>They're organized by day for some good reasons that I can't change.</li>&#xA;</ul></li>&#xA;<li>Some queries will be the likes of "give me everything for one day, no order needed" and this could result in many results (100s of thousands).  Seems like the query size should be <code>0</code> (or some really high number) to allow the user to eventually page through everything, if necessary</li>&#xA;<li>I'd like the first page of results to display quickly - the first page can show a variable number depending on the UI setup (on order of 100s).  Seems like I should be able to control this and fetch this size in the first scroll ID.</li>&#xA;</ul>&#xA;&#xA;<p>Scan-and-scroll seems like a good choice, but perhaps there's a better way to do this?</p>&#xA;
<p><code>size</code> is used differently in scan and scroll. It does limit the number of documents return with each scroll, but you get <code>size * num_of_primary_shards</code> back.</p>&#xA;&#xA;<p>In general you are correct but you could limit the hits returned using a limit filter (or limit query in 2.0) - seems a little odd though, I'd make sure scan and scroll is the best approach if limiting it in this way is the desired behavior.</p>&#xA;