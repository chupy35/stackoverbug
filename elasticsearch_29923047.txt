29923047
Elastic Search - Search string having spaces in it
<p>I am looking for ElasticSearch query which will provide exact match on string having spaces in it.</p>&#xA;&#xA;<p>for example - I want to search for a word like 'XYZ Company Solutions'. &#xA;I tried querystring query but it gives me all the records irrespective of search result. Also i read on the post and found that we have to add some mappings for the field. I tried 'Not_Analyzed' analyzer on the field but still it does not worked. </p>&#xA;&#xA;<p>If anyone have complete example or steps then can you please share with me?</p>&#xA;&#xA;<p>Thanks in advance.</p>&#xA;&#xA;<p>Thanks,&#xA;Sameer</p>&#xA;
<p>Since you didn't post your code it's hard to tell what's wrong, but <a href="http://www.elastic.co/guide/en/elasticsearch/guide/current/_exact_value_fields.html" rel="noreferrer"><code>"index": "not_analyzed"</code></a> in your mapping is the right way to handle this.</p>&#xA;&#xA;<p>Here is a simple working example. First I create a mapping that uses <code>"index": "not_analyzed"</code>:</p>&#xA;&#xA;<pre><code>PUT /test_index&#xA;{&#xA;    "mappings": {&#xA;        "doc": {&#xA;            "properties": {&#xA;                "name":{&#xA;                    "type": "string",&#xA;                    "index": "not_analyzed"&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then add a couple of documents for testing</p>&#xA;&#xA;<pre><code>POST /test_index/doc/_bulk&#xA;{"index":{"_id":1}}&#xA;{"name":"XYZ Company Solutions"}&#xA;{"index":{"_id":2}}&#xA;{"name":"Another Company"}&#xA;</code></pre>&#xA;&#xA;<p>Now I can get the document I want with a simple <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-term-query.html" rel="noreferrer">term query</a>:</p>&#xA;&#xA;<pre><code>POST /test_index/doc/_search&#xA;{&#xA;    "query": {&#xA;        "term": {&#xA;           "name": {&#xA;              "value": "XYZ Company Solutions"&#xA;           }&#xA;        }&#xA;    }&#xA;}&#xA;...&#xA;{&#xA;   "took": 1,&#xA;   "timed_out": false,&#xA;   "_shards": {&#xA;      "total": 1,&#xA;      "successful": 1,&#xA;      "failed": 0&#xA;   },&#xA;   "hits": {&#xA;      "total": 1,&#xA;      "max_score": 1,&#xA;      "hits": [&#xA;         {&#xA;            "_index": "test_index",&#xA;            "_type": "doc",&#xA;            "_id": "1",&#xA;            "_score": 1,&#xA;            "_source": {&#xA;               "name": "XYZ Company Solutions"&#xA;            }&#xA;         }&#xA;      ]&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>A <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-term-filter.html" rel="noreferrer">term filter</a> or even <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query.html" rel="noreferrer">match query</a> would also work in this case.</p>&#xA;&#xA;<p>Here is the code I used to test it:</p>&#xA;&#xA;<p><a href="http://sense.qbox.io/gist/90fcc7f7a88d58f098c50d5aaf0315fdf06e9e9a" rel="noreferrer">http://sense.qbox.io/gist/90fcc7f7a88d58f098c50d5aaf0315fdf06e9e9a</a></p>&#xA;
<pre><code>PUT /index_1&#xA;{   &#xA;  "settings": {&#xA;    "analysis": {&#xA;      "normalizer": {&#xA;        "lowercase_normalizer": { "type": "custom", "char_filter": [],           "filter": ["lowercase"]}&#xA;      }&#xA;    }&#xA;  },&#xA;  "mappings": {&#xA;     "doc_type": {&#xA;            "properties": {&#xA;                "name":{"type": "keyword", "normalizer": "lowercase_normalizer"}&#xA;            }&#xA;     }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I used the above the setting and mapping to define the index.&#xA;Then pushed a few values into the database</p>&#xA;&#xA;<pre><code>POST index_1/doc_type/1&#xA;{&#xA;  "name" : "a b c"&#xA;}&#xA;&#xA;POST index_1/doc_type/1&#xA;{&#xA;  "name" : "a c"&#xA;}&#xA;&#xA;POST index_1/doc_type/1&#xA;{&#xA;  "name" : "a b"&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now if we search for individual letters in the name field of above index we get nothing in return</p>&#xA;&#xA;<pre><code>GET index_1/doc_type/_search&#xA;{&#xA;  "query" : &#xA;    {"match": {"name": "A"}}&#xA;}&#xA;&#xA;GET index_1/doc_type/_search&#xA;{&#xA;  "query" : &#xA;    {"match": {"name": "b"}}&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>but if we search for </p>&#xA;&#xA;<pre><code>GET index_1/doc_type/_search&#xA;{&#xA;  "query" : &#xA;    {"match": {"name": "A B C"}}&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>we will get the match</p>&#xA;&#xA;<p>This helps searching complete keyword while avoiding case-senstivity</p>&#xA;