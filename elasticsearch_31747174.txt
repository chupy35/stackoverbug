31747174
Does the elasticsearch ID have to be unique to a type or to the index?
<p>Elasticsearch allows you to store a <code>_type</code> along with the <code>_index</code>.  I was wondering if I were to provide my own <code>_id</code> should it be unique across the index?</p>&#xA;
<p>It should be unique together</p>&#xA;&#xA;<pre><code>PUT so&#xA;PUT /so/t1/1&#xA;{}&#xA;PUT /so/t2/1&#xA;{}&#xA;GET /so/_search&#xA;&#xA;{&#xA;   "took": 1,&#xA;   "timed_out": false,&#xA;   "_shards": {&#xA;      "total": 5,&#xA;      "successful": 5,&#xA;      "failed": 0&#xA;   },&#xA;   "hits": {&#xA;      "total": 2,&#xA;      "max_score": 1,&#xA;      "hits": [&#xA;         {&#xA;            "_index": "so",&#xA;            "_type": "t2",&#xA;            "_id": "1",&#xA;            "_score": 1,&#xA;            "_source": {}&#xA;         },&#xA;         {&#xA;            "_index": "so",&#xA;            "_type": "t1",&#xA;            "_id": "1",&#xA;            "_score": 1,&#xA;            "_source": {}&#xA;         }&#xA;      ]&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And the reason for that: you'd never get documents by index w/o knowing doctype, and querying ES with index-wide query will return documents including their types <em>and</em> indexes.</p>&#xA;
<p>Absolutely, there are a few ways of doing it.</p>&#xA;&#xA;<p>The first is using the PUT API, which allows us to specify an ID for a document. So, for the index <code>index</code> and the type <code>type</code>:</p>&#xA;&#xA;<pre><code>curl -XPUT "http://localhost:9200/index/type/1/" -d'&#xA;{&#xA;    "test":"test"&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Which gives me this document:</p>&#xA;&#xA;<pre><code>{&#xA;    "_index": "index",&#xA;    "_type": "type",&#xA;    "_id": "1",&#xA;    "_score": 1,&#xA;    "_source": {&#xA;        "test": "test"&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Another way is to route the ID to a unique field in your mapping. For example, an md5 hash. So, for an index called <code>index</code> with a type called <code>type</code>, we can specify the following mapping:</p>&#xA;&#xA;<pre><code>curl -XPUT "http://localhost:9200/index/_mapping/type" -d'&#xA;{    &#xA;    "type": {&#xA;        "_id":{&#xA;            "path" : "md5"&#xA;        },&#xA;        "properties": {&#xA;           "md5": {&#xA;               "type":"string"&#xA;           }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This time, I'm going to use the POST API, which automatically generates an ID. If you haven't specified a path in your mapping, it will automatically generate one for you.</p>&#xA;&#xA;<pre><code>curl -XPOST "http://localhost:9200/index/type/" -d'&#xA;{&#xA;    "md5":"00000000000011111111222222223333"&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>Which gives me the following document in a search:</p>&#xA;&#xA;<pre><code>{&#xA;   "_index": "index",&#xA;   "_type": "type",&#xA;   "_id": "00000000000011111111222222223333",&#xA;   "_score": 1,&#xA;   "_source": {&#xA;      "md5": "00000000000011111111222222223333"&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The second method is generally preferred, because it provides consistency across the index. A perfectly valid id for an index could be <code>1</code> like in the example, or <code>dog</code> in another case.</p>&#xA;