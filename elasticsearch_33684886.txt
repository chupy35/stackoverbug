33684886
Elastic search find all documents contain word on a field
<p>i would like to know how can i search all my documents that have a string field which contains a word.</p>&#xA;&#xA;<p>I was looking on a solution that uses wildcard with * before and after the word.&#xA;but its not good, since it also retrieve a documents that contains bigger word that contains that string.&#xA;<a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/_wildcard_and_regexp_queries.html" rel="nofollow">https://www.elastic.co/guide/en/elasticsearch/guide/current/_wildcard_and_regexp_queries.html</a>&#xA;i.e if i search for a "news" &#xA;result can contains "Wikinews" which is not what i wanted.</p>&#xA;&#xA;<p>My index is defined like that :</p>&#xA;&#xA;<pre><code>PUT /index&#xA;{&#xA;   "mappings" : {&#xA;          "text" : {&#xA;             "properties" : {&#xA;                "text" : { "type" : "string", "index" : "not_analyzed" },&#xA;                "url" : { "type" : "string"}&#xA;             }&#xA;          }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I would like to search for documents that a given word would be on the 'text' field&#xA;EDIT : &#xA;example Data : </p>&#xA;&#xA;<pre><code> curl -XPUT 'http://localhost:9200/index/type/1' -d '&#xA;{ &#xA;   "url": "wikipedia.com", &#xA;   "Text": "in the news", &#xA;&#xA;}'&#xA;&#xA; curl -XPUT 'http://localhost:9200/index/type/2' -d '&#xA;{ &#xA;   "url": "wikipedia.com", &#xA;   "Text": "Click here for Wikinews", &#xA;&#xA;}'&#xA;&#xA; curl -XPUT 'http://localhost:9200/index/type/3' -d '&#xA;{ &#xA;   "url": "wikipedia.com", &#xA;   "Text": "news for each page are those:", &#xA;&#xA;}'&#xA;&#xA;&#xA;curl -XPUT 'http://localhost:9200/index/type/4' -d '&#xA;{ &#xA;   "url": "wikipedia.com", &#xA;   "Text": "What are the news means to you", &#xA;&#xA;}'&#xA;&#xA;curl -XPUT 'http://localhost:9200/index/type/5' -d '&#xA;{ &#xA;   "url": "walla.com", &#xA;   "Text": "today News are more ...", &#xA;&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>This should return documents 1,3,4,5&#xA;document 5 because search is not case sensitive. &#xA;document 2 not included because it's not the word news it's part of bigger word which is not relevant </p>&#xA;&#xA;<p>Thanks for helpers</p>&#xA;
<p>First you need to remove <code>"index" : "not_analyzed"</code> because you need case insensitive search. <code>"index" : "not_analyzed"</code> will index the word as it is and you search for word "news" wont give you document 5. </p>&#xA;&#xA;<pre><code>{&#xA;   "mappings" : {&#xA;          "text" : {&#xA;             "properties" : {&#xA;                "text" : { "type" : "string"},&#xA;                "url" : { "type" : "string"}&#xA;             }&#xA;          }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I am using default <a href="https://www.elastic.co/guide/en/elasticsearch/reference/2.0/analysis-standard-analyzer.html" rel="nofollow">standard analyzer</a> as I have not specified any analyzers. You can learn more about ElasticSearch Analysis <a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/analysis-intro.html" rel="nofollow">Here</a>.</p>&#xA;&#xA;<p>After that a simple <code>match query</code> will be enough to get all desired documents.</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "match": {&#xA;      "text": "news"&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You can replace match query with <code>match_phrase</code> query if you want phrase search.</p>&#xA;