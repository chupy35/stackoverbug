33047409
Elasticsearch aggrestions not shown in response of ajax call
<p>I have the following ajax call to get data from elasticsearch. My problem is that the response does not have the expected 'aggregations' field.</p>&#xA;&#xA;<pre><code>$.ajax({&#xA;    url: 'http://elasticsearch.net:80/tenant/_search' ,&#xA;    dataType: 'JSON',&#xA;    type: 'GET',&#xA;    data: {&#xA;            "size": 0,&#xA;            "aggs": {&#xA;              "group_by_user_name": {&#xA;                "terms": {&#xA;                  "field": "user_name"&#xA;                }&#xA;              }&#xA;            }&#xA;          },&#xA;    success: function(response) {&#xA;        console.log(response);&#xA;    }&#xA;});&#xA;&#xA;Object {took: 2, timed_out: false, _shards: Object, hits: Object}&#xA;_shards: Object&#xA;hits: Object&#xA;hits: Array[0]&#xA;length: 0&#xA;__proto__: Array[0]&#xA;max_score: 0&#xA;total: 3967&#xA;__proto__: Object&#xA;timed_out: false&#xA;took: 2&#xA;__proto__: Object&#xA;</code></pre>&#xA;&#xA;<p>I've tried the request with curl and I see the 'aggregations' field. Any idea why I can't access this field in an ajax response?</p>&#xA;
<p>See this stackoverflow post: <a href="https://stackoverflow.com/questions/28305271/querying-dynamic-aggregation-in-elasticsearch-with-ajax">Querying dynamic aggregation in elasticsearch with AJAX</a></p>&#xA;&#xA;<p>Essentially, you need to use POST rather than GET.</p>&#xA;&#xA;<p>What does your curl request look like?</p>&#xA;
<p>You need to use POST instead of GET. When you are using GET , it disregards your body and provides the top hits alone.&#xA;Your CURL equal-ant of the query is as follows - </p>&#xA;&#xA;<pre><code>curl -XPOST http://elasticsearch.net:80/tenant/_search -d '{&#xA;  "size": 0,&#xA;  "aggs": {&#xA;    "group_by_user_name": {&#xA;      "terms": {&#xA;        "field": "user_name"&#xA;      }&#xA;    }&#xA;  }&#xA;}'&#xA;</code></pre>&#xA;
<p>I tried POST earlier but I was getting a 400 error (Failed to derive xcontent from org.elasticsearch.common.bytes.ChannelBufferBytesReference). I played with it again and realized that what I was missing is converting the javascript object to JSON string:</p>&#xA;&#xA;<pre><code>$.ajax({&#xA;    url: 'http://elasticsearch.net:80/tenant/_search' ,&#xA;    dataType: 'JSON',&#xA;    type: 'POST',&#xA;    data: JSON.stringify({"size": 0,"aggs": {"group_by_user_name": {"terms": {"field": "user_name"}}}}),&#xA;    success: function(response) {&#xA;        console.log(response);&#xA;    }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>BTW, the curl request works with both GET and POST.</p>&#xA;&#xA;<p>Thanks for your help!</p>&#xA;