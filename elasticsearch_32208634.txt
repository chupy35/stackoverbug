32208634
How to fail Elasticsearch searches when cluster is in a red state to avoid incomplete results?
<p>I have Elasticsearch cluster with multiple nodes and only primary shards, no replicas. As ES documents state, if some primary shards are missing cluster health will become red, indexing will fail, but searches will return partial data. I am using a client node to talk with the cluster. Is there any way to demand from ES to return complete data OR tell me that something went wrong? I guess checking the health before searching, can be a solution, but it will introduce race condition itself and will have a performance penalty.</p>&#xA;&#xA;<p>Any proven solution for such cases?</p>&#xA;
<p>You can't do what you are trying to perform. </p>&#xA;&#xA;<p>If the cluster is red it means it's inaccessible, if it's inaccessible no search on the shards or segments thus no results returned from the shards. </p>&#xA;&#xA;<p>Conclusion, partial or no results.</p>&#xA;&#xA;<p>So you can't force not getting partial results unless you check the cluster health on each query before querying it again for results after it returns a health check GREEN.</p>&#xA;&#xA;<p>Obviously this solution has a race condition like you mentioned in your comment but for now, there is no other way around. </p>&#xA;
<p>I couldn't find direct way to fail searches, when shards are missing, but Elasticsearch returns number of shards it tried to query and number of shards actually responded. So you can validate response. If you are using Java API, SearchResponse class has these methods:</p>&#xA;&#xA;<pre><code>    int totalShards = searchResponse.getTotalShards();&#xA;    int successfulShards = searchResponse.getSuccessfulShards();&#xA;    int failedShards = searchResponse.getFailedShards();&#xA;</code></pre>&#xA;&#xA;<p>You can check if successfulShards equals or not total shards.</p>&#xA;