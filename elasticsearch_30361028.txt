30361028
Multi-field Search with Array Using 'AND' Operator in elasticsearch
<p>I want to query the values of a multi-value field as separate 'fields' in the same way I'm querying the other fields.&#xA;I have a data structure like so: </p>&#xA;&#xA;<pre><code>{&#xA;  name: 'foo one',&#xA;  alternate_name: 'bar two',&#xA;  lay_name: 'baz three',&#xA;  tags: ['stuff like', 'this that']&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My query looks like this:</p>&#xA;&#xA;<pre><code>{&#xA;  query:&#xA;    query: stuff&#xA;    type: 'best_fields',&#xA;    fields: ['name', 'alternate_name', 'lay_name', 'tags'],&#xA;    operator: 'and'&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The 'type' and 'operator' work perfectly for the single value fields in only matching when the value contains my entire query. For example, querying 'foo two' doesn't return a match. </p>&#xA;&#xA;<p>I'd like the tags field to behave the same way. Right now, querying 'stuff that' will return a match when it shouldn't because no fields or tag values contain both words in a single value. Is there a way to achieve this? </p>&#xA;&#xA;<p><strong>EDIT</strong>&#xA;Val's assessment was spot on. I've updated my mapping to the following (using <a href="https://github.com/elastic/elasticsearch-rails" rel="nofollow">elasticsearch-rails</a>/<a href="https://github.com/elastic/elasticsearch-rails/tree/master/elasticsearch-model" rel="nofollow">elasticsearch-model</a>):</p>&#xA;&#xA;<pre><code>mapping dynamic: false, include_in_all: true do&#xA;  ... other fields ...&#xA;  indexes :tags, type: 'nested' do&#xA;    indexes :tag, type: 'string', include_in_parent: true&#xA;  end&#xA;end&#xA;</code></pre>&#xA;
<p>Please show your mapping type, but I suspect your <code>tags</code> field is a simple <code>string</code> field like this:</p>&#xA;&#xA;<pre><code>{&#xA;    "your_type" : {&#xA;        "properties" : {&#xA;            "tags" : {&#xA;                "type" : "string"&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In this case ES will "flatten" all your tags under the hood in the <code>tags</code> field at indexing time like this:</p>&#xA;&#xA;<pre><code>tags: "stuff", "like", "this", "that"&#xA;</code></pre>&#xA;&#xA;<p>i.e. this is why you get results when querying "stuff that", because the <code>tags</code> field contains both words.</p>&#xA;&#xA;<p>The way forward would be to make <code>tags</code> a <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-nested-type.html" rel="nofollow">nested object type</a>, like this</p>&#xA;&#xA;<pre><code>{&#xA;    "your_type" : {&#xA;        "properties" : {&#xA;            "tags" : {&#xA;                "type" : "nested",&#xA;                "properties": {&#xA;                    "tag" : {"type": "string" }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You'll need to reindex your data but at least querying for <code>tags: "stuff that"</code> will not return anything anymore. Your tag tokens will be "kept together" as you expect. Give it a try.</p>&#xA;