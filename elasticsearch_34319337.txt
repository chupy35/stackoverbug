34319337
Filter/Query support in Elasticsearch Top hits Aggregation
<p>Elasticsearch documentation states that <code>The top_hits aggregation returns regular search hits, because of this many per hit features can be supported</code> Crucially, the list includes <code>Named filters and queries</code> </p>&#xA;&#xA;<p>But trying to add any filter or query throws <code>SearchParseException: Unknown key for a START_OBJECT</code></p>&#xA;&#xA;<p>Use case: I have items which have list of nested comments</p>&#xA;&#xA;<p>items{id} -> comments {date, rating}</p>&#xA;&#xA;<p>I want to get top rated comment for each item in the last week.</p>&#xA;&#xA;<pre><code>{&#xA; "query": {&#xA;   "match_all": {}&#xA;  },&#xA;  "aggs": {&#xA;    "items": {&#xA;      "terms": {&#xA;        "field": "id",&#xA;        "size": 10&#xA;      },&#xA;      "aggs": {&#xA;        "comment": {&#xA;          "nested": {&#xA;            "path": "comments"&#xA;          },&#xA;          "aggs": {&#xA;            "top_comment": {&#xA;              "top_hits": {&#xA;                "size": 1,&#xA;                //need filter  here to select only comments of last week&#xA;                "sort": {&#xA;                  "comments.rating": {&#xA;                    "order": "desc"&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So is the documentation wrong, or is there any way to add a filter?</p>&#xA;&#xA;<p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-aggregations-metrics-top-hits-aggregation.html" rel="nofollow">https://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-aggregations-metrics-top-hits-aggregation.html</a>  </p>&#xA;
<p>Are you sure you have mapped them as <code>Nested</code>? I've just tried to execute such query on my data and it did work fine.</p>&#xA;&#xA;<p>If so, you could simply add a filter aggregation, right after nested aggregation (hopefully I haven't messed up curly brackets):</p>&#xA;&#xA;<pre><code>POST data/_search&#xA;{&#xA;  "size": 0,&#xA;  "query": {&#xA;    "filtered": {&#xA;      "query": {&#xA;        "match_all": {}&#xA;      },&#xA;      "filter": {&#xA;        "nested": {&#xA;          "path": "comments",&#xA;          "query": {&#xA;            "range": {&#xA;              "comments.date": {&#xA;                "gte": "now-1w",&#xA;                "lte": "now"&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  },&#xA;  "aggs": {&#xA;    "items": {&#xA;      "terms": {&#xA;        "field": "id",&#xA;        "size": 10&#xA;      },&#xA;      "aggs": {&#xA;        "nested": {&#xA;          "nested": {&#xA;            "path": "comments"&#xA;          },&#xA;          "aggs": {&#xA;            "filterComments": {&#xA;              "filter": {&#xA;                "range": {&#xA;                  "comments.date": {&#xA;                    "gte": "now-1w",&#xA;                    "lte": "now"&#xA;                  }&#xA;                }&#xA;              },&#xA;              "aggs": {&#xA;                "topComments": {&#xA;                  "top_hits": {&#xA;                    "size": 1,&#xA;                    "sort": {&#xA;                      "comments.rating": "desc"&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>P.S. Always include FULL path for nested objects.</p>&#xA;&#xA;<p>So this query will:</p>&#xA;&#xA;<ol>&#xA;<li>Filter documents that have comments younger than one week to narrow down documents for aggregation and to find those, who actually have such comments (filtered query)</li>&#xA;<li>Do terms aggregation based on id field</li>&#xA;<li>Open nested sub documents (comments)</li>&#xA;<li>Filter them by date</li>&#xA;<li>Return the most badass one (most rated)</li>&#xA;</ol>&#xA;