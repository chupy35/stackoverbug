31199790
Show unmatched documents in elasticsearch
<p>How do you include unmatched items in your results on elasticsearch?</p>&#xA;&#xA;<p>For example,</p>&#xA;&#xA;<p>I have a list that somewhat looks like this:</p>&#xA;&#xA;<pre><code>[&#xA;    {&#xA;        "_index": "products",&#xA;        "_type": "71",&#xA;        "_id": "556637aed75a1334f69db5d7",&#xA;        "_score": 1,&#xA;        "_source": {&#xA;            "product_id": "556637aed75a1334f69db5d7",&#xA;            "categories": [&#xA;                28&#xA;            ],&#xA;            "tags": ["shirts"]&#xA;        }&#xA;    },&#xA;    {&#xA;        "_index": "products",&#xA;        "_type": "71",&#xA;        "_id": "556637aed75a1334f69db5d2",&#xA;        "_score": 1,&#xA;        "_source": {&#xA;            "product_id": "556637aed75a1334f69db5d2",&#xA;            "categories": [&#xA;                27&#xA;            ],&#xA;            "tags": []&#xA;        }&#xA;    },&#xA;    {&#xA;        "_index": "products",&#xA;        "_type": "71",&#xA;        "_id": "556637aed75a1334f69db5e4",&#xA;        "_score": 1,&#xA;        "_source": {&#xA;            "product_id": "556637aed75a1334f69db5e4",&#xA;            "categories": [&#xA;                26&#xA;            ],&#xA;            "tags": [&#xA;                "shoes"&#xA;            ]&#xA;        }&#xA;    },&#xA;    {&#xA;        "_index": "products",&#xA;        "_type": "71",&#xA;        "_id": "556637aed75a1334f69db5dd",&#xA;        "_score": 1,&#xA;        "_source": {&#xA;            "product_id": "556637aed75a1334f69db5dd",&#xA;            "categories": [&#xA;                23&#xA;            ],&#xA;            "tags": []&#xA;        }&#xA;    }&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>I would like to get a result that shows matched documents first and unmatched documents next.</p>&#xA;&#xA;<p>If my query looked something like this:</p>&#xA;&#xA;<pre><code>{&#xA;    "query": {&#xA;        "terms": {&#xA;            "tags": [&#xA;                "shorts",&#xA;                "shoes"&#xA;            ]&#xA;        }&#xA;    },&#xA;    "sort": [ "_score" ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I would get a list of only the items that have either <code>shoes</code> or <code>shorts</code> tags.</p>&#xA;&#xA;<p>I would like to also show the unmatched items after the matched ones.</p>&#xA;&#xA;<p>Also, I would like to add <code>categories</code> in my search query. Can someone help me with this?</p>&#xA;
<p>First of all you don't need <code>sort</code> on <code>_score</code>. By default, the sorting of the results is done on score.</p>&#xA;&#xA;<p>Second, there is no such thing as displaying the "unmatched" docs. You need to define your own rule of matching "the unmatched". In my opinion, you need a <code>match_all</code>.</p>&#xA;&#xA;<p>Third, I suggest using a <code>bool</code> where every condition you have (match on tags, match on categories, <code>match_all</code> - to match the "unmatched" docs) should be placed in a <code>should</code>. Every condition will add something to the score. This means, the more conditions match, the greater the score. If <code>tags</code> and <code>categories</code> don't match, the score for the remaining docs (the ones match <code>match_all</code>) will be low, so they will be at the end of the list.</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "bool": {&#xA;      "should": [&#xA;        {&#xA;          "terms": {&#xA;            "tags": [&#xA;              "shorts",&#xA;              "shoes"&#xA;            ]&#xA;          }&#xA;        },&#xA;        {&#xA;          "match_all": {}&#xA;        },&#xA;        {&#xA;          "terms": {&#xA;            "categories": [26,23]&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;