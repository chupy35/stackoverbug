31913403
Is ElasticSearch memory indexes are fast?
<p>I have 2 indexes in Elastic search one is running on default store type other one is running on memory store type. I have inserted 100,000 documents to each of these two indexes the default storage index is 1 second faster than the ram index. why is that ?</p>&#xA;&#xA;<p>and on searching also the default index is fast.</p>&#xA;&#xA;<p>my ES server is running on an SSD.&#xA;can someone please explain me why the in memory index is slower than the one store on the SSD?</p>&#xA;
<p>You'll have to monitor what's going on with your JVM and system memory during your load-test to really understand what's going on.</p>&#xA;&#xA;<p>The <code>memory</code> index option can work against the OS memory manager.  It also can increase garbage-collection pauses by causing the JVM to work harder to free up space.</p>&#xA;&#xA;<p>The <code>default</code> option (<code>mmapfs</code> on 64-bit Linux systems) lets the OS manage the caching/swapping memory pages in a more efficient way.</p>&#xA;&#xA;<p>1 second is a lot of added latency for a query against a small index.  If I were to hazard a guess, I'd say your <code>memory</code> index isn't 100% resident in physical memory, and the OS is therefore having to swap unnecessarily big pages from virtual->physical before a query can complete.</p>&#xA;&#xA;<p>This article goes into more detail (from a Solr context, but the underlying Lucene implementation is the same):  <a href="http://blog.thetaphi.de/2012/07/use-lucenes-mmapdirectory-on-64bit.html" rel="nofollow">http://blog.thetaphi.de/2012/07/use-lucenes-mmapdirectory-on-64bit.html</a></p>&#xA;&#xA;<p>Try bumping up the memory on your system, or testing against a smaller number of docs to see if the discrepancy is still there.</p>&#xA;
<p>The best thing to do is disable swap completely on your system. &#xA;You can try:</p>&#xA;&#xA;<pre><code>#sudo swapoff -a&#xA;</code></pre>&#xA;&#xA;<p>Or edit your /etc/fstab</p>&#xA;&#xA;<p>You can also prevent JVM from being swapped by the OS. In elasticsearch.yml :</p>&#xA;&#xA;<pre><code>bootstrap.mlockall: true&#xA;</code></pre>&#xA;