31516274
How to get Elastic search to return both exact matched and then other matches in result
<p>Need help with Elasticsearch. I try to get first exact match result then those documents that have one field matched using the following query but with no luck. Basically, trying to get top score hits first and then less accurate and only matched by one field in the total search result.</p>&#xA;&#xA;<p>The mapping is as following:</p>&#xA;&#xA;<pre><code>{&#xA;   "palsx1493": {&#xA;     "mappings": {&#xA;     "pals": {&#xA;        "properties": {&#xA;           "aboutme": {&#xA;              "type": "string"&#xA;           },&#xA;           "dob": {&#xA;              "type": "date",&#xA;              "format": "date"&#xA;           },&#xA;           "fccode": {&#xA;              "type": "string"&#xA;           },&#xA;           "fcname": {&#xA;              "type": "string"&#xA;           },&#xA;           "learning": {&#xA;              "type": "nested",&#xA;              "properties": {&#xA;                 "skillslevel": {&#xA;                    "type": "string"&#xA;                 },&#xA;                 "skillsname": {&#xA;                    "type": "string"&#xA;                 }&#xA;              }&#xA;           },&#xA;           "name": {&#xA;              "type": "string"&#xA;           },&#xA;           "rating": {&#xA;              "type": "string"&#xA;           },&#xA;           "teaching": {&#xA;              "type": "nested",&#xA;              "properties": {&#xA;                 "skillslevel": {&#xA;                    "type": "string"&#xA;                 },&#xA;                 "skillsname": {&#xA;                    "type": "string"&#xA;                 }&#xA;              }&#xA;           },&#xA;           "trate": {&#xA;              "type": "string"&#xA;           },&#xA;           "treg": {&#xA;              "type": "string"&#xA;           }&#xA;        }&#xA;     }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>}&#xA;   }</p>&#xA;&#xA;<p>When Searching, I need the result to return the exact matched documents followed by lower score matched with the teaching skillname in that prioritized order. what happens now is that I get the exact matches correctly first and then I get the learning.skillname matched, and then teaching.skillname matched. I want these two last ones swapped having the teaching.skillname coming after the exact matched results.  </p>&#xA;&#xA;<p>Exact match: &#xA;1. fcname (is crom country name and can be either a specific name or just set to "Any Country".&#xA;2. dob: Date of birth is a range value - a range value is given as input&#xA;3. teaching: skillname&#xA;4. learning: skillname</p>&#xA;&#xA;<p>This is what I have tried with no luck:</p>&#xA;&#xA;<pre><code>{&#xA;"query": {&#xA; "bool": {&#xA;  "should": [&#xA;    { "match": { "fcname": "spain"}},  &#xA;    { "range": {&#xA;                "bod": {&#xA;                    "from": "1950-10-10",&#xA;                    "to": "1967-12-12"&#xA;                }&#xA;    }&#xA;    },&#xA;    {&#xA;      "nested": {&#xA;        "path": "learning",&#xA;        "score_mode": "max", &#xA;        "query": {&#xA;          "bool": {&#xA;            "must": [&#xA;              { "match": { "learning.skillname": learningSkillName}}&#xA;            ]&#xA;            }&#xA;        }&#xA;      }&#xA;    },&#xA;    {&#xA;     "nested": {&#xA;        "path": "teaching",&#xA;        "query": {&#xA;          "bool": {&#xA;            "must": [&#xA;              { "match": { "teaching.skillname": teachingSkillName}}&#xA;            ]&#xA;            }&#xA;        }&#xA;      }&#xA;    }&#xA;  ]&#xA; }&#xA;}&#xA;}&#xA;</code></pre>&#xA;
<p>Please look into indices. The default is a full text search which does inverted indexing to store data. So it would store the string according to the analyzer. </p>&#xA;&#xA;<p>Fo exact string match please use : index = 'not_analyzed'</p>&#xA;&#xA;<p>eg. </p>&#xA;&#xA;<p>"nick"{&#xA;"type": "string",&#xA;"index":"not_analyzed"&#xA;},</p>&#xA;&#xA;<p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-core-types.html" rel="nofollow">https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-core-types.html</a></p>&#xA;
<p>I figured it out. Solution was to use <a href="https://www.elastic.co/guide/en/elasticsearch/reference/1.6/query-dsl-function-score-query.html" rel="nofollow">function_score</a> feature to override/ add score to a document with certain matched field. Replacing the nested part above with following gave me the correct result:</p>&#xA;&#xA;<pre><code>"nested": {&#xA;        "path": "teaching",&#xA;        "query": {&#xA;          "function_score": {&#xA;              "query": {&#xA;                "bool": {&#xA;                    "must": [&#xA;                        { "match": { "teaching.skillname": "xxx"}}&#xA;                    ]&#xA;                }&#xA;               },&#xA;               "functions": [&#xA;              {&#xA;                "script_score": {&#xA;              "script": "_score + 2"&#xA;            }&#xA;          }],&#xA;</code></pre>&#xA;