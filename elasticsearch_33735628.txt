33735628
How to do multi-level child aggregations in elasticsearch?
<p>I have a USER type and it has children of EVENT type.</p>&#xA;&#xA;<p>The events can have different fields. So one event might be have a <code>visitDate</code> field, and another event might be a demographics event and have an <code>age</code> field.</p>&#xA;&#xA;<p>I want to do multi-level aggregations, where I can see, for example, the breakdown of ages each day. Ie:</p>&#xA;&#xA;<pre><code>1st July&#xA;  Age: 24 - 10 docs&#xA;  Age: 25 - 15 docs &#xA;2nd July&#xA;  Age: 24 - 5 docs&#xA;  Age: 25 - 6 docs&#xA;etc&#xA;</code></pre>&#xA;&#xA;<p>The problem I am facing is that if I do a children aggregation like:</p>&#xA;&#xA;<pre><code>{&#xA;  "size": 2,&#xA;  "aggs": {&#xA;    "events": {&#xA;      "children": {&#xA;        "type" : "event"&#xA;      },&#xA;      "aggs": {&#xA;        "visitDate": {&#xA;          "terms":{&#xA;            "field":"visitDate",&#xA;            "size":0&#xA;          },&#xA;          "aggs":{&#xA;            "byAge":{&#xA;              "terms":{&#xA;                "field":"age",&#xA;                "size":0&#xA;              } &#xA;            } &#xA;          } &#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>etc</p>&#xA;&#xA;<p>the second-level aggregation (on age) only has access to the child documents that matched the aggregation on visitDate, NOT any of the other child documents that are children of the same parents.</p>&#xA;&#xA;<p>How can I aggregate arbitrarily deeply, but with each successive aggregation looking at the PARENTS of the children in that bucket?</p>&#xA;
<p>You can achieve that using the nested aggregation, I had the same case before and I used the following query to get such result (aggregating audio book time usage by language which is a nested child doc in the audio_book):</p>&#xA;&#xA;<p><strong>Elasticsearch doc:</strong></p>&#xA;&#xA;<pre><code>  {&#xA;    "_index": "dev_analytics",&#xA;    "_type": "UsageAnalytics",&#xA;    "_id": "AWLc_3OL-IIrUiI24XbD",&#xA;    "_score": 2.1704133,&#xA;    "_source": {&#xA;      "timestamp": 1523983693559,&#xA;      "audio_book": {&#xA;        "id": "0032423404234234234",&#xA;        "name": "Jag ger dig solen",&#xA;        "languages": [&#xA;          {&#xA;            "code": "sv",&#xA;            "type": "TEXT"&#xA;          }&#xA;        ],&#xA;      "usage": {&#xA;        "unitOfMeasure": "SEC",&#xA;        "totalUsage": 1200&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p><strong>Required aggregation:</strong></p>&#xA;&#xA;<pre><code>"buckets": [&#xA;          {&#xA;            "key": "sv",&#xA;            "doc_count": 247,&#xA;            "usage": {&#xA;              "doc_count": 247,&#xA;              "total_usage": {&#xA;                "count": 247,&#xA;                "min": 1200,&#xA;                "max": 1200,&#xA;                "avg": 1200,&#xA;                "sum": 296400&#xA;              }&#xA;            }&#xA;          },&#xA;          {&#xA;            "key": "en",&#xA;            "doc_count": 47,&#xA;            "usage": {&#xA;              "doc_count": 47,&#xA;              "total_usage": {&#xA;                "count": 47,&#xA;                "min": 1200,&#xA;                "max": 1200,&#xA;                "avg": 1200,&#xA;                "sum": 56400&#xA;              }&#xA;            }&#xA;          },&#xA;          {&#xA;            "key": "de",&#xA;            "doc_count": 24,&#xA;            "usage": {&#xA;              "doc_count": 24,&#xA;              "total_usage": {&#xA;                "count": 24,&#xA;                "min": 1200,&#xA;                "max": 1200,&#xA;                "avg": 1200,&#xA;                "sum": 28800&#xA;              }&#xA;            }&#xA;          },&#xA;          {&#xA;            "key": "ar",&#xA;            "doc_count": 20,&#xA;            "usage": {&#xA;              "doc_count": 20,&#xA;              "total_usage": {&#xA;                "count": 20,&#xA;                "min": 1200,&#xA;                "max": 1200,&#xA;                "avg": 1200,&#xA;                "sum": 24000&#xA;              }&#xA;            }&#xA;          }&#xA;        ]&#xA;</code></pre>&#xA;&#xA;<p><strong>Nested aggregation query:</strong></p>&#xA;&#xA;<pre><code>GET dev_analytics/UsageAnalytics/_search&#xA;{&#xA;  "size": 0,&#xA;  "aggs": {&#xA;     "lang": {&#xA;       "nested": {&#xA;         "path": "title.languages"&#xA;       },&#xA;       "aggs": {&#xA;         "terms": {&#xA;           "terms": {&#xA;             "field": "title.languages.code"&#xA;           },&#xA;           "aggs": {&#xA;             "usage": {&#xA;               "reverse_nested": {},&#xA;               "aggs": {&#xA;                 "total_usage": {&#xA;                   "stats": {&#xA;                     "field": "usage.totalUsage"&#xA;                   }&#xA;                 }&#xA;               }&#xA;             }&#xA;           }&#xA;         }&#xA;       }&#xA;     }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;