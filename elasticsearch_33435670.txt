33435670
Elasticsearch layered ordering
<p>I would like to be able to return typeahead items in a certain order. For example, search for <code>Para</code> should return:</p>&#xA;&#xA;<pre><code> Paracetamol&#xA;&#xA; Parafin&#xA;&#xA; LIQUID PARAFFIN&#xA;&#xA; ISOMETHEPTENE WITH PARACETAMOL&#xA;</code></pre>&#xA;&#xA;<p>1) The suggestions that begin with the search term para should be ordered at the top and in alphabetical order</p>&#xA;&#xA;<p>2) The rest of the items should appear below and also in alphabetical order</p>&#xA;&#xA;<p>Is this possible with Elasticsearch?</p>&#xA;&#xA;<h2>Update</h2>&#xA;&#xA;<p>What if I wanted the output to be like this:</p>&#xA;&#xA;<pre><code> Paracetamol&#xA;&#xA; Parafin&#xA;&#xA; Amber Paraffin&#xA;&#xA; ISOMETHEPTENE WITH PARACETAMOL&#xA;&#xA; LIQUID PARAFFIN&#xA;</code></pre>&#xA;&#xA;<p>So all the terms that contain the prefix are at the top and everything else in alphabetical order.</p>&#xA;
<p>This is my suggestion (also, you need to enable scripting):</p>&#xA;&#xA;<pre><code>PUT /test&#xA;{&#xA;  "settings": {&#xA;    "analysis": {&#xA;      "analyzer": {&#xA;        "autocomplete": {&#xA;          "type": "custom",&#xA;          "tokenizer": "standard",&#xA;          "filter": [&#xA;            "standard",&#xA;            "lowercase",&#xA;            "ngram"&#xA;          ]&#xA;        },&#xA;        "search_ngram": {&#xA;          "type": "custom",&#xA;          "tokenizer": "keyword",&#xA;          "filter": "lowercase"&#xA;        }&#xA;      },&#xA;      "filter": {&#xA;        "ngram": {&#xA;          "type": "ngram",&#xA;          "min_gram": 2,&#xA;          "max_gram": 15&#xA;        }&#xA;      }&#xA;    }&#xA;  },&#xA;  "mappings": {&#xA;    "test": {&#xA;      "properties": {&#xA;        "text": {&#xA;          "type": "string",&#xA;          "index_analyzer": "autocomplete",&#xA;          "search_analyzer": "search_ngram",&#xA;          "index_options": "positions",&#xA;          "fields": {&#xA;            "not_analyzed_sorting": {&#xA;              "type": "string",&#xA;              "index": "not_analyzed"&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<pre><code>POST test/test/_bulk&#xA;{"index":{"_id":1}}&#xA;{"text":"Paracetamol"}&#xA;{"index":{"_id":2}}&#xA;{"text":"Paracetamol xxx yyy zzz"}&#xA;{"index":{"_id":3}}&#xA;{"text":"Parafin"}&#xA;{"index":{"_id":4}}&#xA;{"text":"LIQUID PARAFFIN"}&#xA;{"index":{"_id":5}}&#xA;{"text":"ISOMETHEPTENE WITH PARACETAMOL"}&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<pre><code>GET /test/test/_search&#xA;{&#xA;  "query": {&#xA;    "match": {&#xA;      "text": "Para"&#xA;    }&#xA;  },&#xA;  "sort": [&#xA;    {&#xA;      "_script": {&#xA;        "type": "number",&#xA;        "script": "termInfo=_index[field_to_search].get(term_to_search.toLowerCase(),_POSITIONS);if (termInfo) {for(pos in termInfo){return pos.position}};return 0;",&#xA;        "params": {&#xA;          "term_to_search": "Para",&#xA;          "field_to_search": "text"&#xA;        },&#xA;        "order": "asc"&#xA;      }&#xA;    },&#xA;    {&#xA;      "text.not_analyzed_sorting": {&#xA;        "order": "asc"&#xA;      }&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>UPDATE</strong></p>&#xA;&#xA;<p>For your updated question, <em>even if I would have preferred to have another post</em>, use the following query:</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "match": {&#xA;      "text": "Para"&#xA;    }&#xA;  },&#xA;  "sort": [&#xA;    {&#xA;      "_script": {&#xA;        "type": "number",&#xA;        "script": "termInfo=_index[field_to_search].get(term_to_search.toLowerCase(),_POSITIONS);if (termInfo) {for(pos in termInfo){if (pos.position==0) return pos.position; else return java.lang.Integer.MAX_VALUE}};return java.lang.Integer.MAX_VALUE;",&#xA;        "params": {&#xA;          "term_to_search": "Para",&#xA;          "field_to_search": "text"&#xA;        },&#xA;        "order": "asc"&#xA;      }&#xA;    },&#xA;    {&#xA;      "text.not_analyzed_sorting": {&#xA;        "order": "asc"&#xA;      }&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;