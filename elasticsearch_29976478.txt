29976478
What is the best way to migrate an ElasticSearch cluster to new hardware?
<p>I have an elastic search cluster running on 6 underpowered nodes.  I want to migrate it to a new set of 4 very heavy-duty nodes.  I'm trying to figure out the best way to do so.  Since I'm going from 6 nodes to 4 nodes, I can't just copy data files from the old cluster to the new one.  It looks like the snapshot and restore function is the way to go, but I can't find a documented way to create a snapshot on one set of hardware and restore it into another set.  Has anybody ever done this sort of hardware upgrade with ElasticSearch?</p>&#xA;
<p>An approach that I followed for this task is the following: Code a custom copy functionality of one (or several) index-ices from one elasticsearch cluster to another cluster using the Java API, bulk API and Scroll API.</p>&#xA;&#xA;<p>More precisely, I use the scroll API to fetch the data from the old index and push it to the new index using the bulk API.</p>&#xA;&#xA;<p>I also use the above functionality for backups/emergency copies of my indices.</p>&#xA;
<p>To use snapshot/restore, you have to have a common mount point on all of the servers (ie NFS).  You have to add the repository on both clusters, then snapshot on one and restore on the other.  The exact commands are pretty well documented here: <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html" rel="nofollow noreferrer">http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html</a></p>&#xA;&#xA;<p>Another way to migrate is to join the clusters together initially and wait for everything to be green.  Then work through the process of decommissioning the old slow nodes: <a href="https://stackoverflow.com/questions/17268495/how-to-remove-node-from-elasticsearch-cluster-on-runtime-without-down-time">How to remove node from elasticsearch cluster on runtime without down time</a></p>&#xA;&#xA;<p>The final way to migrate is the way that @Zouzias recommended which is to use a program to copy the data from one cluster to another.  There is an open source node.js based project here: <a href="https://github.com/mallocator/Elasticsearch-Exporter" rel="nofollow noreferrer">https://github.com/mallocator/Elasticsearch-Exporter</a> that will do what you need without having to write code.</p>&#xA;&#xA;<p>Another way to migrate is to use an API available in 5.x -- <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-reindex.html" rel="nofollow noreferrer">reindex from remote</a> from remote:</p>&#xA;&#xA;<pre><code>POST _reindex&#xA;{&#xA;  "source": {&#xA;    "remote": {&#xA;      "host": "http://otherhost:9200",&#xA;      "username": "user",&#xA;      "password": "pass"&#xA;    },&#xA;    "index": "source"&#xA;  },&#xA;  "dest": {&#xA;    "index": "dest"&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But be sure to read the documentation at the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-reindex.html" rel="nofollow noreferrer">link</a> provided because you have to set the <code>reindex.remote.whitelist</code> in you elasticsearch.yml file.</p>&#xA;