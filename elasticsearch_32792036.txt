32792036
Indexing a multi-field property in Elastic Search
<p>I am trying to re-index my documents in order for them to be sortable which requires making the sortable fields Multi-field properties with a "raw" version of the string which does not get analyzed.</p>&#xA;&#xA;<p>I am following <a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/multi-fields.html" rel="nofollow">this</a> article, but I am still getting errors when searching my documents with a sorting query.</p>&#xA;&#xA;<p>I have a question then regarding the re-indexing of the data... if I re-index the doucments into this new index, then do I need to have some extra logic to set the analyzed version and the non_analyzed or "raw" version of the string as well? Or does elastic search automatically fill that one?  Here is what my field looks like:</p>&#xA;&#xA;<pre><code>{&#xA;    "entityName": {&#xA;        "type":"string",&#xA;        "fields": {&#xA;            "raw": {&#xA;                "type":"string",&#xA;                "index":"not_analyzed"&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So when I index a document with a <code>_source</code> like:</p>&#xA;&#xA;<pre><code>{&#xA;...&#xA;"entityName":"Ned Stark"&#xA;...&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Will the mapping to both the <code>analyzed</code> field <strong><em>and</em></strong> the <code>not_analyzed</code> field complete or is there something else I have to do to tell the indexing to fill in the "raw" property as well?</p>&#xA;
<p>No, you don't need to do anything else.</p>&#xA;&#xA;<p>After reindexing your documents, you must tell which fields the query should use like in your given documentation article.</p>&#xA;&#xA;<p>Raw subfield:</p>&#xA;&#xA;<pre><code>POST /_search&#xA;{&#xA;    "query": {&#xA;        "match": {&#xA;            "entityName.raw": "foo-bar"&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>or original analysed type:</p>&#xA;&#xA;<pre><code>POST /_search&#xA;{&#xA;    "query": {&#xA;        "match": {&#xA;            "entityName": "foo-bar"&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;