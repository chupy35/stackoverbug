34557434
Search specific fields in nested documents as one document
<p>I have the following structure:</p>&#xA;&#xA;<pre><code>{&#xA;    "mappings": {&#xA;        "document": {&#xA;            "properties": {&#xA;                "title": {&#xA;                    "type": "string"&#xA;                },&#xA;                "paragraphs": {&#xA;                    "type": "nested",&#xA;                    "properties": {&#xA;                        "paragraph": {&#xA;                            "type" : "object",&#xA;                            "properties" : {&#xA;                                "content": { "type": "string"},&#xA;                                "number":{"type":"integer"}&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>With these sample documents</p>&#xA;&#xA;<pre><code>{&#xA;    "title":"Dubai seeks cause of massive hotel fire at New Year",&#xA;    "paragraphs":[&#xA;    {"paragraph": {"number": "1", "content":"Firefighters managed to subdue the blaze, but part of the Address Downtown Hotel is still smouldering."}}, &#xA;    {"paragraph": {"number": "2", "content":"A BBC reporter says a significant fire is still visible on the 20th floor, where the blaze apparently started."}}, &#xA;    {"paragraph": {"number": "3", "content":"The tower was evacuated and 16 people were hurt. But a fireworks show went ahead at the Burj Khalifa tower nearby."}}, &#xA;    {"paragraph": {"number": "4", "content":"The Burj Khalifa is the world's tallest building and an iconic symbol of the United Arab Emirates (UAE)."}}]&#xA;}&#xA;&#xA;{&#xA;    "title":"Munich not under imminent IS threat",&#xA;    "paragraphs":[{"paragraph": {"number": "1", "content":"German officials say there is no sign of any imminent terror attack, after an alert that shut down two Munich railway stations on New Year's Eve."}}]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I can now search each paragraph using</p>&#xA;&#xA;<pre><code>{ &#xA;    "query": { &#xA;        "nested": { &#xA;            "path": "paragraphs", "query": { &#xA;                "query_string": { &#xA;                    "default_field": "paragraphs.paragraph.content", &#xA;                    "query": "Firefighters AND still" &#xA;                } &#xA;            } &#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Question</strong>: How can I wright a query that searches several paragraphs but only the content field?</p>&#xA;&#xA;<p>This works, but searches all fields</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "query_string": {&#xA;      "query": "Firefighters AND apparently AND 1"&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It is matching <strong><em>Firefighters</em></strong> from paragraph 1 and <strong><em>apparently</em></strong> from paragraph 2 which I want. I do however not want <strong><em>1</em></strong> to be matched since it isn't a content field.</p>&#xA;&#xA;<p><strong>Clarification</strong>: The first search performs a search per paragraph which I want some times. I do however also want to be able to search the whole document (all paragraphs) sometimes.</p>&#xA;&#xA;<p><strong>Solution</strong>&#xA;I added "include_in_parent": true as it is mentioned in <a href="https://www.elastic.co/guide/en/elasticsearch/reference/1.7/mapping-nested-type.html" rel="nofollow">https://www.elastic.co/guide/en/elasticsearch/reference/1.7/mapping-nested-type.html</a></p>&#xA;
<p>The way you are querying is wrong because <code>nested documents</code> are indexed separately. See the last para from the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/1.7/mapping-nested-type.html" rel="nofollow">doc</a>.</p>&#xA;&#xA;<p>Your query</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "nested": {&#xA;      "path": "paragraphs",&#xA;      "query": {&#xA;        "query_string": {&#xA;          "default_field": "paragraphs.paragraph.content",&#xA;          "query": "Firefighters AND apparently"&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>is looking for both words in the <strong>same</strong> para and hence you are not getting the result. You need to query them separately like this</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "bool": {&#xA;      "must": [&#xA;        {&#xA;          "nested": {&#xA;            "path": "paragraphs",&#xA;            "query": {&#xA;              "match": {&#xA;                "paragraphs.paragraph.content": "firefighters"&#xA;              }&#xA;            }&#xA;          }&#xA;        },&#xA;        {&#xA;          "nested": {&#xA;            "path": "paragraphs",&#xA;            "query": {&#xA;              "match": {&#xA;                "paragraphs.paragraph.content": "apparently"&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This will give you the right results.</p>&#xA;&#xA;<p>As a side note I do not think you need <code>object datatype</code> inside paragraphs. Following will work fine too</p>&#xA;&#xA;<pre><code>"paragraphs": {&#xA;      "type": "nested",&#xA;      "properties": {&#xA;          "content": {&#xA;              "type": "string"&#xA;          },&#xA;          "number": {&#xA;              "type": "integer"&#xA;          }&#xA;      }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>Hope this helps!!</p>&#xA;