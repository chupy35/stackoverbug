28833699
satistical on filtered data in elasticsearch
<p>I tried to apply statistical on filtered data, but its not working...</p>&#xA;&#xA;<p>My Scenario is:</p>&#xA;&#xA;<p>I want to apply statistical on some filtered data. So i applied the following query:</p>&#xA;&#xA;<pre><code>{&#xA;  "from": 0,&#xA;  "size": 10000,&#xA;  "facets": {&#xA;    "stats": {&#xA;      "statistical": {&#xA;        "field": "xxxx"&#xA;      },"facet_filter": {&#xA;        "and": [&#xA;            {&#xA;              "term": {&#xA;                "id_1": "33"&#xA;              }&#xA;            }&#xA;          ],&#xA;          "or": [&#xA;            {&#xA;              "term": {&#xA;                "type": "aaaa"&#xA;              }&#xA;            },&#xA;            {&#xA;              "term": {&#xA;                "type": "bbbb"&#xA;              }&#xA;            }&#xA;          ]&#xA;        }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Its working Fine. But when i apply on multiple fields its not working.The following is the query:</p>&#xA;&#xA;<pre><code>{&#xA;  "from": 0,&#xA;  "size": 10000,&#xA;  "facets": {&#xA;    "stats": {&#xA;      "statistical": {&#xA;        "field": "xxxx"&#xA;      },"facet_filter": {&#xA;          "and": [&#xA;            {&#xA;              "term": {&#xA;                "id_1": "33"&#xA;              }&#xA;            }&#xA;          ],&#xA;          "or": [&#xA;            {&#xA;              "term": {&#xA;                "type": "aaaa"&#xA;              }&#xA;            },&#xA;            {&#xA;              "term": {&#xA;                "type": "bbbb"&#xA;              }&#xA;            }&#xA;          ]&#xA;        }&#xA;    },&#xA;    "stats1": {&#xA;      "statistical": {&#xA;        "field": "yyyy"&#xA;      },"facet_filter": {&#xA;          "and": [&#xA;            {&#xA;              "term": {&#xA;                "id_1": "33"&#xA;              }&#xA;            }&#xA;          ],&#xA;          "or": [&#xA;            {&#xA;              "term": {&#xA;                "type": "aaaa"&#xA;              }&#xA;            },&#xA;            {&#xA;              "term": {&#xA;                "type": "bbbb"&#xA;              }&#xA;            }&#xA;          ]&#xA;        }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It throws following error:</p>&#xA;&#xA;<pre><code>Parse Failure [No parser for element [stats1]]]; }]",&#xA;   "status": 400&#xA;</code></pre>&#xA;&#xA;<p>Please share your ideas. Thanks in advance.</p>&#xA;
<p>The way you have your facet filters set up uses incorrect syntax, nor do they make logical sense, since you have an <code>"and"</code> and an <code>"or"</code> at the same level. This is the reason for your error. I'm assuming that what you meant was this, with the <code>"or"</code> inside the <code>"and"</code>:</p>&#xA;&#xA;<pre><code>     "facet_filter": {&#xA;        "and": [&#xA;           {&#xA;              "term": {&#xA;                 "id_1": "33"&#xA;              }&#xA;           },&#xA;           {&#xA;              "or": [&#xA;                 {&#xA;                    "term": {&#xA;                       "type": "aaaa"&#xA;                    }&#xA;                 },&#xA;                 {&#xA;                    "term": {&#xA;                       "type": "bbbb"&#xA;                    }&#xA;                 }&#xA;              ]&#xA;           }&#xA;        ]&#xA;     }&#xA;</code></pre>&#xA;&#xA;<p>Furthermore, since your filter is the same in both cases, you may as well use it in a filtered query so you only have to specify it once. Using that, I got the following toy example to work as I assume you're wanting:</p>&#xA;&#xA;<pre><code>DELETE /test_index&#xA;&#xA;PUT /test_index&#xA;{&#xA;   "settings": {&#xA;      "number_of_shards": 1&#xA;   }&#xA;}&#xA;&#xA;POST /test_index/_bulk&#xA;{"index":{"_index":"test_index","_type":"doc","_id":1}}&#xA;{"id_1":"32", "xxxx":2, "yyyy":5,"type":"aaaa"}&#xA;{"index":{"_index":"test_index","_type":"doc","_id":2}}&#xA;{"id_1":"32", "xxxx":3, "yyyy":10,"type":"bbbb"}&#xA;{"index":{"_index":"test_index","_type":"doc","_id":3}}&#xA;{"id_1":"33", "xxxx":4, "yyyy":15,"type":"aaaa"}&#xA;{"index":{"_index":"test_index","_type":"doc","_id":4}}&#xA;{"id_1":"33", "xxxx":5, "yyyy":20,"type":"bbbb"}&#xA;&#xA;&#xA;POST /test_index/_search&#xA;{&#xA;   "size": 0,&#xA;   "query": {&#xA;      "filtered": {&#xA;         "query": {&#xA;            "match_all": {}&#xA;         },&#xA;         "filter": {&#xA;            "and": [&#xA;               {&#xA;                  "term": {&#xA;                     "id_1": "33"&#xA;                  }&#xA;               },&#xA;               {&#xA;                  "or": [&#xA;                     {&#xA;                        "term": {&#xA;                           "type": "aaaa"&#xA;                        }&#xA;                     },&#xA;                     {&#xA;                        "term": {&#xA;                           "type": "bbbb"&#xA;                        }&#xA;                     }&#xA;                  ]&#xA;               }&#xA;            ]&#xA;         }&#xA;      }&#xA;   },&#xA;   "facets": {&#xA;      "stats": {&#xA;         "statistical": {&#xA;            "field": "xxxx"&#xA;         }&#xA;      },&#xA;      "stats1": {&#xA;         "statistical": {&#xA;            "field": "yyyy"&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;...&#xA;{&#xA;   "took": 1,&#xA;   "timed_out": false,&#xA;   "_shards": {&#xA;      "total": 1,&#xA;      "successful": 1,&#xA;      "failed": 0&#xA;   },&#xA;   "hits": {&#xA;      "total": 2,&#xA;      "max_score": 0,&#xA;      "hits": []&#xA;   },&#xA;   "facets": {&#xA;      "stats": {&#xA;         "_type": "statistical",&#xA;         "count": 2,&#xA;         "total": 9,&#xA;         "min": 4,&#xA;         "max": 5,&#xA;         "mean": 4.5,&#xA;         "sum_of_squares": 41,&#xA;         "variance": 0.25,&#xA;         "std_deviation": 0.5&#xA;      },&#xA;      "stats1": {&#xA;         "_type": "statistical",&#xA;         "count": 2,&#xA;         "total": 35,&#xA;         "min": 15,&#xA;         "max": 20,&#xA;         "mean": 17.5,&#xA;         "sum_of_squares": 625,&#xA;         "variance": 6.25,&#xA;         "std_deviation": 2.5&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Having said that, you probably will be better off using aggregations, especially since facets are now deprecated. The same example with a <a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html" rel="nofollow">stats aggregation</a> looks like this:</p>&#xA;&#xA;<pre><code>POST /test_index/_search&#xA;{&#xA;   "size": 0,&#xA;   "query": {&#xA;      "filtered": {&#xA;         "query": {&#xA;            "match_all": {}&#xA;         },&#xA;         "filter": {&#xA;            "and": [&#xA;               {&#xA;                  "term": {&#xA;                     "id_1": "33"&#xA;                  }&#xA;               },&#xA;               {&#xA;                  "or": [&#xA;                     {&#xA;                        "term": {&#xA;                           "type": "aaaa"&#xA;                        }&#xA;                     },&#xA;                     {&#xA;                        "term": {&#xA;                           "type": "bbbb"&#xA;                        }&#xA;                     }&#xA;                  ]&#xA;               }&#xA;            ]&#xA;         }&#xA;      }&#xA;   },&#xA;   "aggs": {&#xA;      "stats": {&#xA;         "stats": {&#xA;            "field": "xxxx"&#xA;         }&#xA;      },&#xA;      "stats1": {&#xA;         "stats": {&#xA;            "field": "yyyy"&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;...&#xA;{&#xA;   "took": 2,&#xA;   "timed_out": false,&#xA;   "_shards": {&#xA;      "total": 1,&#xA;      "successful": 1,&#xA;      "failed": 0&#xA;   },&#xA;   "hits": {&#xA;      "total": 2,&#xA;      "max_score": 0,&#xA;      "hits": []&#xA;   },&#xA;   "aggregations": {&#xA;      "stats": {&#xA;         "count": 2,&#xA;         "min": 4,&#xA;         "max": 5,&#xA;         "avg": 4.5,&#xA;         "sum": 9&#xA;      },&#xA;      "stats1": {&#xA;         "count": 2,&#xA;         "min": 15,&#xA;         "max": 20,&#xA;         "avg": 17.5,&#xA;         "sum": 35&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Or you could use an <a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-aggregations-metrics-extendedstats-aggregation.html" rel="nofollow">extended stats aggregation</a> if you want:</p>&#xA;&#xA;<pre><code>POST /test_index/_search&#xA;{&#xA;   "size": 0,&#xA;   "query": {&#xA;      "filtered": {&#xA;         "query": {&#xA;            "match_all": {}&#xA;         },&#xA;         "filter": {&#xA;            "and": [&#xA;               {&#xA;                  "term": {&#xA;                     "id_1": "33"&#xA;                  }&#xA;               },&#xA;               {&#xA;                  "or": [&#xA;                     {&#xA;                        "term": {&#xA;                           "type": "aaaa"&#xA;                        }&#xA;                     },&#xA;                     {&#xA;                        "term": {&#xA;                           "type": "bbbb"&#xA;                        }&#xA;                     }&#xA;                  ]&#xA;               }&#xA;            ]&#xA;         }&#xA;      }&#xA;   },&#xA;   "aggs": {&#xA;      "stats": {&#xA;         "extended_stats": {&#xA;            "field": "xxxx"&#xA;         }&#xA;      },&#xA;      "stats1": {&#xA;         "extended_stats": {&#xA;            "field": "yyyy"&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;...&#xA;{&#xA;   "took": 1,&#xA;   "timed_out": false,&#xA;   "_shards": {&#xA;      "total": 1,&#xA;      "successful": 1,&#xA;      "failed": 0&#xA;   },&#xA;   "hits": {&#xA;      "total": 2,&#xA;      "max_score": 0,&#xA;      "hits": []&#xA;   },&#xA;   "aggregations": {&#xA;      "stats": {&#xA;         "count": 2,&#xA;         "min": 4,&#xA;         "max": 5,&#xA;         "avg": 4.5,&#xA;         "sum": 9,&#xA;         "sum_of_squares": 41,&#xA;         "variance": 0.25,&#xA;         "std_deviation": 0.5&#xA;      },&#xA;      "stats1": {&#xA;         "count": 2,&#xA;         "min": 15,&#xA;         "max": 20,&#xA;         "avg": 17.5,&#xA;         "sum": 35,&#xA;         "sum_of_squares": 625,&#xA;         "variance": 6.25,&#xA;         "std_deviation": 2.5&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;