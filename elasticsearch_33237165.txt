33237165
How to sort items by array size in ElasticSearch?
<p>I have 3 millions items with this structure:</p>&#xA;&#xA;<pre><code>{&#xA;    "id": "some_id",&#xA;    "title": "some_title",&#xA;    "photos": [&#xA;        {...},&#xA;        {...},&#xA;        ...&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Some items may have empty <code>photos</code> field:</p>&#xA;&#xA;<pre><code>{&#xA;    "id": "some_id",&#xA;    "title": "some_title",&#xA;    "photos": []&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I want to sort by the number of photos to result in elements without photos were at the end of the list.</p>&#xA;&#xA;<p>I have the one working solution but it's very slow on 3 million items:</p>&#xA;&#xA;<pre><code>GET myitems/_search&#xA;{&#xA;   "filter": {&#xA;      ...some filters...&#xA;   },&#xA;   "sort": [&#xA;      {&#xA;          "_script": {&#xA;              "script": "_source.photos.size()",&#xA;              "type": "number",&#xA;              "order": "desc"&#xA;          }&#xA;      }&#xA;   ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This query executes 55 seconds. How to optimize this query?</p>&#xA;
<p>As suggested in the comments, adding a new field with the number of photos would be the way to go. There's a way to achieve this <strong>without reindexing</strong> all your data by using the <a href="https://github.com/yakaz/elasticsearch-action-updatebyquery" rel="nofollow">update by query plugin</a>. </p>&#xA;&#xA;<p>Basically, after installing the plugin, you can run the following query and all your documents will get that new field. However, make sure that your indexing process also populates that new field in the new documents:</p>&#xA;&#xA;<pre><code>curl -XPOST 'localhost:9200/myitems/_update_by_query' -d '{&#xA;    "query" : {&#xA;        "match_all" : {}&#xA;    },&#xA;    "script" : "ctx._source.nb_photos = ctx._source.photos.size();"&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>After this has run, you'll be able to sort your results simply with:</p>&#xA;&#xA;<pre><code>"sort": {"nb_photos": "desc"}&#xA;</code></pre>&#xA;&#xA;<p>Note: for this plugin to work, one needs to have <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-scripting.html#enable-dynamic-scripting" rel="nofollow">scripting enabled</a>, it is already the case for you since you were able to use a sort script, but I'm just mentioning this for completeness' sake.</p>&#xA;
<p>Problem was solved with Transform directive. Now I have a mapping:</p>&#xA;&#xA;<pre><code>PUT /myitems/_mapping/lol&#xA;{&#xA;    "lol" : {&#xA;        "transform": {&#xA;            "lang": "groovy",&#xA;            "script": "ctx._source['has_photos'] = ctx._source['photos'].size() &gt; 0"&#xA;        },&#xA;        "properties" : {&#xA;            ... fields ...&#xA;            "photos" : {"type": "object"},&#xA;            "has_photos": {"type": "boolean"}&#xA;            ... fields ...&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now I can sort items by photos existence:</p>&#xA;&#xA;<pre><code>GET /test/_search&#xA;{&#xA;    "sort": [&#xA;        {&#xA;            "has_photos": {&#xA;               "order": "desc"&#xA;            }&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Unfortunately, this will cause full reindexation.</p>&#xA;