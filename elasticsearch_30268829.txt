30268829
ElasticSearch Separate Instances Running on Same Computer
<p>I have an elasticsearch instance running on the default port (9200) that is used to power the backend of my application.  I tried to run another instance (separate directory) on 9201 which had the same index but different data and it seemed to overwrite my first instance.  A little more background:</p>&#xA;&#xA;<p>localhost:9200&#xA;/appIndex/appData</p>&#xA;&#xA;<p>localhost:9201&#xA;/appIndex/historicalData</p>&#xA;&#xA;<p>I had them running on different ports on the same computer at the same time.  I noticed that my first instance was overwritten by second (some sort of fail-over/load balancing built into ES?)  Afterwards, I had the following:</p>&#xA;&#xA;<p>localhost:9200&#xA;/appIndex/historicalData</p>&#xA;&#xA;<p>localhost:9201&#xA;/appIndex/historicalData</p>&#xA;&#xA;<p>So the reason I want to do this is because 9200 will power my application and should be as lean as possible.  9201 will have many, many GB's of data so I'd like to eventually offload that onto another server entirely, but for now they will run on the same server.</p>&#xA;&#xA;<p>I am thinking that even if I change the root index of the server so it's different (ex: 9201 = /dataIndex/historicalData) I don't want the first instance generating a new index and copying the data from the other instance because the defeats the purpose of me doing this.</p>&#xA;&#xA;<p>Can anyone shed some light on how I can keep these two instances from talking to each other?</p>&#xA;&#xA;<p>Thank you.</p>&#xA;
<p>I <em>think</em> that your two instances formed a cluster and since you said you where using the same index name, the cluster distributed the index which probably led to the overwrite.</p>&#xA;&#xA;<blockquote>&#xA;  <p>some sort of fail-over/load balancing built into ES?</p>&#xA;</blockquote>&#xA;&#xA;<p>ES is, at the very core, a <em>distributed</em> search and it's out of the box settings <em>will form</em> distributed clusters.</p>&#xA;&#xA;<p>If your two instances <em>don't</em> need to know each other, simply give each of them their own <code>cluster.name</code>.</p>&#xA;&#xA;<p>There are also other/further settings available to avoid distributed the data, you could also by default set <code>index.number_of_replicas</code> to <code>0</code> which will effectively not copy your data around (this setting can also be applied when creating an index or afterwards, see the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/1.5/indices-update-settings.html" rel="nofollow">Update Indices Setting</a> endpoint).</p>&#xA;