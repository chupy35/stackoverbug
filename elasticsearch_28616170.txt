28616170
Elasticsearch: generating terms from array using script
<p>Would love an explanation of why this happens and how to correct it.</p>&#xA;&#xA;<p>Here's a snippet of the source document:</p>&#xA;&#xA;<pre><code>{&#xA;   "created_time":1412988495000,&#xA;   "tags":{&#xA;      "items":[&#xA;         {&#xA;            "tag_type":"Placement",&#xA;            "tag_id":"id1"&#xA;         },&#xA;         {&#xA;            "tag_type":"Product",&#xA;            "tag_id":"id2"&#xA;         }&#xA;      ]&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The following terms aggregation:  </p>&#xA;&#xA;<pre><code>  "aggs":{&#xA;       "tags":{&#xA;          "terms":{&#xA;             "script":"doc['tags'].value != null ? doc['tags.items.tag_type'].value + ':' + doc['tags.items.tag_id'].value : ''",&#xA;             "size":2000,&#xA;             "exclude":{&#xA;                "pattern":"null:null"&#xA;             }&#xA;          }&#xA;       }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>returns:</p>&#xA;&#xA;<pre><code>   "buckets":[&#xA;      {&#xA;         "key":"Placement:id1",&#xA;         "doc_count":1&#xA;      },&#xA;      {&#xA;         "key":"Placement:id2",&#xA;         "doc_count":1&#xA;      }&#xA;   ]&#xA;</code></pre>&#xA;&#xA;<p>...when you would expect:</p>&#xA;&#xA;<pre><code>   "buckets":[&#xA;      {&#xA;         "key":"Placement:id1",&#xA;         "doc_count":1&#xA;      },&#xA;      {&#xA;         "key":"Product:id2",&#xA;         "doc_count":1&#xA;      }&#xA;   ]&#xA;</code></pre>&#xA;
<p>I would probably go with a <a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/mapping-nested-type.html" rel="nofollow"><code>nested type</code></a>. I don't know all the details of your setup, but here is a proof of concept, at least. I took out the <code>"items"</code> property because I didn't need that many layers, and just used <code>"tags"</code> as the <code>nested</code> type. It could be added back in if needed, I think.</p>&#xA;&#xA;<p>So I set up an index with a <code>"nested"</code> property:</p>&#xA;&#xA;<pre><code>DELETE /test_index&#xA;&#xA;PUT /test_index&#xA;{&#xA;   "settings": {&#xA;      "number_of_shards": 1,&#xA;      "number_of_replicas": 0&#xA;   },&#xA;   "mappings": {&#xA;      "doc": {&#xA;         "properties": {&#xA;            "created_time": {&#xA;               "type": "date"&#xA;            },&#xA;            "tags": {&#xA;               "type": "nested",&#xA;               "properties": {&#xA;                  "tag_type": {&#xA;                     "type": "string",&#xA;                     "index": "not_analyzed"&#xA;                  },&#xA;                  "tag_id": {&#xA;                     "type": "string",&#xA;                     "index": "not_analyzed"&#xA;                  }&#xA;               }&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then added a couple of docs (notice that the structure differs slightly from yours):</p>&#xA;&#xA;<pre><code>PUT /test_index/doc/1&#xA;{&#xA;   "created_time": 1412988495000,&#xA;   "tags": [&#xA;      {&#xA;         "tag_type": "Placement",&#xA;         "tag_id": "id1"&#xA;      },&#xA;      {&#xA;         "tag_type": "Product",&#xA;         "tag_id": "id2"&#xA;      }&#xA;   ]&#xA;}&#xA;&#xA;PUT /test_index/doc/2&#xA;{&#xA;   "created_time": 1412988475000,&#xA;   "tags": [&#xA;      {&#xA;         "tag_type": "Type3",&#xA;         "tag_id": "id3"&#xA;      },&#xA;      {&#xA;         "tag_type": "Type4",&#xA;         "tag_id": "id3"&#xA;      }&#xA;   ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now a <a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-aggregations-bucket-terms-aggregation.html#search-aggregations-bucket-terms-aggregation-script" rel="nofollow">scripted <code>terms</code> aggregation</a> inside a <a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-aggregations-bucket-nested-aggregation.html" rel="nofollow"><code>nested aggregation</code></a> seems to do the trick:</p>&#xA;&#xA;<pre><code>POST /test_index/_search?search_type=count&#xA;{&#xA;   "query": {&#xA;      "match_all": {}&#xA;   },&#xA;   "aggs": {&#xA;      "tags": {&#xA;         "nested": { "path": "tags" },&#xA;         "aggs":{&#xA;             "tag_vals": {&#xA;                 "terms": {&#xA;                     "script": "doc['tag_type'].value+':'+doc['tag_id'].value"&#xA;                 }&#xA;             }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;...&#xA;{&#xA;   "took": 3,&#xA;   "timed_out": false,&#xA;   "_shards": {&#xA;      "total": 1,&#xA;      "successful": 1,&#xA;      "failed": 0&#xA;   },&#xA;   "hits": {&#xA;      "total": 2,&#xA;      "max_score": 0,&#xA;      "hits": []&#xA;   },&#xA;   "aggregations": {&#xA;      "tags": {&#xA;         "doc_count": 4,&#xA;         "tag_vals": {&#xA;            "buckets": [&#xA;               {&#xA;                  "key": "Placement:id1",&#xA;                  "doc_count": 1&#xA;               },&#xA;               {&#xA;                  "key": "Product:id2",&#xA;                  "doc_count": 1&#xA;               },&#xA;               {&#xA;                  "key": "Type3:id3",&#xA;                  "doc_count": 1&#xA;               },&#xA;               {&#xA;                  "key": "Type4:id3",&#xA;                  "doc_count": 1&#xA;               }&#xA;            ]&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is the code I used:</p>&#xA;&#xA;<p><a href="http://sense.qbox.io/gist/4ceaf8693f85ff257c2fd0639ba62295f2e5e8c5" rel="nofollow">http://sense.qbox.io/gist/4ceaf8693f85ff257c2fd0639ba62295f2e5e8c5</a></p>&#xA;