28980452
Aggregating on date field where date value was stored in milliseconds
<p>I am trying to store milliseconds since the UNIX EPOCH in a date field in elasticsearch. This should be possible as stated in the online guide: </p>&#xA;&#xA;<blockquote>&#xA;  <p>The date type will also accept a long number representing UTC milliseconds since the epoch, regardless of the format it can handle.&#xA;  <a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/mapping-core-types.html" rel="nofollow">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/mapping-core-types.html</a>: </p>&#xA;</blockquote>&#xA;&#xA;<p>The reason for this is that I have a collection of files for which the version is also the timestamp that they were created. I have therefore defined the following index and mapping (example):</p>&#xA;&#xA;<pre><code>curl -XPUT 'http://localhost:9200/datastore'`&#xA;&#xA;curl -XPUT 'http://localhost:9200/datastore/_mapping/files' -d '&#xA;{&#xA;    "files" : {&#xA;        "properties" : {&#xA;            "version" : {&#xA;                "type" : "date"&#xA;            }&#xA;        }&#xA;    }&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>After storing milliseconds as follows:</p>&#xA;&#xA;<pre><code>curl -XPOST 'http://localhost:9200/datastore/files' -d '{&#xA;    "version": "0"&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>I retrieve the field with a normal query, it comes back fine:</p>&#xA;&#xA;<pre><code>curl -XGET "http://127.0.0.1:9200/datastore/_search?pretty" -d '{&#xA;    "fields" : ["version"]&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>Response: </p>&#xA;&#xA;<pre><code>{&#xA;  "took" : 3,&#xA;  "timed_out" : false,&#xA;  "_shards" : {&#xA;    "total" : 5,&#xA;    "successful" : 5,&#xA;    "failed" : 0&#xA;  },&#xA;  "hits" : {&#xA;    "total" : 1,&#xA;    "max_score" : 1.0,&#xA;    "hits" : [ {&#xA;      "_index" : "datastore",&#xA;      "_type" : "files",&#xA;      "_id" : "AUwHnaoalv87gaUunUaf",&#xA;      "_score" : 1.0,&#xA;      "fields" : {&#xA;        "version" : [ "0" ]&#xA;      }&#xA;    } ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However when I try to aggregate on the field, the values are now suddenly interpreted as milliseconds from the year 0. A different value is returned as key for each of the bins:</p>&#xA;&#xA;<pre><code>curl -XGET "http://localhost:9200/datastore/_search?pretty" -d '{&#xA;    "aggs": {&#xA;        "uniqueVersions": {&#xA;            "terms": {&#xA;                "field": "version"&#xA;            }&#xA;        }&#xA;    }&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>Response:</p>&#xA;&#xA;<pre><code>{&#xA;  "took" : 93,&#xA;  "timed_out" : false,&#xA;  "_shards" : {&#xA;    "total" : 5,&#xA;    "successful" : 5,&#xA;    "failed" : 0&#xA;  },&#xA;  "hits" : {&#xA;    "total" : 1,&#xA;    "max_score" : 1.0,&#xA;    "hits" : [ {&#xA;      "_index" : "datastore",&#xA;      "_type" : "files",&#xA;      "_id" : "AUwHnaoalv87gaUunUaf",&#xA;      "_score" : 1.0,&#xA;      "_source":{&#xA;    "version": "0"&#xA;}&#xA;    } ]&#xA;  },&#xA;  "aggregations" : {&#xA;    "uniqueVersions" : {&#xA;      "doc_count_error_upper_bound" : 0,&#xA;      "sum_other_doc_count" : 0,&#xA;      "buckets" : [ {&#xA;        "key" : -62167219200000,&#xA;        "key_as_string" : "0000-01-01T00:00:00.000Z",&#xA;        "doc_count" : 1&#xA;      } ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>As you can see the key is now the actual year zero. I would like to know why this is the case as I was expecting "0" as the bucket key.</p>&#xA;
<p>Seems like the issue was with the JSON string during indexing. I was indexing it as follows:</p>&#xA;&#xA;<pre><code>curl -XPOST 'http://localhost:9200/datastore/files' -d '{&#xA;    "version": "0"&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>where it should have been</p>&#xA;&#xA;<pre><code>curl -XPOST 'http://localhost:9200/datastore/files' -d '{&#xA;    "version": 0&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>It looks like the milliseconds will only be seen as milliseconds if the JSON value is an actual long. Otherwise, the standard date date time format is used and the zero is interpreted as year zero.</p>&#xA;