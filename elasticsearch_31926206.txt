31926206
ElasticSearch - Group by parent using path tokenizer
<p>I have the following documents:</p>&#xA;&#xA;<pre><code>PUT /my_index/topic/1&#xA;{&#xA;"path" : "fruits"&#xA;}&#xA;&#xA;PUT /my_index/topic/2&#xA;{&#xA;"path" : "fruits/apple"&#xA;}&#xA;&#xA;PUT /my_index/topic/3&#xA;{&#xA;"path" : "fruits/pear"&#xA;}&#xA;&#xA;PUT /my_index/topic/4&#xA;{&#xA;"path" : "vegetables"&#xA;}&#xA;&#xA;PUT /my_index/topic/5&#xA;{&#xA;"path" : "vegetables/carrot"&#xA;}&#xA;&#xA;PUT /my_index/topic/6&#xA;{&#xA;"path" : "vegetables/broccoli"&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I am struggling to figure out how to aggregate these documents so that I have the following output:</p>&#xA;&#xA;<p>Fruits {&#xA;  apple,&#xA;  pear&#xA;}</p>&#xA;&#xA;<p>Vegetables{&#xA;  carrot,&#xA;  broccoli&#xA;}</p>&#xA;
<p>One way I found to do this was by using the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-pathhierarchy-tokenizer.html" rel="nofollow"><code>path_hierarchy</code> tokenizer</a> and a <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-core-types.html#token_count" rel="nofollow"><code>token_count</code></a> field. First we create <code>my_index</code> like this:</p>&#xA;&#xA;<pre><code>curl -XPUT localhost:9200/my_index -d '{&#xA;  "settings": {&#xA;    "analysis": {&#xA;      "analyzer": {&#xA;        "path-analyzer": {&#xA;          "type": "custom",&#xA;          "tokenizer": "path-tokenizer"&#xA;        }&#xA;      },&#xA;      "tokenizer": {&#xA;        "path-tokenizer": {&#xA;          "type": "path_hierarchy"&#xA;        }&#xA;      }&#xA;    }&#xA;  },&#xA;  "mappings": {&#xA;    "topic": {&#xA;      "properties": {&#xA;        "path": {&#xA;          "type": "string",&#xA;          "index_analyzer": "path-analyzer",&#xA;          "fields": {&#xA;            "tokens": {&#xA;              "type": "token_count",&#xA;              "store": "yes",&#xA;              "analyzer": "standard"&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>Then we index your documents using the same PUT queries as in your question.</p>&#xA;&#xA;<p>Finally, the search query that outputs what you expect can be expressed like this:</p>&#xA;&#xA;<pre><code>curl -XPOST localhost:9200/my_index/topic/_search?pretty -d '{&#xA;  "size": 0,&#xA;  "aggs": {&#xA;    "first_level": {&#xA;      "terms": {&#xA;        "field": "path",&#xA;        "exclude": ".*/.*"&#xA;      },&#xA;      "aggs": {&#xA;        "second_level": {&#xA;          "filter": {&#xA;            "term": {&#xA;              "path.tokens": 2&#xA;            }&#xA;          },&#xA;          "aggs": {&#xA;            "type": {&#xA;              "terms": {&#xA;                "field": "path",&#xA;                "include": ".*/.*"&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>And the output:</p>&#xA;&#xA;<pre><code>{&#xA;  ...&#xA;  "aggregations" : {&#xA;    "first_level" : {&#xA;      "doc_count_error_upper_bound" : 0,&#xA;      "sum_other_doc_count" : 0,&#xA;      "buckets" : [ {&#xA;        "key" : "fruits",&#xA;        "doc_count" : 3,&#xA;        "second_level" : {&#xA;          "doc_count" : 2,&#xA;          "type" : {&#xA;            "doc_count_error_upper_bound" : 0,&#xA;            "sum_other_doc_count" : 0,&#xA;            "buckets" : [ {&#xA;              "key" : "fruits/apple",&#xA;              "doc_count" : 1&#xA;            }, {&#xA;              "key" : "fruits/pear",&#xA;              "doc_count" : 1&#xA;            } ]&#xA;          }&#xA;        }&#xA;      }, {&#xA;        "key" : "vegetables",&#xA;        "doc_count" : 3,&#xA;        "second_level" : {&#xA;          "doc_count" : 2,&#xA;          "type" : {&#xA;            "doc_count_error_upper_bound" : 0,&#xA;            "sum_other_doc_count" : 0,&#xA;            "buckets" : [ {&#xA;              "key" : "vegetables/broccoli",&#xA;              "doc_count" : 1&#xA;            }, {&#xA;              "key" : "vegetables/carrot",&#xA;              "doc_count" : 1&#xA;            } ]&#xA;          }&#xA;        }&#xA;      } ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;