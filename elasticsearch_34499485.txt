34499485
What ElasticSearch will do after a lost datanode come back
<p>I have a big ES cluster with config of shard replicate=2, one of the data nodes down(lost power) yesterday. I think the lost replicates have already been reproduced/Copied in the other nodes, So I'm wording that how ES would treat the lost shards/data when I put the lost node back to the cluster? Thanks!   </p>&#xA;
<p>When a node goes down all the shards that it hosted are shifted to <strong>"unassigned"</strong> state. Right now when the allocation algorithm for unassigned shards tries to assign them as quickly as possible. It makes some effort to balance them while it is allocating them but if the most balanced node is throttled then it'll just assign the shard to the next most balanced node. This causes it to assign all the shards super fast (good) but it can make the cluster quite unbalanced (bad).</p>&#xA;&#xA;<p>I think a better set of "production" settings would say "do not re-allocate shards to other nodes when a node goes down".</p>&#xA;&#xA;<p>It seems like <strong>cluster.routing.allocation.enable</strong> should have an additional option: <strong>recovery_and_new</strong> (this would still allow rebalancing). "Recovery" in this case would mean that shards can only be initialized on a node that already had them on it.</p>&#xA;&#xA;<p>The assumption here is that the cluster has enough replication that losing a single replica is not such a large event that it is worth triggering a whole lot of network traffic and potentially causing other problems.</p>&#xA;&#xA;<p><strong>NOTE:</strong> For large deployments ES shard recovery after a node goes down or some networking event occurs seems to cause more problems than are necessary because all of the shards end up getting shuffled around the cluster and can cause other performance problems. Seems better to leave some replicas uninitialized until the nodes are alive again.</p>&#xA;