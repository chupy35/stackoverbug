31577503
Sorting by other fields in sub-aggregation in Elasticsearch
<p>Say I have an index with documents that look like this:</p>&#xA;&#xA;<pre><code>{&#xA;    id: 1,&#xA;    carId: 1,&#xA;    carName: 'Toyota Matrix',&#xA;    carClass: 'Compact',&#xA;    insured: false&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is it possible to have one Elasticsearch query that will allow me to have a table with Car ID, Car Name, Car class, and # Insured (through an aggregation), and have each column sortable? The table would look something like this:</p>&#xA;&#xA;<pre><code>Car ID | Car name      | Car class | # Insured&#xA;-------------------------------------------------------------&#xA;     1 | Toyota Matrix | Compact   | 123&#xA;     2 | Ford F-150    | Truck     | 78&#xA;   ...  &#xA;</code></pre>&#xA;&#xA;<p>I know I can create an aggregation on car ID, and then a sub-aggregation on # insured; something like this:</p>&#xA;&#xA;<pre><code>{&#xA;    "aggs": {&#xA;        "car_id": {&#xA;            "terms": {&#xA;                "field": "carId"&#xA;            },&#xA;            "aggs": {&#xA;                "insured": { &#xA;                    "filter": {&#xA;                        "term": {&#xA;                            "insured": "T"&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And in doing this, I can sort by either car ID or # insured. However, I can't sort by either car name or car class. If I create a sub-aggregation on car name or car class, it's not a single-value aggregation, so I can't sort by it.</p>&#xA;&#xA;<p>Is there any way I could sort by these other fields in an aggregation?</p>&#xA;
<p>Im not sure i understand your real question but in order to sort multiple field here is the way to do it <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-sort.html" rel="nofollow noreferrer">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-sort.html</a> i believe you dont even need aggregation</p>&#xA;&#xA;<pre><code>{&#xA;    "sort" : [&#xA;        { "insured" : "desc" },&#xA;        { "car_name" : "desc" },&#xA;        { "car_id" : "desc" },&#xA;        ...&#xA;    ],&#xA;    "query" : {&#xA;        "match_all" : {}&#xA;    }&#xA;}&#xA;</code></pre>&#xA;