34030565
Aggregation Time Series Query in ElasticSearch
<p>I have data in elasticsearch whose records looks like:</p>&#xA;&#xA;<pre><code>data    &#xA;    {&#xA;      start: 20,&#xA;      userid: "123",&#xA;    },&#xA;    {&#xA;      start: 34,&#xA;      userid: "234",&#xA;    },&#xA;    {&#xA;      start: 8,&#xA;      userid: "123",&#xA;    },&#xA;    {&#xA;      start: 12,&#xA;      userid: "234",&#xA;    },&#xA;    {&#xA;      start: 18,&#xA;      userid: "345",&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>"start" is a long (measure of time) and "userid" is a String. The data contains millions of user with multiple records for the same user.</p>&#xA;&#xA;<pre><code>Question:&#xA;</code></pre>&#xA;&#xA;<p>I need all userid(s) who has their first record (sorted based on 'start') lies between times t1 and t2, e.g. between 10 and 15.</p>&#xA;&#xA;<pre><code>For userid 123, sorted times are: {8, 20}&#xA;For userid 234, sorted times are: {12, 34}&#xA;For userid 345, sorted times are: {18}&#xA;</code></pre>&#xA;&#xA;<p>That's why it should return only userid "234", because just for this user, the first entry in the time array (sorted) is between 10 and 15.</p>&#xA;&#xA;<pre><code>Answer&#xA;234&#xA;</code></pre>&#xA;
<p>You can do this with the new <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-bucket-selector-aggregation.html" rel="nofollow">bucket selector aggregation</a> in ES 2.0.</p>&#xA;&#xA;<p>To test it I set up a trivial index with the data you provided (I added a couple more to make it clear the aggregation was working):</p>&#xA;&#xA;<pre><code>DELETE /test_index&#xA;&#xA;POST /test_index/doc/_bulk&#xA;{"index":{"_id":1}}&#xA;{"start":20,"userid":"123"}&#xA;{"index":{"_id":2}}&#xA;{"start":34,"userid":"234"}&#xA;{"index":{"_id":3}}&#xA;{"start":8,"userid":"123"}&#xA;{"index":{"_id":4}}&#xA;{"start":12,"userid":"234"}&#xA;{"index":{"_id":5}}&#xA;{"start":18,"userid":"345"}&#xA;{"index":{"_id":6}}&#xA;{"start":8,"userid":"555"}&#xA;{"index":{"_id":7}}&#xA;{"start":12,"userid":"555"}&#xA;</code></pre>&#xA;&#xA;<p>Then I can get what you want with the following query:</p>&#xA;&#xA;<pre><code>POST /test_index/_search&#xA;{&#xA;   "size": 0,&#xA;   "aggs": {&#xA;      "userid_terms": {&#xA;         "terms": {&#xA;            "field": "userid"&#xA;         },&#xA;         "aggs": {&#xA;            "min_start": {&#xA;               "min": {&#xA;                  "field": "start"&#xA;               }&#xA;            },&#xA;            "min_start_filter": {&#xA;               "bucket_selector": {&#xA;                  "buckets_path": {&#xA;                     "min_start": "min_start"&#xA;                  },&#xA;                  "script": "min_start &gt;= 10 &amp;&amp; min_start &lt;= 15"&#xA;               }&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>which returns:</p>&#xA;&#xA;<pre><code>{&#xA;   "took": 7,&#xA;   "timed_out": false,&#xA;   "_shards": {&#xA;      "total": 5,&#xA;      "successful": 5,&#xA;      "failed": 0&#xA;   },&#xA;   "hits": {&#xA;      "total": 7,&#xA;      "max_score": 0,&#xA;      "hits": []&#xA;   },&#xA;   "aggregations": {&#xA;      "userid_terms": {&#xA;         "doc_count_error_upper_bound": 0,&#xA;         "sum_other_doc_count": 0,&#xA;         "buckets": [&#xA;            {&#xA;               "key": "234",&#xA;               "doc_count": 2,&#xA;               "min_start": {&#xA;                  "value": 12&#xA;               }&#xA;            }&#xA;         ]&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is the code I used to test it:</p>&#xA;&#xA;<p><a href="http://sense.qbox.io/gist/7427b87e878c23ce03bac199d6975434d66046f9" rel="nofollow">http://sense.qbox.io/gist/7427b87e878c23ce03bac199d6975434d66046f9</a></p>&#xA;