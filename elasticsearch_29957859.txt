29957859
Elastic Search Search Query Returning Incorrect Results
<p>I'm executing a search query on an ElasticSearch index that is giving me strange results. I want to find all documents where the <code>product.id = 209349</code>:</p>&#xA;&#xA;<pre><code>{&#xA;  "index": "products",&#xA;  "from": 0,&#xA;  "size": 100,&#xA;  "body": {&#xA;    "query": {&#xA;      "filtered": {&#xA;        "filter": [&#xA;          {&#xA;            "term": {&#xA;              "product.id": 209349&#xA;            }&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However, the results are returning me a document where <code>product.id = 83875</code>. What I noticed is the <code>product.variant.id</code> equals <code>209349</code>...  What's going on here?</p>&#xA;&#xA;<pre><code>{&#xA;  "took": 1,&#xA;  "timed_out": false,&#xA;  "_shards": {&#xA;    "total": 1,&#xA;    "successful": 1,&#xA;    "failed": 0&#xA;  },&#xA;  "hits": {&#xA;    "total": 1,&#xA;    "max_score": 1,&#xA;    "hits": [&#xA;      {&#xA;        "_index": "products",&#xA;        "_type": "product",&#xA;        "_id": "UPC-83875",&#xA;        "_score": 1,&#xA;        "_source": {&#xA;          "mpn": "UPC-83875",&#xA;          "product_count": 1,&#xA;          "price": "448.00",&#xA;          "price_discount_amount": null,&#xA;          "product": [&#xA;            {&#xA;              "id": 83875,&#xA;              "posted_on": "2014-07-23 22:08:36",&#xA;              "status_id": 3,&#xA;              "sku": "23469984",&#xA;              "mpn": "UPC-83875",&#xA;              "name": "Laser Toner Cartridge Set Black Cyan Yellow Magenta",&#xA;              "description": "",&#xA;              "has_image": true,&#xA;              "currency_id": 1,&#xA;              "price": "448.00",&#xA;              "variant": [&#xA;                {&#xA;                  "id": 209349,&#xA;                  "sku": "23469984",&#xA;                  "name": null,&#xA;                  "price": "448.00",&#xA;                  "discount_amount": null,&#xA;                  "price_total": "448.00",&#xA;                  "has_image": false&#xA;                }&#xA;              ]&#xA;            }&#xA;          ]&#xA;        }&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here's the schema:</p>&#xA;&#xA;<pre><code>{&#xA;  "dynamic": "strict",&#xA;  "properties": {&#xA;    "mpn": {&#xA;      "type": "string",&#xA;      "index": "not_analyzed"&#xA;    },&#xA;    "price": {&#xA;      "type": "double"&#xA;    },&#xA;    "price_discount_amount": {&#xA;      "type": "double"&#xA;    },&#xA;    "product": {&#xA;      "properties": {&#xA;        "id": {&#xA;          "type": "long"&#xA;        },&#xA;        "posted_on": {&#xA;          "type": "date",&#xA;          "format": "yyyy-MM-dd HH:mm:ss"&#xA;        },&#xA;        "status_id": {&#xA;          "type": "long"&#xA;        },&#xA;        "sku": {&#xA;          "type": "string",&#xA;          "index": "not_analyzed"&#xA;        },&#xA;        "mpn": {&#xA;          "type": "string",&#xA;          "index": "not_analyzed"&#xA;        },&#xA;        "name": {&#xA;          "type": "string",&#xA;          "analyzer": "english"&#xA;        },&#xA;        "description": {&#xA;          "type": "string",&#xA;          "analyzer": "english"&#xA;        },&#xA;        "has_image": {&#xA;          "type": "boolean"&#xA;        },&#xA;        "price": {&#xA;          "type": "double"&#xA;        },&#xA;        "price_discount_amount": {&#xA;          "type": "double"&#xA;        },&#xA;        "currency_id": {&#xA;          "type": "long"&#xA;        },&#xA;        "variant": {&#xA;          "properties": {&#xA;            "id": {&#xA;              "type": "long"&#xA;            },&#xA;            "sku": {&#xA;              "type": "string",&#xA;              "index": "not_analyzed"&#xA;            },&#xA;            "name": {&#xA;              "type": "string",&#xA;              "analyzer": "english"&#xA;            },&#xA;            "discount_amount": {&#xA;              "type": "double"&#xA;            },&#xA;            "price": {&#xA;              "type": "double"&#xA;            },&#xA;            "price_total": {&#xA;              "type": "double"&#xA;            },&#xA;            "has_image": {&#xA;              "type": "boolean"&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Edit/Solved: It appears the issue was the fact that my index <code>_type</code> is named <code>product</code> as well as the inner object. So what was happening was ES matched <code>&lt;_type&gt;.id</code> (kinda like doing <code>*.id</code>) and it would match the <code>variant.id</code> because it was an <code>id</code> field.</p>&#xA;&#xA;<p>The correct name to use is apparently <code>product.product.id</code> which ends up being a full path.</p>&#xA;&#xA;<p>This behavior is apparently to appease some users long ago: <a href="https://github.com/elastic/elasticsearch/issues/3005" rel="nofollow">https://github.com/elastic/elasticsearch/issues/3005</a></p>&#xA;
<p>I'm not sure why you're getting that result (it wasn't returned when I tried it), but you might want to try a mapping like this, using <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-nested-type.html" rel="nofollow">nested types</a>:</p>&#xA;&#xA;<pre><code>PUT /test_index&#xA;{&#xA;   "mappings": {&#xA;      "doc": {&#xA;         "properties": {&#xA;            "mpn": {&#xA;               "type": "string"&#xA;            },&#xA;            "price": {&#xA;               "type": "string"&#xA;            },&#xA;            "product_count": {&#xA;               "type": "long"&#xA;            },&#xA;            "product": {&#xA;               "type": "nested",&#xA;               "properties": {&#xA;                  "currency_id": {&#xA;                     "type": "long"&#xA;                  },&#xA;                  "description": {&#xA;                     "type": "string"&#xA;                  },&#xA;                  "has_image": {&#xA;                     "type": "boolean"&#xA;                  },&#xA;                  "id": {&#xA;                     "type": "long"&#xA;                  },&#xA;                  "mpn": {&#xA;                     "type": "string"&#xA;                  },&#xA;                  "name": {&#xA;                     "type": "string"&#xA;                  },&#xA;                  "posted_on": {&#xA;                     "type": "string"&#xA;                  },&#xA;                  "price": {&#xA;                     "type": "string"&#xA;                  },&#xA;                  "sku": {&#xA;                     "type": "string"&#xA;                  },&#xA;                  "status_id": {&#xA;                     "type": "long"&#xA;                  },&#xA;                  "variant": {&#xA;                     "type": "nested",&#xA;                     "properties": {&#xA;                        "has_image": {&#xA;                           "type": "boolean"&#xA;                        },&#xA;                        "id": {&#xA;                           "type": "long"&#xA;                        },&#xA;                        "price": {&#xA;                           "type": "string"&#xA;                        },&#xA;                        "price_total": {&#xA;                           "type": "string"&#xA;                        },&#xA;                        "sku": {&#xA;                           "type": "string"&#xA;                        }&#xA;                     }&#xA;                  }&#xA;               }&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When I created an index using this mapping, and indexed your document:</p>&#xA;&#xA;<pre><code>PUT /test_index/doc/UPC-83875&#xA;{&#xA;   "mpn": "UPC-83875",&#xA;   "product_count": 1,&#xA;   "price": "448.00",&#xA;   "price_discount_amount": null,&#xA;   "product": [&#xA;      {&#xA;         "id": 83875,&#xA;         "posted_on": "2014-07-23 22:08:36",&#xA;         "status_id": 3,&#xA;         "sku": "23469984",&#xA;         "mpn": "UPC-83875",&#xA;         "name": "Laser Toner Cartridge Set Black Cyan Yellow Magenta",&#xA;         "description": "",&#xA;         "has_image": true,&#xA;         "currency_id": 1,&#xA;         "price": "448.00",&#xA;         "variant": [&#xA;            {&#xA;               "id": 209349,&#xA;               "sku": "23469984",&#xA;               "name": null,&#xA;               "price": "448.00",&#xA;               "discount_amount": null,&#xA;               "price_total": "448.00",&#xA;               "has_image": false&#xA;            }&#xA;         ]&#xA;      }&#xA;   ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then used a <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-nested-filter.html" rel="nofollow">nested filter</a> in my query, it wasn't returned:</p>&#xA;&#xA;<pre><code>POST /test_index/_search&#xA;{&#xA;   "query": {&#xA;      "filtered": {&#xA;         "query": {&#xA;            "match_all": {}&#xA;         },&#xA;         "filter": {&#xA;            "nested": {&#xA;               "path": "product",&#xA;               "filter": {&#xA;                  "term": {&#xA;                     "product.id": 209349&#xA;                  }&#xA;               }&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;...&#xA;{&#xA;   "took": 1,&#xA;   "timed_out": false,&#xA;   "_shards": {&#xA;      "total": 1,&#xA;      "successful": 1,&#xA;      "failed": 0&#xA;   },&#xA;   "hits": {&#xA;      "total": 0,&#xA;      "max_score": null,&#xA;      "hits": []&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However, it <em>was</em> returned by both this query:</p>&#xA;&#xA;<pre><code>POST /test_index/_search&#xA;{&#xA;   "query": {&#xA;      "filtered": {&#xA;         "query": {&#xA;            "match_all": {}&#xA;         },&#xA;         "filter": {&#xA;            "nested": {&#xA;               "path": "product",&#xA;               "filter": {&#xA;                  "term": {&#xA;                     "product.id": 83875&#xA;                  }&#xA;               }&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and this one:</p>&#xA;&#xA;<pre><code>POST /test_index/_search&#xA;{&#xA;   "query": {&#xA;      "filtered": {&#xA;         "query": {&#xA;            "match_all": {}&#xA;         },&#xA;         "filter": {&#xA;            "nested": {&#xA;               "path": "product.variant",&#xA;               "filter": {&#xA;                  "term": {&#xA;                     "product.variant.id": 209349&#xA;                  }&#xA;               }&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is some code I used for testing:</p>&#xA;&#xA;<p><a href="http://sense.qbox.io/gist/8f5fa6f2ced088a42b92f495c0668024b9ef19c8" rel="nofollow">http://sense.qbox.io/gist/8f5fa6f2ced088a42b92f495c0668024b9ef19c8</a></p>&#xA;