33129608
Filtering on Elasticsearch Optional Fields
<p>I'm using Elasticsearch to query a document type, that has an <em>optional</em> location field. When searching, if that field does not exist, those results should be returned, as well as filtering on the results that do.</p>&#xA;&#xA;<p>It seems like the OR filter in Elasticsearch does not short circuit, as this:</p>&#xA;&#xA;<pre><code>"query": {&#xA;    "filtered": {&#xA;        "query": {&#xA;            "match_phrase_prefix": {&#xA;                "display_name": "SearchQuery"&#xA;            }&#xA;        },&#xA;    "filter": {&#xA;        "or": [&#xA;        {&#xA;            "missing": {&#xA;                "field": "location"&#xA;            }&#xA;        },&#xA;        {&#xA;            "geo_distance" : {&#xA;                "distance" : "20mi",&#xA;                "location" : {&#xA;                    "lat" : 33.47,&#xA;                    "lon" : -112.07&#xA;                }&#xA;            }&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Fails with "failed to find geo_point field [location]".</p>&#xA;&#xA;<p>Is there any way to perform this (or something along the same vein) in ES?</p>&#xA;
<p>I don't know why yours isn't working but I've used the <a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/combining-filters.html#bool-filter" rel="nofollow">bool filter</a> with great success in the past. The <code>should</code> option is essentially an <code>or</code> and makes sure at least one is true. Give it a try and comment on my answer if it still doesn't work. Also double check I copied your query terms properly :)</p>&#xA;&#xA;<pre><code>{&#xA;    "filtered" : {&#xA;        "query" : {&#xA;            "match_phrase_prefix": {&#xA;                "display_name": "SearchQuery"&#xA;            }&#xA;        },&#xA;        "filter" : {&#xA;            "bool" : {&#xA;                "should" : [&#xA;                    {&#xA;                        "missing": { "field": "location" }&#xA;                    },&#xA;                    {&#xA;                        "geo_distance" : {&#xA;                            "distance" : "20mi",&#xA;                            "location" : {&#xA;                                "lat" : 33.47,&#xA;                                "lon" : -112.07&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                ]&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;
<p>For anyone with the same issue, I kind of just hacked around it. For any documents that were missing a "location", I added one with a lat/lon of 0/0. Then I altered my query to be:</p>&#xA;&#xA;<pre><code>"filter": {&#xA;    "or": [&#xA;        {&#xA;            "geo_distance": {&#xA;                "distance": "0.1mi",&#xA;                "location": {&#xA;                    "lat": 0,&#xA;                    "lon": 0&#xA;                 }&#xA;            }&#xA;        },&#xA;        {&#xA;            "geo_distance": {&#xA;                "distance": "30mi",&#xA;                "location": {&#xA;                    "lat": [lat variable],&#xA;                    "lon": [lon variable]&#xA;                }&#xA;            }&#xA;        }&#xA;    ]&#xA; }&#xA;</code></pre>&#xA;