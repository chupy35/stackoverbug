32618754
update mapping property for data going to elasticsearch index
<p>New to elasticsearch here and debugging an existing index. I was creating a dashboard based on a search and found that some fields that were being sent do not appear as an option to filter on. I checked further into this and saw that there are some fields that are not indexed. The person who created the index claims that there is no restriction on what fields are being indexed but I disagree having found the following:</p>&#xA;&#xA;<pre><code>     "customerid": {&#xA;              "type": "string",&#xA;              "norms": {&#xA;                 "enabled": false&#xA;              },&#xA;              "fields": {&#xA;                 "raw": {&#xA;                    "type": "string",&#xA;                    "index": "not_analyzed",&#xA;                    "ignore_above": 256&#xA;                 }&#xA;              }&#xA;           },&#xA;</code></pre>&#xA;&#xA;<p>It shows the value as not_analyzed. I would like to update this value so that the fields I need are indexed and available for visualizations in the dashboard. I know the index name but the data itself and mapping is under types. So not sure how to do this. When looking in elasticsearch plugin/head I do not see the index.</p>&#xA;&#xA;<pre><code>"customer_index": {&#xA;        "dynamic_templates": [&#xA;           {&#xA;              "string_fields": {&#xA;                 "mapping": {&#xA;                    "index": "analyzed",&#xA;                    "omit_norms": true,&#xA;                    "type": "multi_field",&#xA;                    "fields": {&#xA;</code></pre>&#xA;&#xA;<p>except this initial headers for all fields related. Any suggestions or help will be appreciated.</p>&#xA;&#xA;<p>EDIT:</p>&#xA;&#xA;<p>As pointed out correctly by Alain, my misunderstanding of not_analyzed. I am still confused a bit and hope that adding some additional information will help diagnose this problem. </p>&#xA;&#xA;<p>Firstly, this is a view of kibana that shows for the specific index that contains the data, the available fields:</p>&#xA;&#xA;<pre><code>Available Fields&#xA;   @timestamp&#xA;   _id&#xA;   _type&#xA;   etc.&#xA;</code></pre>&#xA;&#xA;<p>Customer ID is not one of them. Now there are different data sources coming to the same index for example :</p>&#xA;&#xA;<pre><code>job records&#xA;customer records&#xA;project records &#xA;</code></pre>&#xA;&#xA;<p>etc.</p>&#xA;&#xA;<p>This is defined by _type field. Now I want to access the customer record object and it has its own properties:</p>&#xA;&#xA;<pre><code>customer_index": {&#xA;        "dynamic_templates": [&#xA;           {&#xA;              "string_fields": {&#xA;                 "mapping": {&#xA;                    "index": "analyzed",&#xA;                    "omit_norms": true,&#xA;                    "type": "multi_field",&#xA;                    "fields": {&#xA;                       "{name}": {&#xA;                          "index": "analyzed",&#xA;                          "omit_norms": true,&#xA;                          "type": "string"&#xA;                       },&#xA;                       "raw": {&#xA;                          "ignore_above": 256,&#xA;                          "index": "not_analyzed",&#xA;                          "type": "string"&#xA;                       }&#xA;                    }&#xA;                 },&#xA;                 "match": "*",&#xA;                 "match_mapping_type": "string"&#xA;              }&#xA;           },&#xA;           {&#xA;              "message_field": {&#xA;                 "mapping": {&#xA;                    "index": "analyzed",&#xA;                    "omit_norms": true,&#xA;                    "type": "string"&#xA;                 },&#xA;                 "match": "message",&#xA;                 "match_mapping_type": "string"&#xA;              }&#xA;           }&#xA;        ],&#xA;        "_all": {&#xA;           "enabled": true,&#xA;           "omit_norms": true&#xA;        },&#xA;        "properties": {&#xA;           "@timestamp": {&#xA;              "type": "date",&#xA;              "format": "dateOptionalTime"&#xA;           },&#xA;           "@version": {&#xA;              "type": "string",&#xA;              "index": "not_analyzed"&#xA;           },&#xA;           "CCType": {&#xA;              "type": "string",&#xA;              "norms": {&#xA;                 "enabled": false&#xA;              },&#xA;              "fields": {&#xA;                 "raw": {&#xA;                    "type": "string",&#xA;                    "index": "not_analyzed",&#xA;                    "ignore_above": 256&#xA;                 }&#xA;              }&#xA;           },&#xA;           "Crawled": {&#xA;              "type": "string",&#xA;              "norms": {&#xA;                 "enabled": false&#xA;              },&#xA;              "fields": {&#xA;                 "raw": {&#xA;                    "type": "string",&#xA;                    "index": "not_analyzed",&#xA;                    "ignore_above": 256&#xA;                 }&#xA;              }&#xA;           },&#xA;           "customerid": {&#xA;              "type": "string",&#xA;              "norms": {&#xA;                 "enabled": false&#xA;              },&#xA;              "fields": {&#xA;                 "raw": {&#xA;                    "type": "string",&#xA;                    "index": "not_analyzed",&#xA;                    "ignore_above": 256&#xA;                 }&#xA;              }&#xA;           },&#xA;</code></pre>&#xA;&#xA;<p>Now I would like to search for these property fields. I found SENSE plugin which I am trying to use to learn the queries and was able to do this:</p>&#xA;&#xA;<pre><code>GET _search&#xA;{&#xA;"query": {&#xA;    "match": {&#xA;       "customerid": "11908906"&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>}</p>&#xA;&#xA;<p>This worked great in returning the messages and counts. Now when I try within Kibana in discover tab, I search for the type (customer_index) and filter the field I need and I see all the results. I just wondering how to translate this visually.</p>&#xA;
<p>"not_analyzed" does not mean "not indexed".  It means that elasticsearch is not trying to analyze the string, instead leaving it intact.  This is a very common thing in elasticsearch, depending on your content.</p>&#xA;&#xA;<p>For example:</p>&#xA;&#xA;<pre><code>/var/log/messages&#xA;</code></pre>&#xA;&#xA;<p>will, by default, be split into:</p>&#xA;&#xA;<pre><code>[ "var", "log", "messages" ]&#xA;</code></pre>&#xA;&#xA;<p>which is not very useful when you want to search on it as a full path.  By setting the field to not_analyzed, it will leave it alone.  You can still search using the field.</p>&#xA;&#xA;<p>Second, you say that the fields aren't available for filtering.  Assuming you're using Kibana, be aware that Kibana will cache the field mapping, meaning that new fields don't automatically show up.  Go to Settings->Indices, select your index, and click Reload Field List.</p>&#xA;