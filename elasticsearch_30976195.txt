30976195
ElasticSearch Fields Mapping to String by default when indexing
<p>Let me first explain my scenario. &#xA;I am fetching data from RDBMS and pushing it into ElasticSearch. &#xA;Fetched Results are in the form of List and i am preparing bulk index request like this: </p>&#xA;&#xA;<pre><code>BulkRequestBuilder bulkRequest = client.prepareBulk(); &#xA;for (Map&lt;String,Object&gt; singleDataRow : ResultSet) &#xA;{ &#xA;       IndexRequest indexRequest = new IndexRequest("testindex","testtype",singleDataRow.getObject("NAME")); &#xA;       bulkRequest.add(indexRequest); &#xA;} &#xA;&#xA;bulkRequest.execute().actionGet(); &#xA;</code></pre>&#xA;&#xA;<p>My Map = includes Map of string to string, string to big decimal, string to big integer etc. &#xA;eg. </p>&#xA;&#xA;<pre><code>{ BIRTHDATE : 2015-03-05 , NAME : deepankar , AGE : 22 , AMOUNT : 15.5 } &#xA;</code></pre>&#xA;&#xA;<p>But when i see the mapping of my testtype in testindex, all mapping of fields are of "type" : "string" </p>&#xA;&#xA;<p>Why the fields does not maps to "type": "string" , or "type" : "long" , and even "type" : "date" as elasticsearch does it by default?</p>&#xA;
<p>Elasticsearch will attempt to 'guess' the field type by the first insert, unless you create and map fields beforehand.</p>&#xA;&#xA;<p>There are two possible reasons why your fields are being indexed as <code>string</code> instead of <code>long</code> or any other type:</p>&#xA;&#xA;<ol>&#xA;<li><p>You're not really sending these fields as <code>int</code>, so you're sending <code>'10'</code> instead of <code>10</code></p></li>&#xA;<li><p>You've already inserted at least 1 document that had a <code>string</code> value for that field, so if you've inserted your first document with <code>AGE: '22'</code> Elasticsearch will set that field to <code>type: string</code> and any future inserts will have a <code>string</code> value.</p></li>&#xA;</ol>&#xA;&#xA;<p>If you want to make sure, you can delete the current index, re-create it and manually set up mapping before inserting the first document, like so:</p>&#xA;&#xA;<pre><code>curl -XPUT 'http://localhost:9200/testindex/_mapping/testmapping' -d '&#xA;{&#xA;    "testmapping" : {&#xA;        "properties" : {&#xA;            "birthdate" : { "type" : "date", "format": "dateOptionalTime" },&#xA;            "name" : { "type" : "string" },&#xA;            "age" : { "type" : "long" },&#xA;            "amount" : { "type" : "double" }&#xA;        }&#xA;    }&#xA;}&#xA;'&#xA;</code></pre>&#xA;