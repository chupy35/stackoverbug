33428307
Broken aggregation in elasticsearch
<p>I'm getting erroneous results on performing terms aggregation in the field <code>names</code> in the index. &#xA;The following is the mappings I have used to the <code>names</code> field:</p>&#xA;&#xA;<pre><code>{&#xA;  "dbnames": {&#xA;    "properties": {&#xA;      "names": {&#xA;        "type": "string",&#xA;        "index": "not_analyzed"&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is the results I'm getting for a simple <code>terms</code> aggregation on the field:</p>&#xA;&#xA;<pre><code>"aggregations": {&#xA;  "names": {&#xA;    "doc_count_error_upper_bound": 0,&#xA;    "sum_other_doc_count": 0,&#xA;    "buckets": [&#xA;      {&#xA;        "key": "John Martin",&#xA;        "doc_count": 1&#xA;      },&#xA;      {&#xA;        "key": "John martin",&#xA;        "doc_count": 1&#xA;      },&#xA;      {&#xA;        "key": " Victor Moses",&#xA;        "doc_count": 1&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>As you can see, I have the same names with different casings being shown as different buckets in the aggregation. What I want here is irrespective of the case, the names should be clubbed together. </p>&#xA;
<p>The easiest way would be to make sure you properly case the value of your <code>names</code> field at indexing time.</p>&#xA;&#xA;<p>If that is not an option, the other way to go about it is to define an analyzer that will do it for you and set that analyzer as <code>index_analyzer</code> for the <code>names</code> field. Such a custom analyzer would need to use the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/1.5/analysis-keyword-tokenizer.html" rel="nofollow"><code>keyword</code> tokenizer</a> (i.e. take the whole value of the field as a single token)  and the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/1.5/analysis-lowercase-tokenfilter.html" rel="nofollow"><code>lowercase</code> token filter</a> (i.e. lowercase the value)</p>&#xA;&#xA;<pre><code>curl -XPUT localhost:9200/your_index -d '{&#xA;  "settings": {&#xA;    "index": {&#xA;      "analysis": {&#xA;        "analyzer": {&#xA;          "casing": {               &lt;--- custom casing analyzer&#xA;            "filter": [&#xA;              "lowercase"&#xA;            ],&#xA;            "tokenizer": "keyword"&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  },&#xA;  "mappings": {&#xA;    "your_type": {&#xA;      "properties": {&#xA;        "names": {&#xA;          "type": "string",&#xA;          "index_analyzer": "casing"      &lt;--- use your custom analyzer&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>Then we can index some data:</p>&#xA;&#xA;<pre><code>curl -XPOST localhost:9200/your_index/your_type/_bulk -d '&#xA;{"index":{}}&#xA;{"names": "John Martin"}&#xA;{"index":{}}&#xA;{"names": "John martin"}&#xA;{"index":{}}&#xA;{"names": "Victor Moses"}&#xA;'&#xA;</code></pre>&#xA;&#xA;<p>And finally the <code>terms</code> aggregation on the <code>names</code> field would return your the expected results:</p>&#xA;&#xA;<pre><code>curl -XPOST localhost:9200/your_index/your_type/_search-d '{&#xA;  "size": 0,&#xA;  "aggs": {&#xA;    "dbnames": {&#xA;      "terms": {&#xA;        "field": "names"&#xA;      }&#xA;    }&#xA;  }&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>Results:</p>&#xA;&#xA;<pre><code>{&#xA;  "dbnames": {&#xA;    "doc_count_error_upper_bound": 0,&#xA;    "sum_other_doc_count": 0,&#xA;    "buckets": [&#xA;      {&#xA;        "key": "john martin",&#xA;        "doc_count": 2&#xA;      },&#xA;      {&#xA;        "key": "victor moses",&#xA;        "doc_count": 1&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;
<p>There are 2 options here</p>&#xA;&#xA;<ol>&#xA;<li>Use not_analyzed option - This one has a disadvantage that same&#xA;string with different cases wont be seen as on</li>&#xA;<li>keyword tokenizer + lowercase filter - This one does not have the&#xA;above issue</li>&#xA;</ol>&#xA;&#xA;<p>I have neatly outlined these two approaches and how to use them here - <a href="https://qbox.io/blog/elasticsearch-aggregation-custom-analyzer" rel="nofollow">https://qbox.io/blog/elasticsearch-aggregation-custom-analyzer</a></p>&#xA;