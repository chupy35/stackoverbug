28724874
Querying objects in dynamic properties or arrays with elasticsearch
<p>For some reason I simply haven't been able to wrap my head around being able to do this in elastic search (I'm having a hard time making sense of some of the documentation; it feels like there are 15 ways to do this and I can't figure out any of them) but say I have the following object:</p>&#xA;&#xA;<pre><code>{&#xA;    "name": "Me",&#xA;    "favorites": [&#xA;        { title: "Stackoverflow", url: "www.stackoverflow.com" },&#xA;        { title: "Google", url: "www.google.com" }&#xA;    ],&#xA;    "stuff": {&#xA;        "fdjalja": { "property": "yes" },&#xA;        "nvbdfgd": { "property": "no" }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<ol>&#xA;<li><p>How do I query inside of the array for, say, title == "Google"? I know I can hit nested objects really easy but simply adding a dot but when it's array I can't figure it out.</p></li>&#xA;<li><p>How do I query inside of the stuff object where the keys are dynamic? So I can search for property == "yes"?</p></li>&#xA;</ol>&#xA;
<p>I got a <a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl-nested-query.html#query-dsl-nested-query" rel="nofollow"><code>nested</code> query</a> to work like this:</p>&#xA;&#xA;<p>Notice that I put <code>"type":"nested"</code> in the mapping:</p>&#xA;&#xA;<pre><code>DELETE /test_index&#xA;&#xA;PUT /test_index&#xA;{&#xA;   "settings": {&#xA;      "number_of_shards": 1&#xA;   },&#xA;   "mappings": {&#xA;      "doc": {&#xA;         "properties": {&#xA;            "favorites": {&#xA;               "type": "nested", &#xA;               "properties": {&#xA;                  "title": {&#xA;                     "type": "string"&#xA;                  },&#xA;                  "url": {&#xA;                     "type": "string"&#xA;                  }&#xA;               }&#xA;            },&#xA;            "name": {&#xA;               "type": "string"&#xA;            },&#xA;            "stuff": {&#xA;               "properties": {&#xA;                  "fdjalja": {&#xA;                     "properties": {&#xA;                        "property": {&#xA;                           "type": "string"&#xA;                        }&#xA;                     }&#xA;                  },&#xA;                  "nvbdfgd": {&#xA;                     "properties": {&#xA;                        "property": {&#xA;                           "type": "string"&#xA;                        }&#xA;                     }&#xA;                  }&#xA;               }&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then added the doc:</p>&#xA;&#xA;<pre><code>PUT /test_index/doc/1&#xA;{&#xA;    "name": "Me",&#xA;    "favorites": [&#xA;        { "title": "Stackoverflow", "url": "www.stackoverflow.com" },&#xA;        { "title": "Google", "url": "www.google.com" }&#xA;    ],&#xA;    "stuff": {&#xA;        "fdjalja": { "property": "yes" },&#xA;        "nvbdfgd": { "property": "no" }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And then a nested match on <code>"favorites.title"</code> returns the doc:</p>&#xA;&#xA;<pre><code>POST /test_index/_search&#xA;{&#xA;   "query": {&#xA;      "nested": {&#xA;         "path": "favorites",&#xA;         "query": {&#xA;            "match": {&#xA;               "favorites.title": "google"&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;...&#xA;{&#xA;   "took": 46,&#xA;   "timed_out": false,&#xA;   "_shards": {&#xA;      "total": 1,&#xA;      "successful": 1,&#xA;      "failed": 0&#xA;   },&#xA;   "hits": {&#xA;      "total": 1,&#xA;      "max_score": 1.4054651,&#xA;      "hits": [&#xA;         {&#xA;            "_index": "test_index",&#xA;            "_type": "doc",&#xA;            "_id": "1",&#xA;            "_score": 1.4054651,&#xA;            "_source": {&#xA;               "name": "Me",&#xA;               "favorites": [&#xA;                  {&#xA;                     "title": "Stackoverflow",&#xA;                     "url": "www.stackoverflow.com"&#xA;                  },&#xA;                  {&#xA;                     "title": "Google",&#xA;                     "url": "www.google.com"&#xA;                  }&#xA;               ],&#xA;               "stuff": {&#xA;                  "fdjalja": {&#xA;                     "property": "yes"&#xA;                  },&#xA;                  "nvbdfgd": {&#xA;                     "property": "no"&#xA;                  }&#xA;               }&#xA;            }&#xA;         }&#xA;      ]&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You can query for the dynamic, non-array properties by using the path:</p>&#xA;&#xA;<pre><code>POST /test_index/_search&#xA;{&#xA;   "query": {&#xA;      "match": {&#xA;         "stuff.fdjalja.property": "yes"&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;