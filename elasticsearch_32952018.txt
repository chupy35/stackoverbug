32952018
How to filter/sort properly with ElasticSearch?
<p>I've just created some very simple database (index) of "movies" using this tutorial : <a href="http://joelabrahamsson.com/elasticsearch-101/" rel="nofollow">http://joelabrahamsson.com/elasticsearch-101/</a></p>&#xA;&#xA;<p>Now, I try to copy/paste the instruction to create a multifield mapping for the "director" field :</p>&#xA;&#xA;<pre><code>    curl -XPUT "http://localhost:9200/movies/movie/_mapping" -d'&#xA;{&#xA;   "movie": {&#xA;      "properties": {&#xA;         "director": {&#xA;            "type": "multi_field",&#xA;            "fields": {&#xA;                "director": {"type": "string"},&#xA;                "original": {"type" : "string", "index" : "not_analyzed"}&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>But after this, if I post this query, I get no result :</p>&#xA;&#xA;<pre><code>curl -XPOST "http://localhost:9200/_search" -d'&#xA;{&#xA;    "query": {&#xA;        "constant_score": {&#xA;            "filter": {&#xA;                "term": { "director.original": "Francis Ford Coppola" }&#xA;            }&#xA;        }&#xA;    }&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>result :</p>&#xA;&#xA;<pre><code>{&#xA;  "took": 1,&#xA;  "timed_out": false,&#xA;  "_shards": {&#xA;    "total": 5,&#xA;    "successful": 5,&#xA;    "failed": 0&#xA;  },&#xA;  "hits": {&#xA;    "total": 0,&#xA;    "max_score": null,&#xA;    "hits": []&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And if I try to sort using this :</p>&#xA;&#xA;<pre><code>http://localhost:9200/movies/movie/_search?sort=title.original:asc&#xA;</code></pre>&#xA;&#xA;<p>I get the whole table (type) in random order (same order as with no "sort" instruction) :</p>&#xA;&#xA;<pre><code>{"took":2,"timed_out":false,"_shards":{"total":5,"successful":5,"failed":0},"hits":{"total":6,"max_score":null,"hits":[{"_index":"movies","_type":"movie","_id":"4","_score":null,"_source":&#xA;{&#xA;    "title": "Apocalypse Now",&#xA;    "director": "Francis Ford Coppola",&#xA;    "year": 1979,&#xA;    "genres": ["Drama", "War"]&#xA;},"sort":[null]},{"_index":"movies","_type":"movie","_id":"5","_score":null,"_source":&#xA;{&#xA;    "title": "Kill Bill: Vol. 1",&#xA;    "director": "Quentin Tarantino",&#xA;    "year": 2003,&#xA;    "genres": ["Action", "Crime", "Thriller"]&#xA;},"sort":[null]},{"_index":"movies","_type":"movie","_id":"1","_score":null,"_source":&#xA;{&#xA;    "title": "The Godfather",&#xA;    "director": "Francis Ford Coppola",&#xA;    "year": 1972,&#xA;    "genres": ["Crime", "Drama"]&#xA;},"sort":[null]},{"_index":"movies","_type":"movie","_id":"6","_score":null,"_source":&#xA;{&#xA;    "title": "The Assassination of Jesse James by the Coward Robert Ford",&#xA;    "director": "Andrew Dominik",&#xA;    "year": 2007,&#xA;    "genres": ["Biography", "Crime", "Drama"]&#xA;},"sort":[null]},{"_index":"movies","_type":"movie","_id":"2","_score":null,"_source":&#xA;{&#xA;    "title": "Lawrence of Arabia",&#xA;    "director": "David Lean",&#xA;    "year": 1962,&#xA;    "genres": ["Adventure", "Biography", "Drama"]&#xA;},"sort":[null]},{"_index":"movies","_type":"movie","_id":"3","_score":null,"_source":&#xA;{&#xA;    "title": "To Kill a Mockingbird",&#xA;    "director": "Robert Mulligan",&#xA;    "year": 1962,&#xA;    "genres": ["Crime", "Drama", "Mystery"]&#xA;},"sort":[null]}]}}&#xA;</code></pre>&#xA;&#xA;<p>So would you tell me what am I missing in this basic use of ElasticSearch ? why no filtering or sorting on my custom "director" field ?</p>&#xA;
<p>You're not creating the multi-field properly. You should do it like this:</p>&#xA;&#xA;<pre><code>curl -XPOST "http://localhost:9200/movies/movie/_mapping" -d '{&#xA;   "movie": {&#xA;      "properties": {&#xA;         "director": {&#xA;            "type": "string",&#xA;            "fields": {&#xA;                "original": {"type" : "string", "index" : "not_analyzed"}&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>Also note that in that tutorial they are using a deprecated way of declaring multi-fields, i.e. with <code>"type": "multi_field"</code>. Now we do it the way I've shown above.</p>&#xA;&#xA;<p>EDIT form comment below : After changing the mapping to multi-field, you need to re-run the 6 indexing queries to re-index the six movies so the director.original field gets populated.</p>&#xA;