28810389
How to search with keyword analyzer?
<p>I have keyword analyzer as default analyzer, like so:</p>&#xA;&#xA;<pre><code>{&#xA;  "settings": {&#xA;    "index": {&#xA;      "analysis": {&#xA;        "analyzer": {&#xA;          "default": {&#xA;            "type": "keyword"&#xA;}}}}}}&#xA;</code></pre>&#xA;&#xA;<p>```</p>&#xA;&#xA;<p>But now I can't search anything. e.g:</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "query_string": {&#xA;      "query": "cast"&#xA;}}}&#xA;</code></pre>&#xA;&#xA;<p>Gives me 0 results all though "cast" is a common value i the indexed documents. (<a href="http://gist.github.com/baelter/b0720a52ee5a27e27d3a" rel="nofollow">http://gist.github.com/baelter/b0720a52ee5a27e27d3a</a>)</p>&#xA;&#xA;<p>Search for "*" works fine btw.</p>&#xA;&#xA;<p>I only have explicit defaults in my mapping:</p>&#xA;&#xA;<pre><code>{&#xA;  "oceanography_point": {&#xA;    "_all" : {&#xA;      "enabled" : true&#xA;    },&#xA;    "properties" : {}&#xA; }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The index behaves as if no fields are included in _all, because field:value queries works fine.</p>&#xA;&#xA;<p>Am I misusing the keyword analyzer?</p>&#xA;
<p>Using keyword analyzer , you can only do an exact string match.&#xA;Lets assume that you have used keyword analyzer and no filters.&#xA;In that case for as string indexed as "Cast away in forest" , neither search for "cast" or "away" will work. You need to do an exact "Cast away in forest" string to match it. ( Assuming no lowercase filter used , you need to give the right case too)</p>&#xA;&#xA;<p>A better approach would be to use <a href="https://www.elasticsearch.org/guide/en/elasticsearch/reference/0.90/mapping-multi-field-type.html" rel="nofollow">multi fields</a> to declare one copy as keyword analyzed and other one normal.&#xA;You can search on one of this field and aggregate on the other.</p>&#xA;
<p>Okey, some 15h of trial and error I can conclude that this works for search:</p>&#xA;&#xA;<pre><code>{&#xA;  "settings": {&#xA;    "index": {&#xA;      "analysis": {&#xA;        "tokenizer": {&#xA;          "default": {&#xA;            "type": "keyword"&#xA;}}}}}}&#xA;</code></pre>&#xA;&#xA;<p>How ever this breaks faceting so I ended up using a dynamic template instead:</p>&#xA;&#xA;<pre><code>"dynamic_templates" : [&#xA;  {&#xA;    "strings_not_analyzed" : {&#xA;      "match" : "*",&#xA;      "match_mapping_type" : "string",&#xA;      "mapping" : {&#xA;        "type" : "string",&#xA;        "index" : "not_analyzed"&#xA;      }&#xA;    }&#xA;  }&#xA;],&#xA;</code></pre>&#xA;