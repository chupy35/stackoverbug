
PDFs: Extracting text associated with font (linux)
Ask Question
up vote
1
down vote
favorite

The general problem that I'm trying to solve is to determine how much text in a large set of PDFs is associated with different fonts. I know I can extract text from a PDF using pdftotext and fonts information with pdffonts, but I can't figure out how to link those together. I have 100,000+ PDFs to process, so will need something I can program against (and I don't mind a commercial solution).
pdf fonts text-extraction
shareimprove this question
asked Aug 23 at 21:47
Eric Lyons
61

    I'm not trying to be patronizing, but have you tried searching Google yet? – Woody1193 Aug 23 at 21:53

add a comment
2 Answers
active
oldest
votes
up vote
0
down vote

PDFTron PDFNet SDK can extract all the graphic operations, including text objects, including link to the font being used.

Starting with the ElementReader sample, you can get the Font for every text element. https://www.pdftron.com/documentation/samples?platforms=windows#elementreader https://www.pdftron.com/api/PDFNet/?topic=html/T_pdftron_PDF_Font.htm
shareimprove this answer
answered Aug 23 at 23:47
Ryan
1,37259

    Thanks for this information. I ended up using the pdf2text tool included with PDFTron with XML output and styles (pdf2text -f xml --xml_output_styles). This contained the font information per line of text, which I could then quantify. – Eric Lyons Sep 10 at 21:20

add a comment
up vote
0
down vote

The Adobe PDF Library - a product my company sells - can do that.

This is part of the sample code:

// This callback function is called fpr each PDWord object.
ACCB1 ASBool ACCB2 WordEnumProc(PDWordFinder wfObj, PDWord pdWord, ASInt32 pgNum, void* clientData)
{
    char str[128];
    char fontname[100];

    // get word text
    PDWordGetString(pdWord, str, sizeof(str));

    // get the font name
    PDStyle style = PDWordGetNthCharStyle(wfObj, pdWord, 0);
    PDFont wordFont = PDStyleGetFont(style);
    PDFontGetName(wordFont, fontname, sizeof(fontname));

    printf("%s  [%s]\n", str, fontname);

    return true;
}

This is the output example:

...
Chapter  [Arial,Bold]
2:  [Arial,Bold]
Overview  [Arial,Bold]
27  [Arial]
...
This  [TimesNewRoman]
book  [TimesNewRoman]
describes  [TimesNewRoman]
the  [TimesNewRoman]
Portable  [TimesNewRoman]
Document  [TimesNewRoman]
Format  [TimesNewRoman]
...

shareimprove this answer
edited 2 mins ago
answered Aug 30 at 16:43
Yuri Gendelman
763
add a comment
