31143136
Indexing a comma-separated value field in Elastic Search
<p>I'm using Nutch to crawl a site and index it into Elastic search. My site has meta-tags, some of them containing comma-separated list of IDs (that I intend to use for search). For example:</p>&#xA;&#xA;<p>contentTypeIds="2,5,15". (note: no square brackets).</p>&#xA;&#xA;<p>When ES indexes this, I can't search for contentTypeIds:5 and find documents whose contentTypeIds <em>contain</em> 5; this query returns only the documents whose contentTypeIds is exactly "5". However, I do want to find documents whose contentTypeIds contain 5. </p>&#xA;&#xA;<p>In Solr, this is solved by setting the contentTypeIds field to multiValued="true" in the schema.xml. I can't find how to do something similar in ES.</p>&#xA;&#xA;<p>I'm new to ES, so I probably missed something.  Thanks for your help!</p>&#xA;
<p>Create <a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/custom-analyzers.html" rel="noreferrer">custom analyzer</a> which will split indexed text into tokens by commas.</p>&#xA;&#xA;<p>Then you can try to search. In case you don't care about relevance you can use filter to search through your documents. My example shows how you can attempt search with <a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/_finding_exact_values.html#_term_filter_with_text" rel="noreferrer">term filter</a>.</p>&#xA;&#xA;<p>Below you can find how to do this with sense plugin.</p>&#xA;&#xA;<pre><code>DELETE testindex&#xA;&#xA;PUT testindex&#xA;{&#xA;    "index" : {&#xA;        "analysis" : {&#xA;            "tokenizer" : {&#xA;                "comma" : {&#xA;                    "type" : "pattern",&#xA;                    "pattern" : ","&#xA;                }&#xA;            },&#xA;            "analyzer" : {&#xA;                "comma" : {&#xA;                    "type" : "custom",&#xA;                    "tokenizer" : "comma"&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;PUT /testindex/_mapping/yourtype&#xA;{&#xA;        "properties" : {&#xA;            "contentType" : {&#xA;                "type" : "string",&#xA;                "analyzer" : "comma"&#xA;            }&#xA;        }&#xA;}&#xA;&#xA;PUT /testindex/yourtype/1&#xA;{&#xA;    "contentType" : "1,2,3"&#xA;}&#xA;&#xA;PUT /testindex/yourtype/2&#xA;{&#xA;    "contentType" : "3,4"&#xA;}&#xA;&#xA;PUT /testindex/yourtype/3&#xA;{&#xA;    "contentType" : "1,6"&#xA;}&#xA;&#xA;GET /testindex/_search&#xA;{&#xA;    "query": {"match_all": {}}&#xA;}&#xA;&#xA;GET /testindex/_search&#xA;{&#xA;    "filter": {&#xA;        "term": {&#xA;           "contentType": "6"&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Hope it helps.</p>&#xA;