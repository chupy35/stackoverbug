31046535
Elasticsearch mapping document for epoch in seconds
<p>As far as I understand, es only supports epoch in ms. My data source is couchbase and the json documents in there have an insertEpoch that is stored in seconds. I have been struggling to make my mapping document do the seconds to ms conversion for me.</p>&#xA;&#xA;<p>Here is my mapping doc:</p>&#xA;&#xA;<pre><code>{&#xA;    "template" : "cb*",&#xA;    "order" : 10,&#xA;    "mappings" : {&#xA;        "couchbaseCheckpoint" : {&#xA;            "_source" : {&#xA;                "includes" : ["doc.*"]&#xA;            },&#xA;            "dynamic_templates": [&#xA;                {&#xA;                    "store_no_index": {&#xA;                        "match": "*",&#xA;                        "mapping": {&#xA;                            "store" : "no",&#xA;                            "index" : "no",&#xA;                            "include_in_all" : false&#xA;                        }&#xA;                    }&#xA;                }&#xA;            ]&#xA;        },&#xA;        "couchbaseDoc" : {&#xA;            "_source" : {&#xA;                "includes" : ["meta.*","doc.*"]&#xA;            },&#xA;            "properties" : {&#xA;                "meta" : {&#xA;                    "type" : "object",&#xA;                    "include_in_all" : false&#xA;                },&#xA;                "doc" : {&#xA;                    "type" : "nested",&#xA;                    "include_in_all" : false,&#xA;                    "transform": {&#xA;                        "script": "ctx._source['insertEpoch'] = ctx._source['insertEpoch'] * 1000",&#xA;                        "params": {},&#xA;                        "lang": "groovy"&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The transform isn't happening.</p>&#xA;&#xA;<p>New mapping document:</p>&#xA;&#xA;<pre><code>{&#xA;    "template" : "wheepl",&#xA;    "order" : 10,&#xA;    "mappings" : {&#xA;        "couchbaseCheckpoint" : {&#xA;            "_source" : {&#xA;                "includes" : ["doc.*"]&#xA;            },&#xA;            "dynamic_templates": [&#xA;                {&#xA;                    "store_no_index": {&#xA;                        "match": "*",&#xA;                        "mapping": {&#xA;                            "store" : "no",&#xA;                            "index" : "no",&#xA;                            "include_in_all" : false&#xA;                        }&#xA;                    }&#xA;                }&#xA;            ]&#xA;        },&#xA;        "couchbaseDoc" : {&#xA;            "_timestamp" : {&#xA;                "enabled" : true,&#xA;                "store" : true&#xA;            },&#xA;            "properties" : {&#xA;                "meta" : {&#xA;                    "type" : "object",&#xA;                    "include_in_all" : false&#xA;                },&#xA;                "doc" : {&#xA;                    "type" : "object",&#xA;                    "include_in_all" : false,&#xA;                    "updateEpoch" : {&#xA;                        "type" : "date",&#xA;                        "format" : "date_time",&#xA;                        "numeric_resolution" : "seconds"&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I don't even see the _timestamp field that I should be seeing!</p>&#xA;&#xA;<p>Here's a Kibana screenie:</p>&#xA;&#xA;<p><img src="https://i.stack.imgur.com/W4B7m.png" alt="kibana screenshot"></p>&#xA;&#xA;<p>Thanks</p>&#xA;
<p>This works in 1.6, as per <a href="https://github.com/elastic/elasticsearch/pull/10420" rel="nofollow">https://github.com/elastic/elasticsearch/pull/10420</a>.&#xA;Even if, internally, the date itself will be kept in milliseconds, you can index it as seconds, retrieve it as seconds, meaning just like you indexed it.</p>&#xA;&#xA;<p>I've tried out a simple test, to see this in action:</p>&#xA;&#xA;<pre><code>PUT /test_dates&#xA;{&#xA;  "mappings": {&#xA;    "test": {&#xA;      "properties": {&#xA;        "time_stamp": {&#xA;          "type": "date",&#xA;          "format": "date_time",&#xA;          "numeric_resolution": "seconds"&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Test data:</p>&#xA;&#xA;<pre><code>POST /test_dates/test/1&#xA;{&#xA;  "time_stamp": "9231200"&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Retrieving it:</p>&#xA;&#xA;<pre><code>   "hits": {&#xA;      "total": 1,&#xA;      "max_score": 1,&#xA;      "hits": [&#xA;         {&#xA;            "_index": "test_dates",&#xA;            "_type": "test",&#xA;            "_id": "1",&#xA;            "_score": 1,&#xA;            "_source": {&#xA;               "time_stamp": "9231200"&#xA;            }&#xA;         }&#xA;      ]&#xA;   }&#xA;</code></pre>&#xA;&#xA;<p>To prove it works, running this aggregation:</p>&#xA;&#xA;<pre><code>GET /test_dates/test/_search?search_type=count&#xA;{&#xA;  "aggs": {&#xA;    "NAME": {&#xA;      "date_histogram": {&#xA;        "field": "time_stamp",&#xA;        "interval": "second",&#xA;        "format": "yyyy-MM-dd"&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>returns</p>&#xA;&#xA;<pre><code>   "aggregations": {&#xA;      "NAME": {&#xA;         "buckets": [&#xA;            {&#xA;               "key_as_string": "1970-04-17",&#xA;               "key": 9231200000,&#xA;               "doc_count": 1&#xA;            }&#xA;         ]&#xA;      }&#xA;   }&#xA;</code></pre>&#xA;&#xA;<p>Also, your template is a bit wrong. It should be:</p>&#xA;&#xA;<pre><code>"couchbaseDocument": {&#xA;    "_timestamp": {&#xA;        "enabled": true,&#xA;        "store": true&#xA;    },&#xA;    "properties": {&#xA;        "meta": {&#xA;            "type": "object",&#xA;            "include_in_all": false&#xA;        },&#xA;        "doc": {&#xA;            "type": "object",&#xA;            "include_in_all": false,&#xA;            "properties": {&#xA;                "updateEpoch": {&#xA;                    "type": "date",&#xA;                    "format": "date_time",&#xA;                    "numeric_resolution": "seconds"&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;