34201041
Elasticsearch insensitive search by term
<p>I've got next query for search</p>&#xA;&#xA;<pre><code>    {  &#xA;       "query":{  &#xA;          "bool":{  &#xA;             "must":[  &#xA;                {  &#xA;                   "term":{  &#xA;                      "cardrecord.fields.name.raw":"HERE_IS_SOME_NAME"&#xA;                   }&#xA;                }&#xA;             ],&#xA;             "must_not":[  &#xA;&#xA;             ],&#xA;             "should":[  &#xA;&#xA;             ]&#xA;          }&#xA;       },&#xA;       "from":0,&#xA;       "size":50,&#xA;       "sort":[  &#xA;&#xA;       ],&#xA;       "facets":{  &#xA;&#xA;       }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>How can I modify the query for case insensetive search by term? I can add some more description if needed.</p>&#xA;
<p>use filter instead of query, this will reduce amount of processing a lot:</p>&#xA;&#xA;<pre><code>{  &#xA;   "filter":{  &#xA;      "bool":{  &#xA;         "must":[  &#xA;            {  &#xA;               "term":{  &#xA;                  "cardrecord.fields.name.raw":"HERE_IS_SOME_NAME"&#xA;               }&#xA;            }&#xA;         ],&#xA;         "must_not":[  &#xA;&#xA;         ],&#xA;         "should":[  &#xA;&#xA;         ]&#xA;      }&#xA;   },&#xA;   "from":0,&#xA;   "size":50,&#xA;   "sort":[  &#xA;&#xA;   ],&#xA;   "facets":{  &#xA;&#xA;   }&#xA;}&#xA;</code></pre>&#xA;
<p>Try using a match query</p>&#xA;&#xA;<pre><code>{  &#xA;       "query":{  &#xA;          "bool":{  &#xA;             "must":[  &#xA;                {  &#xA;                   "match":{  &#xA;                      "cardrecord.fields.name.raw":"HERE_IS_SOME_NAME"&#xA;                   }&#xA;                }&#xA;             ],&#xA;             "must_not":[  &#xA;&#xA;             ],&#xA;             "should":[  &#xA;&#xA;             ]&#xA;          }&#xA;       },&#xA;       "from":0,&#xA;       "size":50,&#xA;       "sort":[  &#xA;&#xA;       ],&#xA;       "facets":{  &#xA;&#xA;       }&#xA;    }&#xA;</code></pre>&#xA;
<p>You can use a <code>match</code> query, but you need to match the <code>cardrecord.fields.name</code> field, because the <code>raw</code> subfield is probably <code>not_analyzed</code> and thus won't work for case-insensitive matching.</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "bool": {&#xA;      "must": [&#xA;        {&#xA;          "match": {&#xA;            "cardrecord.fields.name": "HERE_IS_SOME_NAME"&#xA;          }&#xA;        }&#xA;      ],&#xA;      "must_not": [],&#xA;      "should": []&#xA;    }&#xA;  },&#xA;  "from": 0,&#xA;  "size": 50,&#xA;  "sort": [],&#xA;  "facets": {}&#xA;}&#xA;</code></pre>&#xA;
<p>all the fields are analyzed using <code>Standard Analyzer</code> by default. If <code>"index":"not_analyzed"</code> is specified in <code>mapping</code> then the field will not be analyzed</p>&#xA;&#xA;<p><code>Standard Analyzer</code> converts the input string to lowercase and splits with whitespace and special characters. so in your case, <code>HERE_IS_SOME_NAME</code> will be split into tokens <code>some</code>, <code>name</code>. But the tokens<code>here</code> and <code>is</code> will not be created as they are english adverbs.</p>&#xA;&#xA;<p>Same thing happens when you search for <code>"cardrecord.fields.name.raw"</code> field. It splits into tokens and searches for all documents with that tokens in specific field (using <code>Standard Analyzer</code>). P.S: Separate or different <code>analyzer</code> can be configured for searching also.</p>&#xA;&#xA;<p>so match query searches for all documents with <code>some</code> and <code>name</code> tokens. Hence you would have got additional documents.</p>&#xA;&#xA;<p><code>term query</code> specifically looks for exact case and full word match. But it will not match any document since tokens are already <code>split</code> and <code>lowercase</code></p>&#xA;&#xA;<p>Follow these steps for your requirement:</p>&#xA;&#xA;<pre><code>{&#xA;  "mappings": {&#xA;    "my_type": {&#xA;      "properties": {&#xA;        "cardrecord.fields.name.raw": {&#xA;          "type":  "string",&#xA;          "index": "not_analyzed" &#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Update this <code>mapping</code> for your <code>index</code> named <code>my_type</code> as per code given above. You need to create new index with new mapping though. Since update might not reflect.&#xA;Then try running your search query in your question.</p>&#xA;&#xA;<p>Adding detailed sequence of query:</p>&#xA;&#xA;<p>mapping:</p>&#xA;&#xA;<pre><code>  {&#xA;      "mappings": {&#xA;        "my_type": {&#xA;          "properties": {&#xA;            "cardrecord.fields.name.raw": {&#xA;              "type": "string",&#xA;              "index": "not_analyzed",&#xA;              "store": "true"&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>Indexing document:</p>&#xA;&#xA;<pre><code>{&#xA;  "cardrecord.fields.name.raw": "HERE_IS_SOME_NAME"&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>search query:</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "bool": {&#xA;      "must": [&#xA;        {&#xA;          "term": {&#xA;            "cardrecord.fields.name.raw": "HERE_IS_SOME_NAME"&#xA;          }&#xA;        }&#xA;      ],&#xA;      "must_not": [],&#xA;      "should": []&#xA;    }&#xA;  },&#xA;  "from": 0,&#xA;  "size": 50,&#xA;  "sort": [],&#xA;  "facets": {}&#xA;}&#xA;</code></pre>&#xA;