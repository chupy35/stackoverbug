32725263
When rewriting multiterm query, add constant_score to every term, not to the whole query
<p>I am looking for cities from geonames db. A typical search string would be "San Francisco CA". I have documents that have a city and a state field. I do a <code>match</code> query, matching search string to city and state, then combine these matches using <code>bool</code>:</p>&#xA;&#xA;<pre><code>"query" : {&#xA;    "bool" : {&#xA;        "must" : {&#xA;            "match" : {&#xA;                "country" : {&#xA;                    "query" : "San Francisco CA"&#xA;                }&#xA;            }&#xA;        },&#xA;        "should" : {&#xA;            "match" : {&#xA;                "city" : {&#xA;                    "query" : "San Francisco CA"&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I have these two documents in my db:</p>&#xA;&#xA;<pre><code>{"city" : "San Francisco", "state" : "CA"}&#xA;{"city" : "San Marino", "state" : "San Marino"}&#xA;</code></pre>&#xA;&#xA;<p>Problem is that matching "san" to San Marino's state scores much higher than matching CA to San Francisco's state, because there are many cities with state "CA" and very little cities with state "San Marino".</p>&#xA;&#xA;<p>I try to disable IDF using <code>constant_score</code>, but that leads to another problem: matching "San Francisco CA" to "San Francisco" where two terms match gets the same score as matching "San Francisco CA" to "San Marino" where only one term matches. When a multiterm match query is being rewritten into separate terms, is it possible to <code>constant_score</code> each one of the rewritten queries, so that I get score of 2 for matching "San Francisco" and a score of 1 for matching just "San"?</p>&#xA;
<p>With kind help from <a href="https://discuss.elastic.co/t/when-rewriting-multiterm-query-add-constant-score-to-every-term-not-to-the-whole-query-solved/29806" rel="nofollow">ElasticSearch discussion forum</a> I have a solution.</p>&#xA;&#xA;<p>The easiest way to make IDF constant is to create a custom class for similarity calculation. Here is my <a href="https://github.com/beowulfenator/elasticsearch-custom-similarity-provider" rel="nofollow">updated example for ElasticSearch 1.7.0</a>.</p>&#xA;&#xA;<p>The class forces IDF to always equal 1, which solves my problem.</p>&#xA;