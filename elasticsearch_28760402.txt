28760402
elasticsearch nested range filter script
<p>I have an elasticsearch range aggregation problem.</p>&#xA;&#xA;<p>I have a nested object called "prices" in an nested "object" called "products".&#xA;in this sub nested object prices I have different prices for different countries and currencies. now I wanna use a range aggregation, but this ones loop over all price items and returns a big range aggregation.&#xA;now I want to use a script to filter curriencies and country price. but my if clause never got a return value.</p>&#xA;&#xA;<pre><code>"script": "if(doc['currency']=='GBP') { doc['price']; } else 0"&#xA;</code></pre>&#xA;&#xA;<p>here is my code for query</p>&#xA;&#xA;<pre><code>"aggs": {&#xA;    "products": {&#xA;        "nested": {&#xA;            "path": "products"&#xA;        },&#xA;        "aggs": {&#xA;            "prices": {&#xA;                "nested": {&#xA;                    "path": "products.prices"&#xA;                },&#xA;                "aggs": {&#xA;                    "range": {&#xA;                        "range": {&#xA;                            "field": "products.prices.price",&#xA;                            "script": "if(doc['currency']=='GBP') { doc['price']; } else 0",&#xA;                            "params": {&#xA;                                "currency": "GBP",&#xA;                                "country": "GB"&#xA;                            },&#xA;                            "ranges": [&#xA;                                {&#xA;                                    "to": 50&#xA;                                },&#xA;                                {&#xA;                                    "from": 50,&#xA;                                    "to": 100&#xA;                                },&#xA;                                {&#xA;                                    "from": 100&#xA;                                }&#xA;                            ]&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and my mapping</p>&#xA;&#xA;<pre><code>{&#xA;"settings": {&#xA;    "index": {&#xA;        "number_of_shards": 2,&#xA;        "number_of_replicas": 1&#xA;    },&#xA;    "analysis": {&#xA;        "filter": {&#xA;            "nGram_filter": {&#xA;                "type": "nGram",&#xA;                "min_gram": 2,&#xA;                "max_gram": 20,&#xA;                "token_chars": ["letter", "digit", "punctuation", "symbol"]&#xA;            }&#xA;        },&#xA;        "analyzer": {&#xA;            "nGram_analyzer": {&#xA;                "type": "custom",&#xA;                "tokenizer": "whitespace",&#xA;                "filter": ["lowercase", "asciifolding", "nGram_filter"]&#xA;            },&#xA;            "whitespace_analyzer": {&#xA;                "type": "custom",&#xA;                "tokenizer": "whitespace",&#xA;                "filter": ["lowercase", "asciifolding"]&#xA;            }&#xA;        }&#xA;    }&#xA;},&#xA;"mappings": {&#xA;    "program": {&#xA;        "properties": {&#xA;            "title": {&#xA;                "type": "string",&#xA;&#xA;                "fields": {&#xA;                    "raw": {&#xA;                        "type": "string",&#xA;                        "index": "not_analyzed"&#xA;                    }&#xA;                }&#xA;            },&#xA;            "products": {&#xA;                "type": "nested",&#xA;                "store": true,&#xA;                "index": "analyzed",&#xA;                "fields": {&#xA;                    "raw": {&#xA;                        "type": "nested",&#xA;                        "index": "not_analyzed"&#xA;                    }&#xA;                },&#xA;                "properties": {&#xA;                    "sku": {&#xA;                        "type": "string",&#xA;                        "store": true,&#xA;                        "index": "analyzed",&#xA;                        "fields": {&#xA;                            "raw": {&#xA;                                "type": "string",&#xA;                                "index": "not_analyzed"&#xA;                            }&#xA;                        }&#xA;                    },&#xA;                    "prices": {&#xA;                        "type": "nested",&#xA;                        "store": true,&#xA;                        "index": "analyzed",&#xA;                        "fields": {&#xA;                            "raw": {&#xA;                                "type": "nested",&#xA;                                "index": "not_analyzed"&#xA;                            }&#xA;                        },&#xA;                        "properties": {&#xA;                            "price": {&#xA;                                "type": "float",&#xA;                                "store": true,&#xA;                                "index": "analyzed",&#xA;                                "null_value": 0,&#xA;                                "analyzer": "english",&#xA;                                "fields": {&#xA;                                    "raw": {&#xA;                                        "type": "float",&#xA;                                        "index": "not_analyzed"&#xA;                                    }&#xA;                                }&#xA;                            },&#xA;                            "price2": {&#xA;                                "include_in_all": false,&#xA;                                "type": "float",&#xA;                                "store": true,&#xA;                                "index": "analyzed",&#xA;                                "null_value": 0,&#xA;                                "fields": {&#xA;                                    "raw": {&#xA;                                        "type": "float",&#xA;                                        "index": "not_analyzed"&#xA;                                    }&#xA;                                }&#xA;                            },&#xA;                            "vat": {&#xA;                                "include_in_all": false,&#xA;                                "type": "float",&#xA;                                "store": true,&#xA;                                "index": "analyzed",&#xA;                                "null_value": 0,&#xA;                                "fields": {&#xA;                                    "raw": {&#xA;                                        "type": "float",&#xA;                                        "index": "not_analyzed"&#xA;                                    }&#xA;                                }&#xA;                            },&#xA;                            "country": {&#xA;                                "include_in_all": false,&#xA;                                "type": "string",&#xA;                                "store": true,&#xA;                                "index": "analyzed",&#xA;                                "fields": {&#xA;                                    "raw": {&#xA;                                        "type": "string",&#xA;                                        "index": "not_analyzed"&#xA;                                    }&#xA;                                }&#xA;                            },&#xA;                            "currency": {&#xA;                                "include_in_all": false,&#xA;                                "type": "string",&#xA;                                "store": true,&#xA;                                "index": "analyzed",&#xA;                                "fields": {&#xA;                                    "raw": {&#xA;                                        "type": "string",&#xA;                                        "index": "not_analyzed"&#xA;                                    }&#xA;                                }&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>}</p>&#xA;
<p>you can try this?</p>&#xA;&#xA;<p><div class="snippet" data-lang="js" data-hide="false">&#xD;&#xA;<div class="snippet-code">&#xD;&#xA;<pre class="snippet-code-js lang-js prettyprint-override"><code>{&#xD;&#xA;    "filtered" : {&#xD;&#xA;        "query" : { "match_all" : {} },&#xD;&#xA;        "filter" : {&#xD;&#xA;            "nested" : {&#xD;&#xA;                "path" : "products",&#xD;&#xA;                "filter" : {&#xD;&#xA;                    "bool" : {&#xD;&#xA;                        "must" : [&#xD;&#xA;                            {&#xD;&#xA;                                "term" : {"prices.currency" : "GBP"}&#xD;&#xA;                            },&#xD;&#xA;                            {&#xD;&#xA;                                "range" : {"range.count" : {"gt" : 5}}&#xD;&#xA;                            }&#xD;&#xA;                        ]&#xD;&#xA;                    }&#xD;&#xA;                },&#xD;&#xA;                "_cache" : true&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;
<p>Filtered is deprecated at this point for ElasticSearch and was replaced with bool.  The new version of this would be the following:</p>&#xA;&#xA;<pre><code>{&#xA;"query" : {&#xA;    "nested" : {&#xA;        "path" : "products",&#xA;        "query" : {&#xA;            "bool" : {&#xA;                "must" : [&#xA;                    {&#xA;                        "term" : {"prices.currency" : "GBP"}&#xA;                    },&#xA;                    {&#xA;                        "range" : {"range.count" : {"gt" : 5}}&#xA;                    }&#xA;                ]}&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here's a reference to the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.x/query-dsl-filtered-query.html" rel="nofollow noreferrer">ElasticSearch documentation</a></p>&#xA;