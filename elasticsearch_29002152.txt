29002152
How to show day names,using date-histogram aggregation in elascticsearch
<p>I have been trying to use date histogram aggregation in elasticsearch and it returns the date as epoch or in yy-mm-dd-mm-ss format. But what I want is to get document count per week day like monday , tuesday etc. Is there any way in which I can do that?</p>&#xA;
<p>You need to go for a different approach.&#xA;Using scripts , you can convert date time into week day.&#xA;On this value if you apply terms aggregation , it should work fine.</p>&#xA;&#xA;<p>Script to convert date time value into weekday</p>&#xA;&#xA;<pre><code>Date date = new Date(doc['created_at'].value) ; &#xA;java.text.SimpleDateFormat format = new java.text.SimpleDateFormat('EEE');&#xA;format.format(date)&#xA;</code></pre>&#xA;&#xA;<p>Query to get the values</p>&#xA;&#xA;<pre><code>{&#xA;  "aggs": {&#xA;    "perWeekDay": {&#xA;      "terms": {&#xA;        "script": "Date date = new Date(doc['created_at'].value) ; java.text.SimpleDateFormat format = new java.text.SimpleDateFormat('EEE');format.format(date)"&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You can also find some more examples on using scripting in aggregations <a href="https://qbox.io/blog/elasticsearch-scripting-aggregations" rel="nofollow">here</a>.</p>&#xA;
<p>I may be missing something, but, isn't the answer simpler than Vineeth's answer?</p>&#xA;&#xA;<pre><code>"aggregations": {&#xA;    "timeslice": {&#xA;        "histogram": {&#xA;            "script": "doc['timestamp'].date.getHourOfDay()",&#xA;            "interval": 1,&#xA;            "min_doc_count": 0,&#xA;            "extended_bounds": {&#xA;                "min": 0,&#xA;                "max": 23&#xA;            },&#xA;            "order": {&#xA;                "_key": "desc"&#xA;            }&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>This is nice, as it'll also include any hours with zero results, and, it'll extend the results to cover the entire 24 hour period (due to the extended_bounds).</p>&#xA;&#xA;<p>You can use 'getDayOfWeek', 'getHourOfDay', ... (see 'Joda time' for more).</p>&#xA;&#xA;<p>This is great for hours, but for days / months it'll give you an number rather than the month name. To work around, you can get the timeslot as a string - <strong>but</strong>, this'll won't work with the extended bounds approach, so you may have empty results (i.e. [Mon, Tues, Fri, Sun]).</p>&#xA;&#xA;<p>In-case you want that, it is here:</p>&#xA;&#xA;<pre><code>"aggregations": {&#xA;    "dayOfWeek": {&#xA;        "terms": {&#xA;            "script": "doc['timestamp'].date.dayOfWeek().getAsText()",&#xA;            "order": {&#xA;                "_term": "asc"&#xA;            }&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>Even if this doesn't help you, hopefully someone else will find it and benefit from it.</p>&#xA;
<p>For ES5 using painless, this works:</p>&#xA;&#xA;<pre><code>"aggs": {&#xA;    "dayOfWeek": {&#xA;        "terms": {&#xA;            "script": {&#xA;                "inline": "doc['date_utc'].date.dayOfWeek",&#xA;                "lang": "painless"&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;