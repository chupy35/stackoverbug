29175655
Elastic Search filter with aggregate like Max or Min
<p>I have simple documents with a scheduleId. I would like to get the count of documents for the most recent ScheduleId. Assuming Max ScheduleId is the most recent, how would we write that query. I have been searching and reading for few hours and could get it to work.</p>&#xA;&#xA;<pre><code>{&#xA;  "aggs": {&#xA;    "max_schedule": {&#xA;      "max": {&#xA;        "field": "ScheduleId"&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>That is getting me the Max ScheduleId and the total count of documents out side of that aggregate. </p>&#xA;&#xA;<p>I would appreciate if someone could help me on how take this aggregate value and apply it as a filter (like a sub query in SQL!).</p>&#xA;
<p>This should do it:</p>&#xA;&#xA;<pre><code>{&#xA;   "aggs": {&#xA;      "max_ScheduleId": {&#xA;         "terms": {&#xA;            "field": "ScheduleId",&#xA;            "order" : { "_term" : "desc" },&#xA;            "size": 1&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The <a href="http://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-terms-aggregation.html" rel="nofollow">terms aggregation</a> will give you document counts for each term, and it works for integers. You just need to order the results by the term instead of by the count (the default). And since you only want the highest <code>ScheduleID</code>, <code>"size":1</code> is adequate.</p>&#xA;&#xA;<p>Here is the code I used to test it:</p>&#xA;&#xA;<p><a href="http://sense.qbox.io/gist/93fb979393754b8bd9b19cb903a64027cba40ece" rel="nofollow">http://sense.qbox.io/gist/93fb979393754b8bd9b19cb903a64027cba40ece</a></p>&#xA;