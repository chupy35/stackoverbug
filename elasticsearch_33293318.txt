33293318
Filtering by bool and has_child with elasticsearch
<p>I have a query in elasticsearch that works just fine:</p>&#xA;&#xA;<pre><code>body =&#xA;  size: opts.size&#xA;  query:          &#xA;    fuzzy_like_this:&#xA;    fields: ['title', 'content']&#xA;      like_text: opts.search&#xA;      fuzziness: 1&#xA;  filter:&#xA;    has_child:&#xA;      type: 'sku'&#xA;      filter:&#xA;        bool:&#xA;          must:&#xA;            range:&#xA;              regular_price:&#xA;                gte: opts.min_price&#xA;                lte: opts.max_price&#xA;  highlight:&#xA;    pre_tags: ['&lt;strong&gt;']&#xA;    post_tags: ['&lt;/strong&gt;']&#xA;    fields:&#xA;      title:&#xA;        force_source: true&#xA;        fragment_size: 150&#xA;        number_of_fragments: 1&#xA;</code></pre>&#xA;&#xA;<p>This gets <code>products</code> whose title or content fuzzy match <code>opts.search</code> and that have <code>skus</code> with the specified price range.  It works.</p>&#xA;&#xA;<p>I'd now like to additionally exclude any <code>products</code> that have the <code>hide_from_catalog</code> boolean set to <code>true</code>.  However making the small change doesn't work as I expect:</p>&#xA;&#xA;<pre><code>body =&#xA;  size: opts.size&#xA;  query:          &#xA;    fuzzy_like_this:&#xA;    fields: ['title', 'content']&#xA;      like_text: opts.search&#xA;      fuzziness: 1&#xA;  filter:&#xA;    ### Adding this causes an error ###&#xA;    bool:                        &#xA;      must_not:                  &#xA;        term:                    &#xA;          hide_from_catalog: true&#xA;    has_child:&#xA;      type: 'sku'&#xA;      filter:&#xA;        bool:&#xA;          must:&#xA;            range:&#xA;              regular_price:&#xA;                gte: opts.min_price&#xA;                lte: opts.max_price&#xA;  highlight:&#xA;    pre_tags: ['&lt;strong&gt;']&#xA;    post_tags: ['&lt;/strong&gt;']&#xA;    fields:&#xA;      title:&#xA;        force_source: true&#xA;        fragment_size: 150&#xA;        number_of_fragments: 1&#xA;</code></pre>&#xA;&#xA;<p>I've played around a little and can't seem to get it working.  The failure looks like so:</p>&#xA;&#xA;<pre><code>SearchPhaseExecutionException[Failed to execute phase [query_fetch],... &#xA;ElasticsearchParseException[Expected field name but got START_OBJECT \"has_child\"]&#xA;</code></pre>&#xA;&#xA;<p>Which I assume is because the filtering is formatted incorrectly.</p>&#xA;&#xA;<p>What would be the right way to add this additional filter?</p>&#xA;
<p>You need to include the <code>has_child</code> filter into the <code>bool</code> filter within a <code>must</code> clause, like this:</p>&#xA;&#xA;<pre><code>body =&#xA;  size: opts.size&#xA;  query:          &#xA;    fuzzy_like_this:&#xA;    fields: ['title', 'content']&#xA;      like_text: opts.search&#xA;      fuzziness: 1&#xA;  filter:&#xA;    bool:                        &#xA;      must_not:                  &#xA;        term:                    &#xA;          hide_from_catalog: true&#xA;      must:                  &#xA;        has_child:&#xA;          type: 'sku'&#xA;          filter:&#xA;            bool:&#xA;              must:&#xA;                range:&#xA;                  regular_price:&#xA;                    gte: opts.min_price&#xA;                    lte: opts.max_price&#xA;  highlight:&#xA;    pre_tags: ['&lt;strong&gt;']&#xA;    post_tags: ['&lt;/strong&gt;']&#xA;    fields:&#xA;      title:&#xA;        force_source: true&#xA;        fragment_size: 150&#xA;        number_of_fragments: 1&#xA;</code></pre>&#xA;