29212365
How can I use filtered with function_score tag
<p>For example, I have defined below mapping.</p>&#xA;&#xA;<pre><code>  "mappings": {&#xA;    "test_type": {&#xA;      "properties": {&#xA;        "itemname": {&#xA;          "type": "string",&#xA;          "store":"yes",&#xA;          "index": "analyzed",&#xA;          "analyzer": "my_analyzer"&#xA;        },&#xA;        "categoryid": {&#xA;          "type": "long",&#xA;          "store":"yes"&#xA;        }&#xA;        "myrank": {&#xA;          "type": "long",&#xA;          "store":"yes"&#xA;        },&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>Mainly, I want to search the "itemname" field.&#xA;And also I want to custom score result like this.</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "function_score": {&#xA;      "boost_mode": "replace",&#xA;      "score_mode": "multiply",&#xA;      "functions": [&#xA;        "script_score": {&#xA;          "script": "_score * 0.7 + doc[\"myrank\"].value / 100 * 0.3"&#xA;        }&#xA;      ],&#xA;      "query": {&#xA;        "query_string": {&#xA;          "query": "test",&#xA;          "default_field": "itemname",&#xA;          "default_operator": "and"&#xA;        }&#xA;      }&#xA;    }&#xA;  },&#xA;  "sort": [&#xA;    "_score"&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I know it works as I expected.</p>&#xA;&#xA;<p>Sometimes I want to search using both itemname and categoryid fields.&#xA;But I can't use the "filtered" tag with function_score.&#xA;I know that if I use filtered tag only, it works like this.</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "filtered": {&#xA;      "query": {&#xA;        "query_string": {&#xA;          "default_field": "itemname",&#xA;          "query": "*"&#xA;        }&#xA;      },&#xA;      "filter": {&#xA;        "term": {&#xA;          "categoryid": "1"&#xA;        }&#xA;      }&#xA;    }&#xA;  },&#xA;  "sort": [&#xA;    "_score"&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I have tried making many type of combination tags between filtered and function_score, but I couldn't get success.</p>&#xA;&#xA;<p>I mean I want to make a DSL like this SQL.</p>&#xA;&#xA;<pre><code>SELECT * FROM test_type WHERE itemname LIKE "%xxxx%" AND categoryid = 1 ORDER BY "_score * 0.7 + doc[\"myrank\"].value / 100 * 0.3"&#xA;</code></pre>&#xA;&#xA;<p>Does anyone know what should I do use both filtered and function_score or is there another way to do filter ?</p>&#xA;&#xA;<p>Thank you for your help.</p>&#xA;
<p>Can you try function score with filter like this ?</p>&#xA;&#xA;<pre><code>{&#xA;  "query": {&#xA;    "function_score": {&#xA;      "boost_mode": "replace",&#xA;      "score_mode": "multiply",&#xA;      "functions": [&#xA;        "filter": { "term": { "categoryid": "1" }},&#xA;        "script_score": {&#xA;          "script": "_score * 0.7 + doc[\"myrank\"].value / 100 * 0.3"&#xA;        }&#xA;      ],&#xA;      "query": {&#xA;        "query_string": {&#xA;          "query": "test",&#xA;          "default_field": "itemname",&#xA;          "default_operator": "and"&#xA;        }&#xA;      }&#xA;    }&#xA;  },&#xA;  "sort": [&#xA;    "_score"&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>UPDATE:</strong></p>&#xA;&#xA;<ul>&#xA;<li><p>The field categoryId should not be analysed if you are using term&#xA;filter on it. Change your mapping to make it not analyzed.</p></li>&#xA;<li><p>Use a filtered query to filter based on categoryId.</p></li>&#xA;</ul>&#xA;&#xA;<p>Can you please try the below query ?</p>&#xA;&#xA;<pre><code>   "query":{  &#xA;      "function_score":{  &#xA;         "query":{  &#xA;            "filtered":{  &#xA;               "query":{  &#xA;                  "query_string":{  &#xA;                     "default_field":"itemname",&#xA;                     "query":"*"&#xA;                  }&#xA;               },&#xA;               "filter":{  &#xA;                  "term":{  &#xA;                     "categoryid":"1"&#xA;                  }&#xA;               }&#xA;            }&#xA;         },&#xA;         "boost_mode":"replace",&#xA;         "score_mode":"multiply",&#xA;         "script_score": {&#xA;           "script": "_score * 0.7 + doc[\"myrank\"].value / 100 * 0.3"&#xA;         }&#xA;      }&#xA;  }&#xA;</code></pre>&#xA;