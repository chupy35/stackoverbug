33740871
ElasticSearch performance when querying by element type
<p>Assume that we have a dataset containing a collection of domains { domain.com, domain2.com } and also a collection of users { user@domain.com, angryuser@domain2.com, elastic@domain3.com }.</p>&#xA;&#xA;<p>Being so lets assume that both domains and users have several attributes in common, such as "domain", and when the attribute name matches, also do the mapping and possible values.</p>&#xA;&#xA;<p>Then we load up our elasticsearch index with all collections separating them by type, domain and user.</p>&#xA;&#xA;<p>Obviously in our system we would have many more users compared to domains so when querying for domain related data, the expectation is that it would be much faster to filter the query by the type of the attribute right?</p>&#xA;&#xA;<p>My question is, having around 5 million users and 200k domains, why is that when my index only contains domain data, users were deleted, queries run much faster than filtering the objects based on their type? Shouldn't it be at least around similar performance ? On my current status we can match 20 domains per second if there are no users on the index, but it drops to 4 when we load up the users, even though we still filter by type.</p>&#xA;&#xA;<p>Maybe it is something that im missing as im new to elasticsearch.</p>&#xA;&#xA;<p>UPDATE:</p>&#xA;&#xA;<p>This is the query basically </p>&#xA;&#xA;<pre><code>"query" : {&#xA;    "flt_field": {&#xA;        "domain_address": {&#xA;            "like_text": "chroma",&#xA;            "fuzziness": 0.3&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And the mapping is something like this </p>&#xA;&#xA;<pre><code>"user": {&#xA;    "properties": {&#xA;        ...,&#xA;        "domain_address": {&#xA;            "type": "string",&#xA;            "boost": 2.4,&#xA;            "similarity": "linear"&#xA;        }&#xA;    }&#xA;},&#xA;"domain": {&#xA;    "properties": {&#xA;        ...,&#xA;        "domain_address": {&#xA;            "type": "string",&#xA;            "boost": 2.4,&#xA;            "similarity": "linear"&#xA;        }&#xA;    }&#xA;} &#xA;</code></pre>&#xA;&#xA;<p>Other fields in .... but their mapping should not influence the outcome ???</p>&#xA;