34189906
How do you map a field as a generic object in elasticsearch? (doesn't need to be indexed)
<p>Let's say I have this this data:</p>&#xA;&#xA;<pre><code>{&#xA;  "field1": {&#xA;    "foo":"bar"&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I would like to map "field1" as an Any object, if possible. I don't need to index it, if that makes it easier. I don't know what the structure of field1 is and can change. So I should be able to update my type to something like:</p>&#xA;&#xA;<pre><code>{&#xA;    "field1": {&#xA;        "foo": 123&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is this possible? Right now it seems I have to know the mappings of the fields in the "field1" object and cannot deviate from it (except add new fields inside). </p>&#xA;
<p>You <strong>can</strong> tell ES what your field mappings are but you are <strong>not required</strong> to.  Telling ES what your fields are is helpful for ensuring consistency.</p>&#xA;&#xA;<p>That being said, if you just start sending ES a new field it will accept it and create a mapping for it automatically.</p>&#xA;&#xA;<p>In your example when ES sees the new field "foo" with a value of "bar" it's going to automatically create a mapping of "foo" to type "string".</p>&#xA;&#xA;<p>The next time you send in "foo" with a value of 123 ES will still accept that field, but it will be stored as a string.</p>&#xA;&#xA;<p>Good news: ES automatically allows you to do this&#xA;Bad news: you can't run "Range" queries on that field (the SQL Equivilent would be: <code>WHERE FOO &gt; 200</code>)</p>&#xA;