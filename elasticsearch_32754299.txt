32754299
Elasticsearch display number value as string
<p>I found bellow data in elasticsearch that confused me :</p>&#xA;&#xA;<pre><code> {&#xA;    "_index": "statsd-2015.09.24",&#xA;    "_type": "counter",&#xA;    "_id": "AU__eqbL4jN5fst_IEyK",&#xA;    "_score": 1,&#xA;    "_source": {&#xA;       "ns": "statsd",&#xA;       "grp": "bad_lines_seen",&#xA;       "tgt": "",&#xA;       "act": "",&#xA;       "val": 0,&#xA;       "@timestamp": 1443072093000&#xA;    }&#xA; },&#xA; {&#xA;    "_index": "statsd-2015.09.24",&#xA;    "_type": "counter",&#xA;    "_id": "AU__fKQM4jN5fst_IEy_",&#xA;    "_score": 1,&#xA;    "_source": {&#xA;       "ns": "statsd",&#xA;       "grp": "bad_lines_seen",&#xA;       "tgt": "",&#xA;       "act": "",&#xA;       "val": "0",&#xA;       "@timestamp": "1443072852000"&#xA;    }&#xA; }&#xA;</code></pre>&#xA;&#xA;<p>Why the field <strong>val</strong> and <strong>timestamp</strong> are displayed in different formats?</p>&#xA;&#xA;<ul>&#xA;<li>In first document , they are numbers</li>&#xA;<li>In second document, they are strings</li>&#xA;</ul>&#xA;&#xA;<p>They are in the same index and type whose mapping is :</p>&#xA;&#xA;<pre><code>{&#xA;   "statsd-2015.09.24": {&#xA;      "mappings": {&#xA;         "counter": {&#xA;            "properties": {&#xA;               "@timestamp": {&#xA;                  "type": "date",&#xA;                  "format": "dateOptionalTime"&#xA;               },&#xA;               "act": {&#xA;                  "type": "string",&#xA;                  "index": "not_analyzed"&#xA;               },&#xA;               "grp": {&#xA;                  "type": "string",&#xA;                  "index": "not_analyzed"&#xA;               },&#xA;               "ns": {&#xA;                  "type": "string",&#xA;                  "index": "not_analyzed"&#xA;               },&#xA;               "tgt": {&#xA;                  "type": "string",&#xA;                  "index": "not_analyzed"&#xA;               },&#xA;               "val": {&#xA;                  "type": "long"&#xA;               }&#xA;            }&#xA;         }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How is this possible ?</p>&#xA;
<p>You have found differences between field types in the <strong>source</strong> of the documents. The <code>_source</code> is the original JSON submitted to ElasticSearch to index a document. </p>&#xA;&#xA;<p>However, it isn't what is actually indexed : this is just stored for other purposes (more information can be found in the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-source-field.html" rel="nofollow">documentation</a>).</p>&#xA;&#xA;<p>In your case, the <code>val</code> is mapped as a <code>long</code> field, so the string value provided in the second document is in fact parsed to its long value.</p>&#xA;&#xA;<p>You can check this easily : try to index a document like this</p>&#xA;&#xA;<pre><code>{&#xA;  "ns": "statsd",&#xA;  "grp": "bad_lines_seen",&#xA;  "tgt": "",&#xA;  "act": "",&#xA;  "val": "abc",&#xA;  "@timestamp": "1443072852000"&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You'll have the following parsing error :</p>&#xA;&#xA;<pre><code>MapperParsingException[failed to parse [val]]; nested: NumberFormatException[For input string: \"abc\"]; &#xA;</code></pre>&#xA;&#xA;<p>So, to answer your question : your values' types are different, but in fact the values are both indexed as <code>long</code> due to parsing.</p>&#xA;