33434304
org.elasticsearch.common.netty.channel.ChannelException: Failed to create a selector
<p>I'm trying to push some records into Elastic search using an <code>API</code> based on <code>Bulk</code> request. Out of 7000 records,only around 1000+ is getting into <code>elastic</code> search without any problem. But the number varies time to time. <code>Elastic</code> search is not making any rejection. The <code>API</code> I have used and exception I got while executing the same is given.</p>&#xA;&#xA;<pre><code>public int getData(String currentDate,String count)&#xA;        throws ClientProtocolException, IOException, ParseException {&#xA;    int x=Integer.parseInt(count);&#xA;    String url= *Some URL*&#xA;    HttpClient client = HttpClientBuilder.create().build();&#xA;    HttpGet request = new HttpGet(url);&#xA;    HttpResponse response = client.execute(request);&#xA;    BufferedReader rd = new BufferedReader(&#xA;        new InputStreamReader(response.getEntity().getContent()));&#xA;    JsonFactory f = new MappingJsonFactory();&#xA;    JsonParser jp = f.createJsonParser(rd);&#xA;    JsonToken current = null;&#xA;    while (jp.nextToken() != JsonToken.END_OBJECT) {&#xA;        try {&#xA;            current = jp.nextToken();&#xA;            JsonNode node = jp.readValueAsTree();&#xA;            if (node != null) {&#xA;                x=x+1;&#xA;                sendDataToES(node,x);&#xA;            } else {&#xA;&#xA;                break;&#xA;            }&#xA;        } catch (Exception e) {&#xA;            logger.info("ES data push failed");&#xA;        }&#xA;    }&#xA;    return x;&#xA;}&#xA;&#xA;&#xA;public void sendDataToES(JsonNode node,int count) throws IOException,&#xA;ParseException {&#xA;&#xA;    String lat = null,lon = null;&#xA;    TransportClient client = getClient().addTransportAddress(&#xA;            new InetSocketTransportAddress("localhost", 9300));&#xA;    BulkRequestBuilder bulkRequest = client.prepareBulk();&#xA;    XContentBuilder jsonObject = XContentFactory.jsonBuilder()&#xA;            .startObject();&#xA;    Iterator&lt;Entry&lt;String, JsonNode&gt;&gt; entry = node.fields();&#xA;    Entry&lt;String, JsonNode&gt; a = null;&#xA;    while (entry.hasNext()) {&#xA;        try {&#xA;            a = entry.next();&#xA;            if (a.getKey().equals("longitude")) {&#xA;                  lon=a.getValue().asText();&#xA;&#xA;            }&#xA;            if(a.getKey().equals("latitude")){&#xA;                  lat=a.getValue().asText();&#xA;            }&#xA;            jsonObject.field(a.getKey()).value(a.getValue().asText());&#xA;&#xA;        } catch (Exception e) {&#xA;&#xA;        }&#xA;    }&#xA;    Map&lt;String, String&gt; map= new HashMap&lt;String, String&gt;();&#xA;    map.put("lat", lat);&#xA;    map.put("lon", lon);&#xA;    jsonObject.field("location")&#xA;        .value(map)&#xA;&#xA;    .endObject();&#xA;&#xA;    try&#xA;    {&#xA;    bulkRequest.add(client.prepareIndex("bulk_data", "data",&#xA;            String.valueOf((count))).setSource(jsonObject));&#xA;    BulkResponse bulkResponse = bulkRequest.execute().actionGet();&#xA;    logger.info("Data has been posted to elastic search");&#xA;    if (bulkResponse.hasFailures()) {&#xA;        logger.info("Got failure while pushing data to ES");&#xA;    }&#xA;    }&#xA;    catch(Exception e)&#xA;    {&#xA;        logger.info("Got failure while pushing data to ES");&#xA;    }&#xA;    client.close();&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm getting the following <code>Exception</code>,</p>&#xA;&#xA;<pre><code>org.elasticsearch.common.netty.channel.ChannelException: Failed to create a selector.&#xA;at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioSelector.openSelector(AbstractNioSelector.java:362)&#xA;at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioSelector.&lt;init&gt;(AbstractNioSelector.java:100)&#xA;at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.&lt;init&gt;(AbstractNioWorker.java:52)&#xA;at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.&lt;init&gt;(NioWorker.java:45)&#xA;at org.elasticsearch.common.netty.channel.socket.nio.NioWorkerPool.newWorker(NioWorkerPool.java:44)&#xA;at org.elasticsearch.common.netty.channel.socket.nio.NioWorkerPool.newWorker(NioWorkerPool.java:28)&#xA;at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorkerPool.init(AbstractNioWorkerPool.java:80)&#xA;at org.elasticsearch.common.netty.channel.socket.nio.NioWorkerPool.&lt;init&gt;(NioWorkerPool.java:39)&#xA;at org.elasticsearch.common.netty.channel.socket.nio.NioWorkerPool.&lt;init&gt;(NioWorkerPool.java:33)&#xA;at org.elasticsearch.transport.netty.NettyTransport.createClientBootstrap(NettyTransport.java:319)&#xA;at org.elasticsearch.transport.netty.NettyTransport.doStart(NettyTransport.java:242)&#xA;at org.elasticsearch.common.component.AbstractLifecycleComponent.start(AbstractLifecycleComponent.java:85)&#xA;at org.elasticsearch.transport.TransportService.doStart(TransportService.java:153)&#xA;at org.elasticsearch.common.component.AbstractLifecycleComponent.start(AbstractLifecycleComponent.java:85)&#xA;at org.elasticsearch.client.transport.TransportClient.&lt;init&gt;(TransportClient.java:197)&#xA;at org.elasticsearch.client.transport.TransportClient.&lt;init&gt;(TransportClient.java:133)&#xA;</code></pre>&#xA;
<p>This is the issue with the code</p>&#xA;&#xA;<pre><code>public void sendStatusHistoryToES(JsonNode node,int count) throws IOException,&#xA;ParseException {&#xA;&#xA;    String lat = null,lon = null;&#xA;    TransportClient client = getClient().addTransportAddress(&#xA;            new InetSocketTransportAddress("localhost", 9300));&#xA;</code></pre>&#xA;&#xA;<p>For each bulk request  , another client is created and a new port is opened.&#xA;And eventually its giving no more port exception.</p>&#xA;&#xA;<p>Place the client initialization in constructor or something and things should be fine.</p>&#xA;&#xA;<p>Put the below in constructor - </p>&#xA;&#xA;<pre><code>    TransportClient client = getClient().addTransportAddress(&#xA;            new InetSocketTransportAddress("localhost", 9300));&#xA;</code></pre>&#xA;