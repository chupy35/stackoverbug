32648901
Way to override the doc_count based aggregation
<pre><code>{&#xA; "date": "2015-06-25T17:20:20",&#xA; "ip": "192.138.63.233",&#xA; "ec": "106023",&#xA; "sip": "160.141.161.137",&#xA; "sport": "57735",&#xA; "dip": "128.44.113.244",&#xA; "dport": "389",&#xA; "proto": "udp",&#xA;"bytesin": 125,&#xA;"bytesout": 250&#xA; }&#xA; {&#xA; "date": "2015-06-25T17:20:20",&#xA; "ip": "192.138.63.233",&#xA; "ec": "106023",&#xA; "sip": "160.141.162.162",&#xA; "sport": "53576",&#xA; "siface": "inside",&#xA; "dip": "160.141.147.78",&#xA; "dport": "389",&#xA; "proto": "udp",&#xA;"bytesin": 225,&#xA;"bytesout": 550&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I am a bit new to Elastic Search, We would like to run few aggregations on the above indexed documents.</p>&#xA;&#xA;<p>Our intention is to get the top 10 "dip" fields which are having maximum sum of "bytesin" data.&#xA;My query in sql will be like "select dip, sum(bytesin) data from table group by dip order by sum(bytesin) desc".</p>&#xA;&#xA;<pre><code>currently I am running below GET request in Elastic Search but it is not providing what exactly the above sql query gives.&#xA;&#xA;"aggs": {&#xA; "top-sip": {&#xA; "terms": {&#xA; "field": "dip",&#xA; "size": 10,&#xA; "order": {&#xA; "totalbytes": "desc"&#xA; }&#xA; },&#xA; "aggs": {&#xA; "totalbytes": {&#xA; "sum": {&#xA; "field" : "bytesin"&#xA; }&#xA; }&#xA; }&#xA; }&#xA; }&#xA;</code></pre>&#xA;&#xA;<p>The above aggregation retrieves the top 10 "dips" with respect to doc_count and then it aggregates the "bytesin" field for those top "dips".</p>&#xA;&#xA;<p>But what I expect(sql query) is, group the "dips" and aggregates the "bytesin" field for the grouped dip's. Finally it retreive the top 10 dips with respect to sum(bytesin). This is a way to override the default aggregation on ‘doc_count’ of a field. For my use-case, identifying the top dips which are involved in consuming highest bandwidth (here bytesin field).</p>&#xA;&#xA;<p>Can any one suggest me how to execute the aggregation to get the expected result.</p>&#xA;