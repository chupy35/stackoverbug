31712933
Elasticsearch Aggregation over indexed list is out of order and deduplicated
<p>When I've indexed <code>nums</code>, a list of floats, I expect that aggregations have access to that exact data. Instead, what I'm seeing is that <code>doc['nums']</code> is behaving more like a set. That is, it de-duplicates elements from my list and sorts them in ascending order. Any workarounds?</p>&#xA;&#xA;<pre class="lang-bash prettyprint-override"><code>#! /bin/sh&#xA;&#xA;# Delete the index&#xA;curl -XDELETE "http://localhost:9200/test"&#xA;&#xA;# Insert a document with one field -- a list of floats&#xA;curl -XPUT "http://localhost:9200/test/doc/1?refresh=true" -d '{&#xA;  "nums": [5.0, 3.5, 3.5, 1.0]&#xA;}'&#xA;&#xA;# Expected:&#xA;# aggregations.foobar.value == [5.0, 3.5, 3.5, 1.0]&#xA;&#xA;# Actual:&#xA;# aggregations.foobar.value == [1.0, 3.5, 5.0]&#xA;curl -XGET "http://localhost:9200/test/_search" -d '{&#xA;    "query": {&#xA;        "match_all": {}&#xA;    },&#xA;    "filter": {},&#xA;    "aggregations": {&#xA;        "foobar": {&#xA;            "scripted_metric": {&#xA;                "init_script": "_agg[\"numList\"] = []",&#xA;                "map_script": "if (doc != null) { _agg.numList.add(doc[\"nums\"].getValues()) }",&#xA;                "combine_script": "return _agg.numList",&#xA;                "reduce_script": "return _aggs.flatten()"&#xA;            }&#xA;        }&#xA;    }&#xA;}'&#xA;</code></pre>&#xA;
<p>The 'deduplication' is happening not because of the aggregation, but earlier - at the index phase. As long as the field is being mapped as "float", it will behave like a set of numbers and remove duplicates. &#xA;The only way to save duplicates in aggregation is to reference the <code>_source</code> of the document, given that it was stored</p>&#xA;&#xA;<pre><code>{&#xA;    "query": {&#xA;        "match_all": {}&#xA;    },&#xA;    "aggs": {&#xA;        "foobar": {&#xA;            "terms": {&#xA;                "script": "groovy.json.JsonOutput.toJson(_source.nums)"&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;