32779618
Elasticsearch search against another field
<p>I need to match content against a list of words (for obscene word matching). As a simple example of what I need.</p>&#xA;&#xA;<pre><code>{&#xA;  "bool": {&#xA;    "should": [&#xA;      { "term": { "content": "word1" }},&#xA;      { "term": { "content": "word2" }}&#xA;           :&#xA;      { "term": { "content": "word1001" }}&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The words I am looking for 'word1', 'word1', ... 'word1001' are listed in another fields in another type.</p>&#xA;&#xA;<p>What I need to achieve is something like</p>&#xA;&#xA;<pre><code>{&#xA;  "bool": {&#xA;    "should": [&#xA;      { "term": { "content": banned_words.word }},&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The words I need to match may number into the thousands, and the above boolean does not seem the most efficient. However, I cannot find an alternative to this.</p>&#xA;
<p>Another way of achieving this without matching all the bad words at query time is to match those words at indexing time using the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-synonym-tokenfilter.html" rel="nofollow"><code>synonym</code> token filter</a> and flag the documents containing bad words.</p>&#xA;&#xA;<p>All you have to do is to store your bad words in a file on your file system (in Elasticsearch home directory):</p>&#xA;&#xA;<p><code>analysis/badwords.txt</code>:</p>&#xA;&#xA;<pre><code>word1 =&gt; BADWORD      &lt;--- pick whatever you want the badword to be replaced with&#xA;word2 =&gt; BADWORD&#xA;...&#xA;word1000 =&gt; BADWORD&#xA;</code></pre>&#xA;&#xA;<p>Then your index settings need to use that <code>synonym</code> token filter</p>&#xA;&#xA;<pre><code>curl -XPUT localhost:9200/my_index -d '{&#xA;    "settings" : {&#xA;        "analysis" : {&#xA;            "analyzer" : {&#xA;                "badwords" : {&#xA;                    "tokenizer" : "whitespace",&#xA;                    "filter" : ["synonym"]&#xA;                }&#xA;            },&#xA;            "filter" : {&#xA;                "synonym" : {&#xA;                    "type" : "synonym",&#xA;                    "synonyms_path" : "analysis/badwords.txt"&#xA;                }&#xA;            }&#xA;        }&#xA;    },&#xA;    "mappings": {&#xA;        "my_type": {&#xA;            "properties": {&#xA;                "content": {&#xA;                    "type": "string",&#xA;                    "index_analyzer": "badwords"&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}'&#xA;</code></pre>&#xA;&#xA;<p>Then when you index your documents with a <code>content</code> field containing some bad word matching the ones in your <code>badwords.txt</code> file, it will get properly replaced by the substitution word you chose in your synonyms file.</p>&#xA;&#xA;<pre><code>curl -XPOST 'localhost:9200/my_index/_analyze?analyzer=badwords&amp;pretty' -d 'you are a word2'&#xA;{&#xA;  "tokens" : [ {&#xA;    "token" : "you",&#xA;    "start_offset" : 0,&#xA;    "end_offset" : 3,&#xA;    "type" : "word",&#xA;    "position" : 1&#xA;  }, {&#xA;    "token" : "are",&#xA;    "start_offset" : 4,&#xA;    "end_offset" : 7,&#xA;    "type" : "word",&#xA;    "position" : 2&#xA;  }, {&#xA;    "token" : "a",&#xA;    "start_offset" : 8,&#xA;    "end_offset" : 9,&#xA;    "type" : "word",&#xA;    "position" : 3&#xA;  }, {&#xA;    "token" : "BADWORD",&#xA;    "start_offset" : 10,&#xA;    "end_offset" : 14,&#xA;    "type" : "SYNONYM",&#xA;    "position" : 4&#xA;  } ]&#xA;}&#xA;</code></pre>&#xA;