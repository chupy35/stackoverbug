31607797
Multiple indexes or multiple shards?
<p>I have a set of document storage machines 1..N, which all store documents with identical schema (i.e. all with a single elasticsearch mapping),  I'm not sure how to implement the elasticsearch index for the complete content to cope with this use case:  </p>&#xA;&#xA;<p>A machine K's content has changed and needs to be completely reindexed without affecting the rest of the index (i.e. the documents held on the other machines).</p>&#xA;&#xA;<p>Do I</p>&#xA;&#xA;<ul>&#xA;<li>Create a single index and N shards, use routing to control the&#xA;shard each storage machine uses, then when a store K needs to be&#xA;reindexed, delete and index the corresponding shard</li>&#xA;</ul>&#xA;&#xA;<p>or</p>&#xA;&#xA;<ul>&#xA;<li>Create multiple indexes with the same mapping,  myindex/1 ..&#xA;myindex/N, and make sure each store K only talks to myindex/K</li>&#xA;</ul>&#xA;&#xA;<p>The problem I'm having with the first option, which feels more correct, is that I don't really understand routing:  I believe the routing is just a hash so I can't just use "K" for the routing and get shard K - I get shard hash(K)).  Which means I can't guarantee that shard K contains <strong>all</strong> and <strong>only</strong> the documents for store K.</p>&#xA;
<p>The first option I think. Each document is stored on a primary shard, that's why Es needs to know which this is. That's the idea of dividing your big index.</p>&#xA;&#xA;<p>See this link with formula and explanation: <a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/routing-value.html" rel="nofollow">https://www.elastic.co/guide/en/elasticsearch/guide/current/routing-value.html</a></p>&#xA;