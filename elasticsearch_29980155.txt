29980155
Elasticsearch: aggregate over a user-defined set of buckets?
<p>Let's say I want to do an aggregation over an index of server logs, and I want separate results for mobile and non-mobile devices. I.e. if the browser type is in  a certain list, then put results in the mobile bucket, else put results in the non-mobile bucket.</p>&#xA;&#xA;<p>I tried something like this: (including a straightforward breakdown over browser type for comparison)</p>&#xA;&#xA;<pre><code>{&#xA;    "aggs": {&#xA;        "group_by_mobility": {&#xA;            "filters": {&#xA;                "filters": {&#xA;                    "mobile": {&#xA;                        "terms": {&#xA;                            "browser.os.family": [&#xA;                                "Android",&#xA;                                "iOS",&#xA;                                "Windows Phone",&#xA;                                "Blackberry OS"&#xA;                            ]&#xA;                        }&#xA;                    },&#xA;                    "non-mobile": {&#xA;                        "not": {&#xA;                            "terms": {&#xA;                                "browser.os.family": [&#xA;                                    "Android",&#xA;                                    "iOS",&#xA;                                    "Windows Phone",&#xA;                                    "Blackberry OS"&#xA;                                ]&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        },&#xA;        "group_by_browser": {&#xA;            "terms": {&#xA;                "field": "browser.os.family",&#xA;                "size": 0&#xA;            }&#xA;        }&#xA;    },&#xA;    "size": 0&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This runs, but the answers don't look right. I get for the first aggregation:</p>&#xA;&#xA;<pre><code>"group_by_mobility" : {&#xA;    "buckets" : {&#xA;        "mobile" : {&#xA;        "doc_count" : 122250&#xA;        },&#xA;        "non-mobile" : {&#xA;            "doc_count" : 711658&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If I add up the numbers in the second aggregation output for the mobile browsers, I get 122404, which is in the same ball park. However, the sum for all other browser types is 304177, which is nowhere near 711658.</p>&#xA;&#xA;<p>Am I taking the wrong approach? Thanks for any hints.</p>&#xA;
<p>What you want is to run 2 separate aggregations that each have different filter criteria.  Here is the pseudo code:</p>&#xA;&#xA;<pre><code>GET index1/type1/_search&#xA;{&#xA;  "size": 0,&#xA;  "aggs": {&#xA;    "ag1": {&#xA;      "filter": {&#xA;        "terms": {&#xA;          "authInput.address.address1": [&#xA;            "Android",&#xA;            "iOS",&#xA;            "Windows Phone",&#xA;            "Blackberry OS"&#xA;          ]&#xA;        }&#xA;      },&#xA;      "aggs": {&#xA;        "ag1.terms1": {&#xA;          "terms": {&#xA;            "field": "authInput.address.address1",&#xA;            "size": 10&#xA;          }&#xA;        }&#xA;      }&#xA;    },&#xA;    "ag2": {&#xA;      "filter": {&#xA;        "not": {&#xA;          "filter": {&#xA;            "terms": {&#xA;              "authInput.address.address1": [&#xA;                "Android",&#xA;                "iOS",&#xA;                "Windows Phone",&#xA;                "Blackberry OS"&#xA;              ]&#xA;            }&#xA;          }&#xA;        }&#xA;      },&#xA;      "aggs": {&#xA;        "ag2.terms1": {&#xA;          "terms": {&#xA;            "field": "authInput.address.address1",&#xA;            "size": 10&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;