29154854
elasticsearch boost by popularity when field could be missing
<p>In the documentation <a href="http://www.elastic.co/guide/en/elasticsearch/guide/current/boosting-by-popularity.html#CO112-4" rel="nofollow">http://www.elastic.co/guide/en/elasticsearch/guide/current/boosting-by-popularity.html#CO112-4</a> it is explained how to boost docs according to a numeric field. But the <code>field_value_factor</code> doesn't work if a field is absent for any of the documents. What's the best way around that when a field is necessarily absent sometimes? </p>&#xA;
<p>The way to do this is e.g. </p>&#xA;&#xA;<pre><code>{&#xA;   "query":{&#xA;      "function_score":{&#xA;         "functions":[&#xA;            {&#xA;               "filter":{&#xA;                  "exists":{&#xA;                     "field":"views"&#xA;                  }&#xA;               },&#xA;               "field_value_factor":{&#xA;                  "field":"views",&#xA;                  "factor":1.2,&#xA;                  "modifier":"log1p"&#xA;               }&#xA;            },&#xA;            {&#xA;               "FUNCTION":{}&#xA;            }&#xA;         ]&#xA;      }&#xA;   }&#xA;}  &#xA;</code></pre>&#xA;&#xA;<p>i.e. apply an array of function-filter pairs. The first function checks the field is present (<code>views</code> in my case) and the second has a missing filter (equivalent to <code>match_all</code>) and an empty function - i.e. the score is unmodified.</p>&#xA;