30541386
In elasticsearch, how to make an indexed field to have lucene IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS?
<p>I am trying to use elasticsearch to enhance my image search project which was implemented with Lucene. I'm having a hard time finding a way to config elasticsearch to make an indexed field have Lucene <code>IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS</code>.</p>&#xA;&#xA;<p>The working Lucene indexing code is:</p>&#xA;&#xA;<pre><code>Document doc = new Document();&#xA;&#xA;FieldType myFieldType = new FieldType();&#xA;&#xA;myFieldType.setIndexed(true);&#xA;myFieldType.setOmitNorms(true);&#xA;myFieldType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);  // tell indexer to store image token's positions, offsets, and payloads&#xA;&#xA;myFieldType.setStored(false);&#xA;myFieldType.setTokenized(true);&#xA;myFieldType.freeze();&#xA;&#xA;doc.add(new Field("tokens", tokenStream_w_payload, myFieldType));&#xA;&#xA;indexWriter.addDocument(doc);&#xA;</code></pre>&#xA;&#xA;<p>I had no problems making my analyzer and my query handler as elasticsearch plugins, but using default elasticsearch settings, I cannot get any information about positions, offsets, and payloads from Lucene <code>TermsEnum</code> and <code>DocsAndPositionsEnum</code> objects initialized from the <code>AtomicReaderContext</code> of the index for tokens that I can see there.</p>&#xA;
<p>I found the answer myself. </p>&#xA;&#xA;<p>It appears that I have to implement and plugin my own Analyzer. The common Analyzers seams not to generate and support offsets and payloads.</p>&#xA;&#xA;<p>Here is my working fields mapping: </p>&#xA;&#xA;<pre><code>    curl -XPUT "http://localhost:9200/sm101" -d'&#xA;    {&#xA;       "mappings": {&#xA;         "sample": {&#xA;           "properties": {&#xA;&#xA;             "DOC_ID" : {"type" : "integer", "store" : "yes" },&#xA;             "NAME" : {"type" : "string", "store" : "yes" },&#xA;&#xA;             "tokens": {&#xA;               "type": "string",&#xA;               "store" : "yes",&#xA;               "index" : "analyzed",&#xA;               "analyzer": "image_starmap",&#xA;&#xA;               "index_options" : "offsets",           &#xA;&#xA;               "term_vector": "with_positions_offsets_payloads"&#xA;             },&#xA;&#xA;             "filepath" : {&#xA;               "type": "string",&#xA;               "store" : "yes",&#xA;               "index" : "analyzed"&#xA;             }&#xA;           }&#xA;         }&#xA;       }&#xA;    }'&#xA;</code></pre>&#xA;&#xA;<p>It works nicely with my complex ImageStarmapSpansQuery of image search.</p>&#xA;